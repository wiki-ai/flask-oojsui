{"version":3,"sources":["oojs-ui-windows.js"],"names":["OO","ui","ActionWidget","config","$","extend","framed","parent","call","this","mixin","PendingElement","action","modes","width","height","$element","addClass","inheritClass","ButtonWidget","mixinClass","prototype","hasMode","mode","indexOf","getAction","getModes","slice","propagateResize","isElementAttached","emit","setIcon","IconElement","apply","arguments","setLabel","LabelElement","setFlags","FlaggedElement","clearFlags","toggle","ActionSet","EventEmitter","list","categories","actions","flags","categorized","special","others","organized","changing","changed","static","specialFlags","onActionChange","isSpecial","flag","get","filters","i","len","category","index","match","matches","organize","Array","isArray","length","push","undefined","visible","isVisible","disabled","isDisabled","splice","lastIndexOf","getSpecial","getOthers","setMode","setAbilities","item","setDisabled","forEach","filter","callback","add","connect","click","resize","remove","disconnect","clear","removed","iLen","j","jLen","constructor","hasFlag","Error","message","isPlainObject","jQuery","String","recoverable","warning","initClass","isRecoverable","isWarning","getMessage","clone","text","contents","getMessageText","Process","step","context","steps","next","execute","proceed","deferred","result","Deferred","reject","promise","setTimeout","resolve","isFunction","then","createStep","first","unshift","WindowManager","factory","modal","windows","opening","opened","closing","preparingToOpen","preparingToClose","currentWindow","globalEvents","$returnFocusTo","$ariaHidden","onWindowResizeTimeout","onWindowResizeHandler","onWindowResize","bind","afterWindowResizeHandler","afterWindowResize","toggleClass","Element","sizes","small","medium","large","larger","full","defaultSize","clearTimeout","updateWindowSize","isOpening","win","state","isClosing","isOpened","hasWindow","name","getSetupDelay","getReadyDelay","getHoldDelay","getTeardownDelay","getWindow","Window","lookup","create","addWindows","getCurrentWindow","openWindow","data","manager","when","done","toggleGlobalEvents","toggleAriaIsolation","document","activeElement","setup","notify","ready","closeWindow","always","hold","teardown","focus","append","setManager","removeWindows","names","cleanupWindow","promises","cleanup","detach","clearWindows","Object","keys","isFullscreen","getSize","setDimensions","getSizeProperties","on","scrollWidth","bodyMargin","$body","getElementDocument","body","stackDepth","getElementWindow","orientationchange resize","window","innerWidth","documentElement","clientWidth","parseFloat","css","overflow","margin-right","off","isolate","children","not","parentsUntil","last","attr","removeAttr","destroy","size","$frame","$overlay","$content","$focusTrapBefore","prop","$focusTrapAfter","$focusTraps","onMouseDown","e","target","isInitialized","getManager","viewport","getDimensions","rect","right","left","withoutSizeTransitions","oldTransition","getContentHeight","bodyHeight","bodyStyleObj","style","frameStyleObj","oldHeight","oldPosition","position","getBodyHeight","outerHeight","innerHeight","$head","$foot","scrollHeight","getDir","getSetupProcess","getReadyProcess","getHoldProcess","getTeardownProcess","initialize","setSize","updateSize","dim","styleObj","oldWidth","minWidth","maxWidth","minHeight","maxHeight","$document","onFocusTrapFocused","event","backwards","is","element","findFocusable","open","close","focusTrapHandler","$focus","find","getDocument","blur","removeClass","Dialog","attachedActions","currentAction","onDialogKeyDownHandler","onDialogKeyDown","change","title","escapable","which","Keys","ESCAPE","executeAction","preventDefault","stopPropagation","ENTER","ctrlKey","metaKey","onActionClick","isPending","onActionsChange","detachActions","attachActions","getActions","getActionProcess","setTitle","getActionWidgets","titleId","generateElementId","LabelWidget","id","setPendingElement","widgets","pushPending","popPending","MessageDialog","verticalActionLayout","verbose","label","deferMsg","onResize","dialog","fitActions","toggleVerticalActionLayout","value","$actions","getFlags","$button","oldOverflow","$scrollable","container","reconsiderScrollbars","PanelLayout","scrollable","classes","padded","expanded","other","safe","toggleFramed","primary","previous","$label","outerWidth","ProcessDialog","fitOnOpen","onDismissErrorButtonClick","hideErrors","onRetryButtonClick","$navigation","$location","$safeActions","$primaryActions","$otherActions","dismissButton","msg","retryButton","$errors","$errorsTitle","isMobile","icon","fitLabel","process","fail","errors","showErrors","safeWidth","primaryWidth","biggerWidth","labelWidth","navigationWidth","leftWidth","rightWidth","Math","max","paddingLeft","paddingRight","$item","items","abilities","$errorItems","after","scrollTop","getWindowManager","windowManager","alert","options","confirm","prompt","textInput","TextInputWidget","textField","FieldLayout","align","getValue"],"mappings":";CAUE,SAAWA,GAEb,YAyBAA,GAAGC,GAAGC,aAAe,SAA2BC,GAE/CA,EAASC,EAAEC,QAAUC,QAAQ,GAASH,GAGtCH,EAAGC,GAAGC,aAAaK,OAAOC,KAAMC,KAAMN,GAGtCH,EAAGC,GAAGS,MAAMC,eAAeH,KAAMC,KAAMN,GAGvCM,KAAKG,OAAST,EAAOS,QAAU,GAC/BH,KAAKI,MAAQV,EAAOU,UACpBJ,KAAKK,MAAQ,EACbL,KAAKM,OAAS,EAGdN,KAAKO,SAASC,SAAU,uBAKzBjB,EAAGkB,aAAclB,EAAGC,GAAGC,aAAcF,EAAGC,GAAGkB,cAC3CnB,EAAGoB,WAAYpB,EAAGC,GAAGC,aAAcF,EAAGC,GAAGS,MAAMC,gBAkB/CX,EAAGC,GAAGC,aAAamB,UAAUC,QAAU,SAAWC,GACjD,MAAOd,MAAKI,MAAMW,QAASD,MAAW,GAQvCvB,EAAGC,GAAGC,aAAamB,UAAUI,UAAY,WACxC,MAAOhB,MAAKG,QAYbZ,EAAGC,GAAGC,aAAamB,UAAUK,SAAW,WACvC,MAAOjB,MAAKI,MAAMc,SASnB3B,EAAGC,GAAGC,aAAamB,UAAUO,gBAAkB,WAC9C,GAAId,GAAOC,CAaX,OAXKN,MAAKoB,sBACTf,EAAQL,KAAKO,SAASF,QACtBC,EAASN,KAAKO,SAASD,SAElBD,IAAUL,KAAKK,OAASC,IAAWN,KAAKM,SAC5CN,KAAKK,MAAQA,EACbL,KAAKM,OAASA,EACdN,KAAKqB,KAAM,YAINrB,MAMRT,EAAGC,GAAGC,aAAamB,UAAUU,QAAU,WAKtC,MAHA/B,GAAGC,GAAGS,MAAMsB,YAAYX,UAAUU,QAAQE,MAAOxB,KAAMyB,WACvDzB,KAAKmB,kBAEEnB,MAMRT,EAAGC,GAAGC,aAAamB,UAAUc,SAAW,WAKvC,MAHAnC,GAAGC,GAAGS,MAAM0B,aAAaf,UAAUc,SAASF,MAAOxB,KAAMyB,WACzDzB,KAAKmB,kBAEEnB,MAMRT,EAAGC,GAAGC,aAAamB,UAAUgB,SAAW,WAKvC,MAHArC,GAAGC,GAAGS,MAAM4B,eAAejB,UAAUgB,SAASJ,MAAOxB,KAAMyB,WAC3DzB,KAAKmB,kBAEEnB,MAMRT,EAAGC,GAAGC,aAAamB,UAAUkB,WAAa,WAKzC,MAHAvC,GAAGC,GAAGS,MAAM4B,eAAejB,UAAUkB,WAAWN,MAAOxB,KAAMyB,WAC7DzB,KAAKmB,kBAEEnB,MASRT,EAAGC,GAAGC,aAAamB,UAAUmB,OAAS,WAKrC,MAHAxC,GAAGC,GAAGC,aAAaK,OAAOc,UAAUmB,OAAOP,MAAOxB,KAAMyB,WACxDzB,KAAKmB,kBAEEnB,MAoFRT,EAAGC,GAAGwC,UAAY,SAAwBtC,GAEzCA,EAASA,MAGTH,EAAG0C,aAAalC,KAAMC,MAGtBA,KAAKkC,QACLlC,KAAKmC,YACJC,QAAS,YACTC,MAAO,WACPjC,MAAO,YAERJ,KAAKsC,eACLtC,KAAKuC,WACLvC,KAAKwC,UACLxC,KAAKyC,WAAY,EACjBzC,KAAK0C,UAAW,EAChB1C,KAAK2C,SAAU,GAMhBpD,EAAGoB,WAAYpB,EAAGC,GAAGwC,UAAWzC,EAAG0C,cAgBnC1C,EAAGC,GAAGwC,UAAUY,OAAOC,cAAiB,OAAQ,WAqDhDtD,EAAGC,GAAGwC,UAAUpB,UAAUkC,eAAiB,WAC1C9C,KAAKyC,WAAY,EACZzC,KAAK0C,SACT1C,KAAK2C,SAAU,EAEf3C,KAAKqB,KAAM,WAUb9B,EAAGC,GAAGwC,UAAUpB,UAAUmC,UAAY,SAAW5C,GAChD,GAAI6C,EAEJ,KAAMA,IAAQhD,MAAKuC,QAClB,GAAKpC,IAAWH,KAAKuC,QAASS,GAC7B,OAAO,CAIT,QAAO,GAeRzD,EAAGC,GAAGwC,UAAUpB,UAAUqC,IAAM,SAAWC,GAC1C,GAAIC,GAAGC,EAAKlB,EAAMmB,EAAUjB,EAASkB,EAAOC,EAAOC,CAEnD,IAAKN,EAAU,CACdlD,KAAKyD,WAGLD,IACA,KAAMH,IAAYrD,MAAKsC,YAEtB,GADAJ,EAAOgB,EAASG,GAKf,IAHMK,MAAMC,QAASzB,KACpBA,GAASA,IAEJiB,EAAI,EAAGC,EAAMlB,EAAK0B,OAAQT,EAAIC,EAAKD,IACxCf,EAAUpC,KAAKsC,YAAae,GAAYnB,EAAMiB,IACzCO,MAAMC,QAASvB,IACnBoB,EAAQK,KAAKrC,MAAOgC,EAASpB,EAMjC,KAAMe,EAAI,EAAGC,EAAMI,EAAQI,OAAQT,EAAIC,EAAKD,IAC3CI,EAAQC,EAASL,IAEMW,SAApBZ,EAAQa,SAAyBR,EAAMS,cAAgBd,EAAQa,SAC1CD,SAArBZ,EAAQe,UAA0BV,EAAMW,eAAiBhB,EAAQe,YAEnET,EAAQW,OAAQhB,EAAG,GACnBC,IACAD,IAIF,KAAMA,EAAI,EAAGC,EAAMI,EAAQI,OAAQT,EAAIC,EAAKD,IAG3C,IAFAI,EAAQC,EAASL,GACjBG,EAAQE,EAAQY,YAAab,GACrBD,IAAUH,GACjBK,EAAQW,OAAQb,EAAO,GACvBF,IACAE,EAAQE,EAAQY,YAAab,EAG/B,OAAOC,GAER,MAAOxD,MAAKkC,KAAKhB,SAWlB3B,EAAGC,GAAGwC,UAAUpB,UAAUyD,WAAa,WAEtC,MADArE,MAAKyD,WACE9D,EAAEC,UAAYI,KAAKuC,UAU3BhD,EAAGC,GAAGwC,UAAUpB,UAAU0D,UAAY,WAErC,MADAtE,MAAKyD,WACEzD,KAAKwC,OAAOtB,SAapB3B,EAAGC,GAAGwC,UAAUpB,UAAU2D,QAAU,SAAWzD,GAC9C,GAAIqC,GAAGC,EAAKjD,CAGZ,KADAH,KAAK0C,UAAW,EACVS,EAAI,EAAGC,EAAMpD,KAAKkC,KAAK0B,OAAQT,EAAIC,EAAKD,IAC7ChD,EAASH,KAAKkC,KAAMiB,GACpBhD,EAAO4B,OAAQ5B,EAAOU,QAASC,GAOhC,OAJAd,MAAKyC,WAAY,EACjBzC,KAAK0C,UAAW,EAChB1C,KAAKqB,KAAM,UAEJrB,MAcRT,EAAGC,GAAGwC,UAAUpB,UAAU4D,aAAe,SAAWpC,GACnD,GAAIe,GAAGC,EAAKjD,EAAQsE,CAEpB,KAAMtB,EAAI,EAAGC,EAAMpD,KAAKkC,KAAK0B,OAAQT,EAAIC,EAAKD,IAC7CsB,EAAOzE,KAAKkC,KAAMiB,GAClBhD,EAASsE,EAAKzD,YACa8C,SAAtB1B,EAASjC,IACbsE,EAAKC,aAActC,EAASjC,GAI9B,OAAOH,OAcRT,EAAGC,GAAGwC,UAAUpB,UAAU+D,QAAU,SAAWC,EAAQC,GAStD,MARA7E,MAAK2C,SAAU,EACf3C,KAAK0C,UAAW,EAChB1C,KAAKiD,IAAK2B,GAASD,QAASE,GAC5B7E,KAAK0C,UAAW,EACX1C,KAAK2C,SACT3C,KAAKqB,KAAM,UAGLrB,MAWRT,EAAGC,GAAGwC,UAAUpB,UAAUkE,IAAM,SAAW1C,GAC1C,GAAIe,GAAGC,EAAKjD,CAGZ,KADAH,KAAK0C,UAAW,EACVS,EAAI,EAAGC,EAAMhB,EAAQwB,OAAQT,EAAIC,EAAKD,IAC3ChD,EAASiC,EAASe,GAClBhD,EAAO4E,QAAS/E,MACfgF,OAAS,OAAQ,QAAS7E,GAC1B8E,QAAU,OAAQ,SAAU9E,GAC5B4B,QAAU,oBAEX/B,KAAKkC,KAAK2B,KAAM1D,EAOjB,OALAH,MAAKyC,WAAY,EACjBzC,KAAKqB,KAAM,MAAOe,GAClBpC,KAAK0C,UAAW,EAChB1C,KAAKqB,KAAM,UAEJrB,MAaRT,EAAGC,GAAGwC,UAAUpB,UAAUsE,OAAS,SAAW9C,GAC7C,GAAIe,GAAGC,EAAKE,EAAOnD,CAGnB,KADAH,KAAK0C,UAAW,EACVS,EAAI,EAAGC,EAAMhB,EAAQwB,OAAQT,EAAIC,EAAKD,IAC3ChD,EAASiC,EAASe,GAClBG,EAAQtD,KAAKkC,KAAKnB,QAASZ,GACtBmD,KAAU,IACdnD,EAAOgF,WAAYnF,MACnBA,KAAKkC,KAAKiC,OAAQb,EAAO,GAQ3B,OALAtD,MAAKyC,WAAY,EACjBzC,KAAKqB,KAAM,SAAUe,GACrBpC,KAAK0C,UAAW,EAChB1C,KAAKqB,KAAM,UAEJrB,MAYRT,EAAGC,GAAGwC,UAAUpB,UAAUwE,MAAQ,WACjC,GAAIjC,GAAGC,EAAKjD,EACXkF,EAAUrF,KAAKkC,KAAKhB,OAGrB,KADAlB,KAAK0C,UAAW,EACVS,EAAI,EAAGC,EAAMpD,KAAKkC,KAAK0B,OAAQT,EAAIC,EAAKD,IAC7ChD,EAASH,KAAKkC,KAAMiB,GACpBhD,EAAOgF,WAAYnF,KAUpB,OAPAA,MAAKkC,QAELlC,KAAKyC,WAAY,EACjBzC,KAAKqB,KAAM,SAAUgE,GACrBrF,KAAK0C,UAAW,EAChB1C,KAAKqB,KAAM,UAEJrB,MAYRT,EAAGC,GAAGwC,UAAUpB,UAAU6C,SAAW,WACpC,GAAIN,GAAGmC,EAAMC,EAAGC,EAAMxC,EAAM7C,EAAQkD,EAAUnB,EAAMuC,EAAMlC,EACzDM,EAAe7C,KAAKyF,YAAY7C,OAAOC,YAExC,KAAM7C,KAAKyC,UAAY,CAItB,IAHAzC,KAAKsC,eACLtC,KAAKuC,WACLvC,KAAKwC,UACCW,EAAI,EAAGmC,EAAOtF,KAAKkC,KAAK0B,OAAQT,EAAImC,EAAMnC,IAE/C,GADAhD,EAASH,KAAKkC,KAAMiB,GACfhD,EAAO6D,YAAc,CAEzB,IAAMX,IAAYrD,MAAKmC,WAQtB,IAPMnC,KAAKsC,YAAae,KACvBrD,KAAKsC,YAAae,OAEnBnB,EAAO/B,EAAQH,KAAKmC,WAAYkB,MAC1BK,MAAMC,QAASzB,KACpBA,GAASA,IAEJqD,EAAI,EAAGC,EAAOtD,EAAK0B,OAAQ2B,EAAIC,EAAMD,IAC1Cd,EAAOvC,EAAMqD,GACPvF,KAAKsC,YAAae,GAAYoB,KACnCzE,KAAKsC,YAAae,GAAYoB,OAE/BzE,KAAKsC,YAAae,GAAYoB,GAAOZ,KAAM1D,EAK7C,KADAoC,GAAU,EACJgD,EAAI,EAAGC,EAAO3C,EAAae,OAAQ2B,EAAIC,EAAMD,IAElD,GADAvC,EAAOH,EAAc0C,IACfvF,KAAKuC,QAASS,IAAU7C,EAAOuF,QAAS1C,GAAS,CACtDhD,KAAKuC,QAASS,GAAS7C,EACvBoC,GAAU,CACV,OAGIA,GACLvC,KAAKwC,OAAOqB,KAAM1D,GAIrBH,KAAKyC,WAAY,EAGlB,MAAOzC,OA+BRT,EAAGC,GAAGmG,MAAQ,SAAoBC,EAASlG,GAErCH,EAAGsG,cAAeD,IAAwB9B,SAAXpE,IACnCA,EAASkG,EACTA,EAAUlG,EAAOkG,SAIlBlG,EAASA,MAGTM,KAAK4F,QAAUA,YAAmBE,QAASF,EAAUG,OAAQH,GAC7D5F,KAAKgG,YAAqClC,SAAvBpE,EAAOsG,eAA+BtG,EAAOsG,YAChEhG,KAAKiG,UAAYvG,EAAOuG,SAKzB1G,EAAG2G,UAAW3G,EAAGC,GAAGmG,OAWpBpG,EAAGC,GAAGmG,MAAM/E,UAAUuF,cAAgB,WACrC,MAAOnG,MAAKgG,aAUbzG,EAAGC,GAAGmG,MAAM/E,UAAUwF,UAAY,WACjC,MAAOpG,MAAKiG,SAQb1G,EAAGC,GAAGmG,MAAM/E,UAAUyF,WAAa,WAClC,MAAOrG,MAAK4F,kBAAmBE,QAC9B9F,KAAK4F,QAAQU,QACb3G,EAAG,SAAU4G,KAAMvG,KAAK4F,SAAUY,YAQpCjH,EAAGC,GAAGmG,MAAM/E,UAAU6F,eAAiB,WACtC,MAAOzG,MAAK4F,kBAAmBE,QAAS9F,KAAK4F,QAAQW,OAASvG,KAAK4F,SA0BpErG,EAAGC,GAAGkH,QAAU,SAAWC,EAAMC,GAEhC5G,KAAK6G,SAGS/C,SAAT6C,GACJ3G,KAAK8G,KAAMH,EAAMC,IAMnBrH,EAAG2G,UAAW3G,EAAGC,GAAGkH,SAWpBnH,EAAGC,GAAGkH,QAAQ9F,UAAUmG,QAAU,WAUjC,QAASC,GAASL,GACjB,MAAO,YAEN,GAAIM,GACHC,EAASP,EAAK9B,SAAS9E,KAAM4G,EAAKC,QAEnC,IAAKM,KAAW,EAEf,MAAOvH,GAAEwH,WAAWC,WAAaC,SAElC,IAAuB,gBAAXH,GAAsB,CACjC,GAAKA,EAAS,EACb,KAAM,IAAIvB,OAAO,2DAKlB,OAFAsB,GAAWtH,EAAEwH,WACbG,WAAYL,EAASM,QAASL,GACvBD,EAASI,UAEjB,MAAKH,aAAkB3H,GAAGC,GAAGmG,MAErBhG,EAAEwH,WAAWC,QAAUF,IAAWG,UAErC3D,MAAMC,QAASuD,IAAYA,EAAOtD,QAAUsD,EAAQ,YAAe3H,GAAGC,GAAGmG,MAEtEhG,EAAEwH,WAAWC,OAAQF,GAASG,UAGjCH,GAAUvH,EAAE6H,WAAYN,EAAOG,SAE5BH,EAAOG,UAGR1H,EAAEwH,WAAWI,UAAUF,WA1ChC,GAAIlE,GAAGC,EAAKiE,CA8CZ,IAAKrH,KAAK6G,MAAMjD,OAGf,IADAyD,EAAUL,EAAShH,KAAK6G,MAAO,MACzB1D,EAAI,EAAGC,EAAMpD,KAAK6G,MAAMjD,OAAQT,EAAIC,EAAKD,IAC9CkE,EAAUA,EAAQI,KAAMT,EAAShH,KAAK6G,MAAO1D,SAG9CkE,GAAU1H,EAAEwH,WAAWI,UAAUF,SAGlC,OAAOA,IAqBR9H,EAAGC,GAAGkH,QAAQ9F,UAAU8G,WAAa,SAAWf,EAAMC,GACrD,GAAqB,gBAATD,IAAqBhH,EAAE6H,WAAYb,EAAKU,SACnD,OACCxC,SAAU,WACT,MAAO8B,IAERC,QAAS,KAGX,IAAKjH,EAAE6H,WAAYb,GAClB,OACC9B,SAAU8B,EACVC,QAASA,EAGX,MAAM,IAAIjB,OAAO,qEAUlBpG,EAAGC,GAAGkH,QAAQ9F,UAAU+G,MAAQ,SAAWhB,EAAMC,GAEhD,MADA5G,MAAK6G,MAAMe,QAAS5H,KAAK0H,WAAYf,EAAMC,IACpC5G,MAURT,EAAGC,GAAGkH,QAAQ9F,UAAUkG,KAAO,SAAWH,EAAMC,GAE/C,MADA5G,MAAK6G,MAAMhD,KAAM7D,KAAK0H,WAAYf,EAAMC,IACjC5G,MA2DRT,EAAGC,GAAGqI,cAAgB,SAA4BnI,GAEjDA,EAASA,MAGTH,EAAGC,GAAGqI,cAAc/H,OAAOC,KAAMC,KAAMN,GAGvCH,EAAG0C,aAAalC,KAAMC,MAGtBA,KAAK8H,QAAUpI,EAAOoI,QACtB9H,KAAK+H,MAAyBjE,SAAjBpE,EAAOqI,SAAyBrI,EAAOqI,MACpD/H,KAAKgI,WACLhI,KAAKiI,QAAU,KACfjI,KAAKkI,OAAS,KACdlI,KAAKmI,QAAU,KACfnI,KAAKoI,gBAAkB,KACvBpI,KAAKqI,iBAAmB,KACxBrI,KAAKsI,cAAgB,KACrBtI,KAAKuI,cAAe,EACpBvI,KAAKwI,eAAiB,KACtBxI,KAAKyI,YAAc,KACnBzI,KAAK0I,sBAAwB,KAC7B1I,KAAK2I,sBAAwB3I,KAAK4I,eAAeC,KAAM7I,MACvDA,KAAK8I,yBAA2B9I,KAAK+I,kBAAkBF,KAAM7I,MAG7DA,KAAKO,SACHC,SAAU,uBACVwI,YAAa,4BAA6BhJ,KAAK+H,QAKlDxI,EAAGkB,aAAclB,EAAGC,GAAGqI,cAAetI,EAAGC,GAAGyJ,SAC5C1J,EAAGoB,WAAYpB,EAAGC,GAAGqI,cAAetI,EAAG0C,cA2CvC1C,EAAGC,GAAGqI,cAAcjF,OAAOsG,OAC1BC,OACC9I,MAAO,KAER+I,QACC/I,MAAO,KAERgJ,OACChJ,MAAO,KAERiJ,QACCjJ,MAAO,KAERkJ,MAEClJ,MAAO,OACPC,OAAQ,SAaVf,EAAGC,GAAGqI,cAAcjF,OAAO4G,YAAc,SAUzCjK,EAAGC,GAAGqI,cAAcjH,UAAUgI,eAAiB,WAC9Ca,aAAczJ,KAAK0I,uBACnB1I,KAAK0I,sBAAwBpB,WAAYtH,KAAK8I,yBAA0B,MASzEvJ,EAAGC,GAAGqI,cAAcjH,UAAUmI,kBAAoB,WAC5C/I,KAAKsI,eACTtI,KAAK0J,iBAAkB1J,KAAKsI,gBAU9B/I,EAAGC,GAAGqI,cAAcjH,UAAU+I,UAAY,SAAWC,GACpD,MAAOA,KAAQ5J,KAAKsI,iBAAmBtI,KAAKiI,SAAoC,YAAzBjI,KAAKiI,QAAQ4B,SASrEtK,EAAGC,GAAGqI,cAAcjH,UAAUkJ,UAAY,SAAWF,GACpD,MAAOA,KAAQ5J,KAAKsI,iBAAmBtI,KAAKmI,SAAoC,YAAzBnI,KAAKmI,QAAQ0B,SASrEtK,EAAGC,GAAGqI,cAAcjH,UAAUmJ,SAAW,SAAWH,GACnD,MAAOA,KAAQ5J,KAAKsI,iBAAmBtI,KAAKkI,QAAkC,YAAxBlI,KAAKkI,OAAO2B,SASnEtK,EAAGC,GAAGqI,cAAcjH,UAAUoJ,UAAY,SAAWJ,GACpD,GAAIK,EAEJ,KAAMA,IAAQjK,MAAKgI,QAClB,GAAKhI,KAAKgI,QAASiC,KAAWL,EAC7B,OAAO,CAIT,QAAO,GAURrK,EAAGC,GAAGqI,cAAcjH,UAAUsJ,cAAgB,WAC7C,MAAO,IAUR3K,EAAGC,GAAGqI,cAAcjH,UAAUuJ,cAAgB,WAC7C,MAAO,IAUR5K,EAAGC,GAAGqI,cAAcjH,UAAUwJ,aAAe,WAC5C,MAAO,IAWR7K,EAAGC,GAAGqI,cAAcjH,UAAUyJ,iBAAmB,WAChD,MAAOrK,MAAK+H,MAAQ,IAAM,GAgB3BxI,EAAGC,GAAGqI,cAAcjH,UAAU0J,UAAY,SAAWL,GACpD,GAAIhD,GAAWtH,EAAEwH,WAChByC,EAAM5J,KAAKgI,QAASiC,EAsBrB,OApBQL,aAAerK,GAAGC,GAAG+K,OAiB5BtD,EAASM,QAASqC,GAhBb5J,KAAK8H,QACH9H,KAAK8H,QAAQ0C,OAAQP,IAK1BL,EAAM5J,KAAK8H,QAAQ2C,OAAQR,GAC3BjK,KAAK0K,YAAcd,IACnB3C,EAASM,QAASqC,IANlB3C,EAASG,OAAQ,GAAI7H,GAAGC,GAAGmG,MAC1B,iFAQFsB,EAASG,OAAQ,GAAI7H,GAAGC,GAAGmG,MAC1B,gFAOIsB,EAASI,WAQjB9H,EAAGC,GAAGqI,cAAcjH,UAAU+J,iBAAmB,WAChD,MAAO3K,MAAKsI,eAcb/I,EAAGC,GAAGqI,cAAcjH,UAAUgK,WAAa,SAAWhB,EAAKiB,GAC1D,GAAIC,GAAU9K,KACbiI,EAAUtI,EAAEwH,UAIb,OAHA0D,GAAOA,MAGa,gBAARjB,GACJ5J,KAAKsK,UAAWV,GAAMnC,KAAM,SAAWmC,GAC7C,MAAOkB,GAAQF,WAAYhB,EAAKiB,MAK5B7K,KAAKgK,UAAWJ,IAIV5J,KAAKoI,iBAAmBpI,KAAKiI,SAAWjI,KAAKkI,SACxDD,EAAQb,OAAQ,GAAI7H,GAAGC,GAAGmG,MACzB,0DALDsC,EAAQb,OAAQ,GAAI7H,GAAGC,GAAGmG,MACzB,0DASuB,aAApBsC,EAAQ4B,UAEZ7J,KAAKoI,gBAAkBzI,EAAEoL,KAAM/K,KAAKmI,SAEpCnI,KAAKoI,gBAAgB4C,KAAM,WACrBF,EAAQ/C,QACZ+C,EAAQG,oBAAoB,GAC5BH,EAAQI,qBAAqB,IAE9BJ,EAAQtC,eAAiBqC,EAAKrC,gBAAkB7I,EAAGwL,SAASC,eAC5DN,EAAQxC,cAAgBsB,EACxBkB,EAAQ7C,QAAUA,EAClB6C,EAAQ1C,gBAAkB,KAC1B0C,EAAQzJ,KAAM,UAAWuI,EAAK3B,EAAS4C,GACvCvD,WAAY,WACXsC,EAAIyB,MAAOR,GAAOpD,KAAM,WACvBqD,EAAQpB,iBAAkBE,GAC1BkB,EAAQ7C,QAAQqD,QAAUzB,MAAO,UACjCvC,WAAY,WACXsC,EAAI2B,MAAOV,GAAOpD,KAAM,WACvBqD,EAAQ7C,QAAQqD,QAAUzB,MAAO,UACjCiB,EAAQ7C,QAAU,KAClB6C,EAAQ5C,OAASvI,EAAEwH,WACnBc,EAAQV,QAASuD,EAAQ5C,OAAOb,UAAWwD,IACzC,WACFC,EAAQ7C,QAAU,KAClB6C,EAAQ5C,OAASvI,EAAEwH,WACnBc,EAAQb,SACR0D,EAAQU,YAAa5B,MAEpBkB,EAAQX,kBACT,WACFW,EAAQ7C,QAAU,KAClB6C,EAAQ5C,OAASvI,EAAEwH,WACnBc,EAAQb,SACR0D,EAAQU,YAAa5B,MAEpBkB,EAAQZ,oBAINjC,EAAQZ,YAahB9H,EAAGC,GAAGqI,cAAcjH,UAAU4K,YAAc,SAAW5B,EAAKiB,GAC3D,GAEC3C,GAFG4C,EAAU9K,KACbmI,EAAUxI,EAAEwH,UA4Db,OAxDoB,gBAARyC,GACXA,EAAM5J,KAAKgI,QAAS4B,GACR5J,KAAKgK,UAAWJ,KAC5BA,EAAM,MAIDA,EAIMA,IAAQ5J,KAAKsI,cACxBH,EAAQf,OAAQ,GAAI7H,GAAGC,GAAGmG,MACzB,oEAEU3F,KAAKqI,kBAAoBrI,KAAKmI,UACzCA,EAAQf,OAAQ,GAAI7H,GAAGC,GAAGmG,MACzB,oEATDwC,EAAQf,OAAQ,GAAI7H,GAAGC,GAAGmG,MACzB,2DAauB,aAApBwC,EAAQ0B,UAEZ7J,KAAKqI,iBAAmB1I,EAAEoL,KAAM/K,KAAKiI,SAErCjI,KAAKqI,iBAAiBoD,OAAQ,WAC7BX,EAAQ3C,QAAUA,EAClB2C,EAAQzC,iBAAmB,KAC3ByC,EAAQzJ,KAAM,UAAWuI,EAAKzB,EAAS0C,GACvC3C,EAAS4C,EAAQ5C,OACjB4C,EAAQ5C,OAAS,KACjBA,EAAOX,QAASY,EAAQd,UAAWwD,GACnCvD,WAAY,WACXsC,EAAI8B,KAAMb,GAAOpD,KAAM,WACtBU,EAAQmD,QAAUzB,MAAO,SACzBvC,WAAY,WACXsC,EAAI+B,SAAUd,GAAOpD,KAAM,WAC1BU,EAAQmD,QAAUzB,MAAO,aACpBiB,EAAQ/C,QACZ+C,EAAQG,oBAAoB,GAC5BH,EAAQI,qBAAqB,IAEzBJ,EAAQtC,gBAAkBsC,EAAQtC,eAAe5E,QACrDkH,EAAQtC,eAAgB,GAAIoD,QAE7Bd,EAAQ3C,QAAU,KAClB2C,EAAQxC,cAAgB,KACxBH,EAAQZ,QAASsD,MAEhBC,EAAQT,uBAEVS,EAAQV,mBAINjC,EAAQd,WAkDhB9H,EAAGC,GAAGqI,cAAcjH,UAAU8J,WAAa,SAAW1C,GACrD,GAAI7E,GAAGC,EAAKwG,EAAKK,EAAM/H,CAEvB,IAAKwB,MAAMC,QAASqE,GAGnB,IADA9F,KACMiB,EAAI,EAAGC,EAAM4E,EAAQpE,OAAQT,EAAIC,EAAKD,IAAM,CAEjD,GADA8G,EAAOjC,EAAS7E,GAAIsC,YAAY7C,OAAOqH,MACjCA,EACL,KAAM,IAAItE,OAAO,sDAElBzD,GAAM+H,GAASjC,EAAS7E,OAEd5D,GAAGsG,cAAemC,KAC7B9F,EAAO8F,EAIR,KAAMiC,IAAQ/H,GACb0H,EAAM1H,EAAM+H,GACZjK,KAAKgI,QAASiC,GAASL,EAAI7H,QAAQ,GACnC/B,KAAKO,SAASsL,OAAQjC,EAAIrJ,UAC1BqJ,EAAIkC,WAAY9L,OAelBT,EAAGC,GAAGqI,cAAcjH,UAAUmL,cAAgB,SAAWC,GACxD,GAAI7I,GAAGC,EAAKwG,EAAKK,EAAMgC,EACtBnB,EAAU9K,KACVkM,KACAC,EAAU,SAAWlC,EAAML,SACnBkB,GAAQ9C,QAASiC,GACxBL,EAAIrJ,SAAS6L,SAGf,KAAMjJ,EAAI,EAAGC,EAAM4I,EAAMpI,OAAQT,EAAIC,EAAKD,IAAM,CAG/C,GAFA8G,EAAO+B,EAAO7I,GACdyG,EAAM5J,KAAKgI,QAASiC,IACdL,EACL,KAAM,IAAIjE,OAAO,uBAElBsG,GAAgBE,EAAQtD,KAAM,KAAMoB,EAAML,GAC1CsC,EAASrI,KAAM7D,KAAKwL,YAAavB,GAAOxC,KAAMwE,EAAeA,IAG9D,MAAOtM,GAAEoL,KAAKvJ,MAAO7B,EAAGuM,IAYzB3M,EAAGC,GAAGqI,cAAcjH,UAAUyL,aAAe,WAC5C,MAAOrM,MAAK+L,cAAeO,OAAOC,KAAMvM,KAAKgI,WAW9CzI,EAAGC,GAAGqI,cAAcjH,UAAU8I,iBAAmB,SAAWE,GAC3D,GAAI4C,EAGJ,IAAK5C,IAAQ5J,KAAKsI,cAYlB,MARAkE,GAAiC,SAAlB5C,EAAI6C,UAEnBzM,KAAKO,SAASyI,YAAa,iCAAkCwD,GAC7DxM,KAAKO,SAASyI,YAAa,gCAAiCwD,GAC5D5C,EAAI8C,cAAe9C,EAAI+C,qBAEvB3M,KAAKqB,KAAM,SAAUuI,GAEd5J,MAURT,EAAGC,GAAGqI,cAAcjH,UAAUqK,mBAAqB,SAAW2B,GAC7D,GAAIC,GAAaC,EAChBC,EAAQpN,EAAGK,KAAKgN,qBAAqBC,MAGrCC,EAAaH,EAAMlC,KAAM,8BAAiC,CAqC3D,OAnCA+B,GAAY9I,SAAP8I,IAAqB5M,KAAKuI,eAAiBqE,EAE3CA,EACE5M,KAAKuI,eACV5I,EAAGK,KAAKmN,oBAAqBP,IAE5BQ,2BAA4BpN,KAAK2I,wBAEd,IAAfuE,IACJL,EAAcQ,OAAOC,WAAanC,SAASoC,gBAAgBC,YAC3DV,EAAaW,WAAYV,EAAMW,IAAK,kBAAsB,EAC1DX,EAAMW,KACLC,SAAU,SACVC,eAAgBd,EAAaD,KAG/BK,IACAlN,KAAKuI,cAAe,GAEVvI,KAAKuI,eAChB5I,EAAGK,KAAKmN,oBAAqBU,KAE5BT,2BAA4BpN,KAAK2I,wBAElCuE,IACoB,IAAfA,GACJH,EAAMW,KACLC,SAAU,GACVC,eAAgB,KAGlB5N,KAAKuI,cAAe,GAErBwE,EAAMlC,KAAM,4BAA6BqC,GAElClN,MAURT,EAAGC,GAAGqI,cAAcjH,UAAUsK,oBAAsB,SAAW4C,GAiB9D,MAhBAA,GAAsBhK,SAAZgK,GAAyB9N,KAAKyI,cAAgBqF,EAEnDA,EACE9N,KAAKyI,cAEVzI,KAAKyI,YAAc9I,EAAG,QACpBoO,WACAC,IAAKhO,KAAKO,SAAS0N,aAAc,QAASC,QAC1CC,KAAM,cAAe,KAEbnO,KAAKyI,cAEhBzI,KAAKyI,YAAY2F,WAAY,eAC7BpO,KAAKyI,YAAc,MAGbzI,MAURT,EAAGC,GAAGqI,cAAcjH,UAAUyN,QAAU,WACvCrO,KAAKiL,oBAAoB,GACzBjL,KAAKkL,qBAAqB,GAC1BlL,KAAKqM,eACLrM,KAAKO,SAAS2E,UAgDf3F,EAAGC,GAAG+K,OAAS,SAAqB7K,GAEnCA,EAASA,MAGTH,EAAGC,GAAG+K,OAAOzK,OAAOC,KAAMC,KAAMN,GAGhCH,EAAG0C,aAAalC,KAAMC,MAGtBA,KAAK8K,QAAU,KACf9K,KAAKsO,KAAO5O,EAAO4O,MAAQtO,KAAKyF,YAAY7C,OAAO0L,KACnDtO,KAAKuO,OAAS5O,EAAG,SACjBK,KAAKwO,SAAW7O,EAAG,SACnBK,KAAKyO,SAAW9O,EAAG,SAEnBK,KAAK0O,iBAAmB/O,EAAG,SAAUgP,KAAM,WAAY,GACvD3O,KAAK4O,gBAAkBjP,EAAG,SAAUgP,KAAM,WAAY,GACtD3O,KAAK6O,YAAc7O,KAAK0O,iBAAiB5J,IAAK9E,KAAK4O,iBAGnD5O,KAAKwO,SAAShO,SAAU,wBACxBR,KAAKyO,SACHjO,SAAU,wBACV2N,KAAM,WAAY,GACpBnO,KAAKuO,OACH/N,SAAU,sBACVqL,OAAQ7L,KAAK0O,iBAAkB1O,KAAKyO,SAAUzO,KAAK4O,iBAErD5O,KAAKO,SACHC,SAAU,gBACVqL,OAAQ7L,KAAKuO,OAAQvO,KAAKwO,UAK5BxO,KAAK+D,SAAU,EACf/D,KAAKO,SAASC,SAAU,yBAKzBjB,EAAGkB,aAAclB,EAAGC,GAAG+K,OAAQhL,EAAGC,GAAGyJ,SACrC1J,EAAGoB,WAAYpB,EAAGC,GAAG+K,OAAQhL,EAAG0C,cAahC1C,EAAGC,GAAG+K,OAAO3H,OAAO0L,KAAO,SAU3B/O,EAAGC,GAAG+K,OAAO3J,UAAUkO,YAAc,SAAWC,GAE/C,GAAKA,EAAEC,SAAWhP,KAAKO,SAAU,GAChC,OAAO,GAWThB,EAAGC,GAAG+K,OAAO3J,UAAUqO,cAAgB,WACtC,QAASjP,KAAK8K,SAQfvL,EAAGC,GAAG+K,OAAO3J,UAAUoD,UAAY,WAClC,MAAOhE,MAAK+D,SAWbxE,EAAGC,GAAG+K,OAAO3J,UAAU+I,UAAY,WAClC,MAAO3J,MAAK8K,QAAQnB,UAAW3J,OAUhCT,EAAGC,GAAG+K,OAAO3J,UAAUkJ,UAAY,WAClC,MAAO9J,MAAK8K,QAAQhB,UAAW9J,OAUhCT,EAAGC,GAAG+K,OAAO3J,UAAUmJ,SAAW,WACjC,MAAO/J,MAAK8K,QAAQf,SAAU/J,OAW/BT,EAAGC,GAAG+K,OAAO3J,UAAUsO,WAAa,WACnC,MAAOlP,MAAK8K,SAQbvL,EAAGC,GAAG+K,OAAO3J,UAAU6L,QAAU,WAChC,GAAI0C,GAAW5P,EAAGC,GAAGyJ,QAAQrG,OAAOwM,cAAepP,KAAKmN,oBACvDjE,EAAQlJ,KAAK8K,QAAQrF,YAAY7C,OAAOsG,MACxCoF,EAAOtO,KAAKsO,IASb,OAPMpF,GAAOoF,KACZA,EAAOtO,KAAK8K,QAAQrF,YAAY7C,OAAO4G,aAE1B,SAAT8E,GAAmBa,EAASE,KAAKC,MAAQH,EAASE,KAAKE,KAAOrG,EAAOoF,GAAOjO,QAChFiO,EAAO,QAGDA,GAQR/O,EAAGC,GAAG+K,OAAO3J,UAAU+L,kBAAoB,WAC1C,MAAO3M,MAAK8K,QAAQrF,YAAY7C,OAAOsG,MAAOlJ,KAAKyM,YAUpDlN,EAAGC,GAAG+K,OAAO3J,UAAU4O,uBAAyB,SAAW3K,GAK1D,GAAI4K,GAAgBzP,KAAKuO,OAAOb,IAAK,uBAA0B,IAC9D1N,KAAKuO,OAAOb,IAAK,uBAA0B,IAC3C1N,KAAKuO,OAAOb,IAAK,8BAAiC,IAClD1N,KAAKuO,OAAOb,IAAK,mBAElB1N,MAAKuO,OAAOb,IAAK,aAAc,QAC/B7I,IAIA7E,KAAKuO,OAAOjO,SACZN,KAAKuO,OAAOb,IAAK,aAAc+B,IAehClQ,EAAGC,GAAG+K,OAAO3J,UAAU8O,iBAAmB,WACzC,GAAIC,GACH/F,EAAM5J,KACN4P,EAAe5P,KAAK+M,MAAO,GAAI8C,MAC/BC,EAAgB9P,KAAKuO,OAAQ,GAAIsB,KAelC,OAXA7P,MAAKwP,uBAAwB,WAC5B,GAAIO,GAAYD,EAAcxP,OAC7B0P,EAAcJ,EAAaK,QAC5BH,GAAcxP,OAAS,MAEvBsP,EAAaK,SAAW,WACxBN,EAAa/F,EAAIsG,gBACjBJ,EAAcxP,OAASyP,EACvBH,EAAaK,SAAWD,IAKtBhQ,KAAKuO,OAAO4B,cAAgBnQ,KAAKuO,OAAO6B,eAExCpQ,KAAKqQ,MAAMF,aAAa,GAASR,EAAa3P,KAAKsQ,MAAMH,aAAa,KAe1E5Q,EAAGC,GAAG+K,OAAO3J,UAAUsP,cAAgB,WACtC,MAAOlQ,MAAK+M,MAAO,GAAIwD,cAQxBhR,EAAGC,GAAG+K,OAAO3J,UAAU4P,OAAS,WAC/B,MAAOjR,GAAGC,GAAGyJ,QAAQrG,OAAO4N,OAAQxQ,KAAKyO,WAAc,OAoBxDlP,EAAGC,GAAG+K,OAAO3J,UAAU6P,gBAAkB,WACxC,MAAO,IAAIlR,GAAGC,GAAGkH,SAiBlBnH,EAAGC,GAAG+K,OAAO3J,UAAU8P,gBAAkB,WACxC,MAAO,IAAInR,GAAGC,GAAGkH,SAiBlBnH,EAAGC,GAAG+K,OAAO3J,UAAU+P,eAAiB,WACvC,MAAO,IAAIpR,GAAGC,GAAGkH,SAiBlBnH,EAAGC,GAAG+K,OAAO3J,UAAUgQ,mBAAqB,WAC3C,MAAO,IAAIrR,GAAGC,GAAGkH,SAYlBnH,EAAGC,GAAG+K,OAAO3J,UAAUkL,WAAa,SAAWhB,GAC9C,GAAK9K,KAAK8K,QACT,KAAM,IAAInF,OAAO,0DAMlB,OAHA3F,MAAK8K,QAAUA,EACf9K,KAAK6Q,aAEE7Q,MAURT,EAAGC,GAAG+K,OAAO3J,UAAUkQ,QAAU,SAAWxC,GAG3C,MAFAtO,MAAKsO,KAAOA,EACZtO,KAAK+Q,aACE/Q,MASRT,EAAGC,GAAG+K,OAAO3J,UAAUmQ,WAAa,WACnC,IAAM/Q,KAAK8K,QACV,KAAM,IAAInF,OAAO,2DAKlB,OAFA3F,MAAK8K,QAAQpB,iBAAkB1J,MAExBA,MAkBRT,EAAGC,GAAG+K,OAAO3J,UAAU8L,cAAgB,SAAWsE,GACjD,GAAI1Q,GACHsJ,EAAM5J,KACNiR,EAAWjR,KAAKuO,OAAQ,GAAIsB,KAuB7B,OApBoB/L,UAAfkN,EAAI1Q,OACRN,KAAKwP,uBAAwB,WAC5B,GAAI0B,GAAWD,EAAS5Q,KACxBuJ,GAAI2E,OAAOb,IAAK,QAASsD,EAAI3Q,OAAS,IACtCC,EAASsJ,EAAI8F,mBACbuB,EAAS5Q,MAAQ6Q,IAGlB5Q,EAAS0Q,EAAI1Q,OAGdN,KAAKuO,OAAOb,KACXrN,MAAO2Q,EAAI3Q,OAAS,GACpB8Q,SAAUH,EAAIG,UAAY,GAC1BC,SAAUJ,EAAII,UAAY,GAC1B9Q,OAAQA,GAAU,GAClB+Q,UAAWL,EAAIK,WAAa,GAC5BC,UAAWN,EAAIM,WAAa,KAGtBtR,MAcRT,EAAGC,GAAG+K,OAAO3J,UAAUiQ,WAAa,WACnC,IAAM7Q,KAAK8K,QACV,KAAM,IAAInF,OAAO,0DAkBlB,OAdA3F,MAAKqQ,MAAQ1Q,EAAG,SAChBK,KAAK+M,MAAQpN,EAAG,SAChBK,KAAKsQ,MAAQ3Q,EAAG,SAChBK,KAAKuR,UAAY5R,EAAGK,KAAKgN,sBAGzBhN,KAAKO,SAASqM,GAAI,YAAa5M,KAAK8O,YAAYjG,KAAM7I,OAGtDA,KAAKqQ,MAAM7P,SAAU,qBACrBR,KAAK+M,MAAMvM,SAAU,qBACrBR,KAAKsQ,MAAM9P,SAAU,qBACrBR,KAAKyO,SAAS5C,OAAQ7L,KAAKqQ,MAAOrQ,KAAK+M,MAAO/M,KAAKsQ,OAE5CtQ,MASRT,EAAGC,GAAG+K,OAAO3J,UAAU4Q,mBAAqB,SAAWC,GACtD,GAAIC,GAAY1R,KAAK0O,iBAAiBiD,GAAIF,EAAMzC,QAC/C4C,EAAUrS,EAAGC,GAAGqS,cAAe7R,KAAKyO,SAAUiD,EAC1CE,GAGJA,EAAQhG,QAOR5L,KAAKyO,SAAS7C,SAkBhBrM,EAAGC,GAAG+K,OAAO3J,UAAUkR,KAAO,SAAWjH,GACxC,IAAM7K,KAAK8K,QACV,KAAM,IAAInF,OAAO,oDAGlB,OAAO3F,MAAK8K,QAAQF,WAAY5K,KAAM6K,IAkBvCtL,EAAGC,GAAG+K,OAAO3J,UAAUmR,MAAQ,SAAWlH,GACzC,IAAM7K,KAAK8K,QACV,KAAM,IAAInF,OAAO,qDAGlB,OAAO3F,MAAK8K,QAAQU,YAAaxL,KAAM6K,IAYxCtL,EAAGC,GAAG+K,OAAO3J,UAAUyK,MAAQ,SAAWR,GACzC,GAAIjB,GAAM5J,IAOV,OALAA,MAAK+B,QAAQ,GAEb/B,KAAKgS,iBAAmBzS,EAAGC,GAAGqJ,KAAM7I,KAAKwR,mBAAoBxR,MAC7DA,KAAK6O,YAAYjC,GAAI,QAAS5M,KAAKgS,kBAE5BhS,KAAKyQ,gBAAiB5F,GAAO9D,UAAUU,KAAM,WAEnDmC,EAAIrJ,SAASC,SAAU,0CAA2CH,QAClEuJ,EAAI6E,SAASjO,SAAU,8BAA+BH,WAaxDd,EAAGC,GAAG+K,OAAO3J,UAAU2K,MAAQ,SAAWV,GACzC,GAAIjB,GAAM5J,IAGV,OADAA,MAAKyO,SAAS7C,QACP5L,KAAK0Q,gBAAiB7F,GAAO9D,UAAUU,KAAM,WAEnDmC,EAAIrJ,SAASC,SAAU,sBAAuBH,QAC9CuJ,EAAI6E,SAASjO,SAAU,8BAA+BH,WAaxDd,EAAGC,GAAG+K,OAAO3J,UAAU8K,KAAO,SAAWb,GACxC,GAAIjB,GAAM5J,IAEV,OAAOA,MAAK2Q,eAAgB9F,GAAO9D,UAAUU,KAAM,WAElD,GAAIwK,GAASrI,EAAI6E,SAASyD,KAAM3S,EAAGC,GAAGyJ,QAAQrG,OAAOuP,YAAavI,EAAI6E,UAAWrD,cAG5E6G,GAAOrO,QACXqO,EAAQ,GAAIG,OAIbxI,EAAIrJ,SAAS8R,YAAa,sBAAuBhS,QACjDuJ,EAAI6E,SAAS4D,YAAa,8BAA+BhS,WAa3Dd,EAAGC,GAAG+K,OAAO3J,UAAU+K,SAAW,SAAWd,GAC5C,GAAIjB,GAAM5J,IAEV,OAAOA,MAAK4Q,mBAAoB/F,GAAO9D,UAAUU,KAAM,WAEtDmC,EAAIrJ,SAAS8R,YAAa,0CAA2ChS,QACrEuJ,EAAI6E,SAAS4D,YAAa,8BAA+BhS,QACzDuJ,EAAIiF,YAAYhB,IAAK,QAASjE,EAAIoI,kBAClCpI,EAAI7H,QAAQ,MA+CdxC,EAAGC,GAAG8S,OAAS,SAAqB5S,GAEnCH,EAAGC,GAAG8S,OAAOxS,OAAOC,KAAMC,KAAMN,GAGhCH,EAAGC,GAAGS,MAAMC,eAAeH,KAAMC,MAGjCA,KAAKoC,QAAU,GAAI7C,GAAGC,GAAGwC,UACzBhC,KAAKuS,mBACLvS,KAAKwS,cAAgB,KACrBxS,KAAKyS,uBAAyBzS,KAAK0S,gBAAgB7J,KAAM7I,MAGzDA,KAAKoC,QAAQ2C,QAAS/E,MACrBgF,MAAO,gBACP2N,OAAQ,oBAIT3S,KAAKO,SACHC,SAAU,gBACV2N,KAAM,OAAQ,WAKjB5O,EAAGkB,aAAclB,EAAGC,GAAG8S,OAAQ/S,EAAGC,GAAG+K,QACrChL,EAAGoB,WAAYpB,EAAGC,GAAG8S,OAAQ/S,EAAGC,GAAGS,MAAMC,gBAiBzCX,EAAGC,GAAG8S,OAAO1P,OAAOqH,KAAO,GAc3B1K,EAAGC,GAAG8S,OAAO1P,OAAOgQ,MAAQ,GAc5BrT,EAAGC,GAAG8S,OAAO1P,OAAOR,WAUpB7C,EAAGC,GAAG8S,OAAO1P,OAAOiQ,WAAY,EAUhCtT,EAAGC,GAAG8S,OAAO1R,UAAU8R,gBAAkB,SAAW3D,GACnD,GAAI3M,EACC2M,GAAE+D,QAAUvT,EAAGC,GAAGuT,KAAKC,QAAUhT,KAAKyF,YAAY7C,OAAOiQ,WAC7D7S,KAAKiT,cAAe,IACpBlE,EAAEmE,iBACFnE,EAAEoE,mBACSpE,EAAE+D,QAAUvT,EAAGC,GAAGuT,KAAKK,QAAWrE,EAAEsE,SAAWtE,EAAEuE,WAC5DlR,EAAUpC,KAAKoC,QAAQa,KAAOZ,MAAO,UAAW0B,SAAS,EAAME,UAAU,IACpE7B,EAAQwB,OAAS,IACrB5D,KAAKiT,cAAe7Q,EAAS,GAAIpB,aACjC+N,EAAEmE,iBACFnE,EAAEoE,qBAWL5T,EAAGC,GAAG8S,OAAO1R,UAAU2S,cAAgB,SAAWpT,GAC3CH,KAAKwT,aACVxT,KAAKiT,cAAe9S,EAAOa,cAS7BzB,EAAGC,GAAG8S,OAAO1R,UAAU6S,gBAAkB,WACxCzT,KAAK0T,gBACC1T,KAAK8J,aACV9J,KAAK2T,iBASPpU,EAAGC,GAAG8S,OAAO1R,UAAUgT,WAAa,WACnC,MAAO5T,MAAKoC,SAab7C,EAAGC,GAAG8S,OAAO1R,UAAUiT,iBAAmB,SAAW1T,GACpD,OAAO,GAAIZ,GAAGC,GAAGkH,SACfI,KAAM,WACA3G,GAGLH,KAAK+R,SAEJ/R,OAYLT,EAAGC,GAAG8S,OAAO1R,UAAU6P,gBAAkB,SAAW5F,GAInD,MAHAA,GAAOA,MAGAtL,EAAGC,GAAG8S,OAAOxS,OAAOc,UAAU6P,gBAAgB1Q,KAAMC,KAAM6K,GAC/D/D,KAAM,WACN,GAAIpH,GAASM,KAAKyF,YAAY7C,OAC7BR,EAA2B0B,SAAjB+G,EAAKzI,QAAwByI,EAAKzI,QAAU1C,EAAO0C,QAC7DwQ,EAAuB9O,SAAf+G,EAAK+H,MAAsB/H,EAAK+H,MAAQlT,EAAOkT,KAExD5S,MAAK4S,MAAMlR,SAAUkR,GAAQkB,SAAUlB,GACvC5S,KAAKoC,QAAQ0C,IAAK9E,KAAK+T,iBAAkB3R,IAEzCpC,KAAKO,SAASqM,GAAI,UAAW5M,KAAKyS,yBAChCzS,OAMLT,EAAGC,GAAG8S,OAAO1R,UAAUgQ,mBAAqB,SAAW/F,GAEtD,MAAOtL,GAAGC,GAAG8S,OAAOxS,OAAOc,UAAUgQ,mBAAmB7Q,KAAMC,KAAM6K,GAClElD,MAAO,WACP3H,KAAKO,SAASsN,IAAK,UAAW7N,KAAKyS,wBAEnCzS,KAAKoC,QAAQgD,QACbpF,KAAKwS,cAAgB,MACnBxS,OAMLT,EAAGC,GAAG8S,OAAO1R,UAAUiQ,WAAa,WACnC,GAAImD,EAGJzU,GAAGC,GAAG8S,OAAOxS,OAAOc,UAAUiQ,WAAW9Q,KAAMC,MAE/CgU,EAAUzU,EAAGC,GAAGyU,oBAGhBjU,KAAK4S,MAAQ,GAAIrT,GAAGC,GAAG0U,aACtBC,GAAIH,IAILhU,KAAKyO,SAASjO,SAAU,wBACxBR,KAAKO,SAAS4N,KAAM,kBAAmB6F,GACvChU,KAAKoU,kBAAmBpU,KAAKqQ,QAS9B9Q,EAAGC,GAAG8S,OAAO1R,UAAUmT,iBAAmB,SAAW3R,GACpD,GAAIe,GAAGC,EAAKiR,IACZ,KAAMlR,EAAI,EAAGC,EAAMhB,EAAQwB,OAAQT,EAAIC,EAAKD,IAC3CkR,EAAQxQ,KACP,GAAItE,GAAGC,GAAGC,aAAc2C,EAASe,IAGnC,OAAOkR,IAQR9U,EAAGC,GAAG8S,OAAO1R,UAAU+S,cAAgB,WAEtC3T,KAAKuS,gBAAkBvS,KAAKoC,QAAQa,OASrC1D,EAAGC,GAAG8S,OAAO1R,UAAU8S,cAAgB,WACtC,GAAIvQ,GAAGC,CAGP,KAAMD,EAAI,EAAGC,EAAMpD,KAAKuS,gBAAgB3O,OAAQT,EAAIC,EAAKD,IACxDnD,KAAKuS,gBAAiBpP,GAAI5C,SAAS6L,QAEpCpM,MAAKuS,oBASNhT,EAAGC,GAAG8S,OAAO1R,UAAUqS,cAAgB,SAAW9S,GAGjD,MAFAH,MAAKsU,cACLtU,KAAKwS,cAAgBrS,EACdH,KAAK6T,iBAAkB1T,GAAS4G,UACrC0E,OAAQzL,KAAKuU,WAAW1L,KAAM7I,QA4CjCT,EAAGC,GAAGgV,cAAgB,SAA4B9U,GAEjDH,EAAGC,GAAGgV,cAAc1U,OAAOC,KAAMC,KAAMN,GAGvCM,KAAKyU,qBAAuB,KAG5BzU,KAAKO,SAASC,SAAU,wBAKzBjB,EAAGkB,aAAclB,EAAGC,GAAGgV,cAAejV,EAAGC,GAAG8S,QAQ5C/S,EAAGC,GAAGgV,cAAc5R,OAAOqH,KAAO,UAMlC1K,EAAGC,GAAGgV,cAAc5R,OAAO0L,KAAO,QAMlC/O,EAAGC,GAAGgV,cAAc5R,OAAO8R,SAAU,EAYrCnV,EAAGC,GAAGgV,cAAc5R,OAAOgQ,MAAQ,KAYnCrT,EAAGC,GAAGgV,cAAc5R,OAAOgD,QAAU,KAMrCrG,EAAGC,GAAGgV,cAAc5R,OAAOR,UAExBjC,OAAQ,SAAUwU,MAAOpV,EAAGC,GAAGoV,SAAU,8BAAgCvS,MAAO,YAChFlC,OAAQ,SAAUwU,MAAOpV,EAAGC,GAAGoV,SAAU,8BAAgCvS,MAAO,SAQnF9C,EAAGC,GAAGgV,cAAc5T,UAAUkL,WAAa,SAAWhB,GAQrD,MAPAvL,GAAGC,GAAGgV,cAAc1U,OAAOc,UAAUkL,WAAW/L,KAAMC,KAAM8K,GAG5D9K,KAAK8K,QAAQ/F,QAAS/E,MACrBiF,OAAQ,aAGFjF,MAQRT,EAAGC,GAAGgV,cAAc5T,UAAUiU,SAAW,WACxC,GAAIC,GAAS9U,IACb8U,GAAOC,aAEPzN,WAAY,WACXwN,EAAOC,cACL,MAUJxV,EAAGC,GAAGgV,cAAc5T,UAAUoU,2BAA6B,SAAWC,GAUrE,MATAA,GAAkBnR,SAAVmR,GAAuBjV,KAAKyU,uBAAyBQ,EAExDA,IAAUjV,KAAKyU,uBACnBzU,KAAKyU,qBAAuBQ,EAC5BjV,KAAKkV,SACHlM,YAAa,uCAAwCiM,GACrDjM,YAAa,0CAA2CiM,IAGpDjV,MAMRT,EAAGC,GAAGgV,cAAc5T,UAAUiT,iBAAmB,SAAW1T,GAC3D,MAAKA,GACG,GAAIZ,GAAGC,GAAGkH,QAAS,WACzB1G,KAAK+R,OAAS5R,OAAQA,KACpBH,MAEGT,EAAGC,GAAGgV,cAAc1U,OAAOc,UAAUiT,iBAAiB9T,KAAMC,KAAMG,IAY1EZ,EAAGC,GAAGgV,cAAc5T,UAAU6P,gBAAkB,SAAW5F,GAI1D,MAHAA,GAAOA,MAGAtL,EAAGC,GAAGgV,cAAc1U,OAAOc,UAAU6P,gBAAgB1Q,KAAMC,KAAM6K,GACtE/D,KAAM,WACN9G,KAAK4S,MAAMlR,SACKoC,SAAf+G,EAAK+H,MAAsB/H,EAAK+H,MAAQ5S,KAAKyF,YAAY7C,OAAOgQ,OAEjE5S,KAAK4F,QAAQlE,SACKoC,SAAjB+G,EAAKjF,QAAwBiF,EAAKjF,QAAU5F,KAAKyF,YAAY7C,OAAOgD,SAGrE5F,KAAK4F,QAAQrF,SAASyI,YACrB,sCACiBlF,SAAjB+G,EAAK6J,QAAwB7J,EAAK6J,QAAU1U,KAAKyF,YAAY7C,OAAO8R,UAEnE1U,OAMLT,EAAGC,GAAGgV,cAAc5T,UAAU8P,gBAAkB,SAAW7F,GAI1D,MAHAA,GAAOA,MAGAtL,EAAGC,GAAGgV,cAAc1U,OAAOc,UAAU8P,gBAAgB3Q,KAAMC,KAAM6K,GACtE/D,KAAM,WAEN,GAAI1E,GAAUpC,KAAKoC,QAAQa,KAC3Bb,GAAUA,EAAQwC,OAAQ,SAAWzE,GACpC,MAAOA,GAAOgV,WAAWpU,QAAS,YAAc,IAE5CqB,EAAQwB,OAAS,GACrBxB,EAAS,GAAIgT,QAAQxJ,SAEpB5L,OAMLT,EAAGC,GAAGgV,cAAc5T,UAAUsP,cAAgB,WAC7C,GAAIP,GAAY0F,EACfC,EAActV,KAAKuV,UAAUhV,QAU9B,OARA8U,GAAcC,EAAa,GAAIzF,MAAMlC,SACrC2H,EAAa,GAAIzF,MAAMlC,SAAW,SAElCpO,EAAGC,GAAGyJ,QAAQrG,OAAO4S,qBAAsBF,EAAa,IAExD3F,EAAa3P,KAAKuG,KAAKhG,SAAS4P,aAAa,GAC7CmF,EAAa,GAAIzF,MAAMlC,SAAW0H,EAE3B1F,GAMRpQ,EAAGC,GAAGgV,cAAc5T,UAAU8L,cAAgB,SAAWsE,GACxD,GAAIsE,GAActV,KAAKuV,UAAUhV,QAsBjC,OArBAhB,GAAGC,GAAGgV,cAAc1U,OAAOc,UAAU8L,cAAc3M,KAAMC,KAAMgR,GAI/D1J,WAAY,WACX,GAAI+N,GAAcC,EAAa,GAAIzF,MAAMlC,SACxCvC,EAAgBD,SAASC,aAE1BkK,GAAa,GAAIzF,MAAMlC,SAAW,SAElCpO,EAAGC,GAAGyJ,QAAQrG,OAAO4S,qBAAsBF,EAAa,IAInDlK,GAAiBA,IAAkBD,SAASC,eAAiBA,EAAcQ,OAC/ER,EAAcQ,QAGf0J,EAAa,GAAIzF,MAAMlC,SAAW0H,GAChC,KAEIrV,MAMRT,EAAGC,GAAGgV,cAAc5T,UAAUiQ,WAAa,WAE1CtR,EAAGC,GAAGgV,cAAc1U,OAAOc,UAAUiQ,WAAW9Q,KAAMC,MAGtDA,KAAKkV,SAAWvV,EAAG,SACnBK,KAAKuV,UAAY,GAAIhW,GAAGC,GAAGiW,aAC1BC,YAAY,EAAMC,SAAW,mCAE9B3V,KAAKuG,KAAO,GAAIhH,GAAGC,GAAGiW,aACrBG,QAAQ,EAAMC,UAAU,EAAOF,SAAW,8BAE3C3V,KAAK4F,QAAU,GAAIrG,GAAGC,GAAG0U,aACxByB,SAAW,iCAIZ3V,KAAK4S,MAAMrS,SAASC,SAAU,6BAC9BR,KAAKyO,SAASjO,SAAU,+BACxBR,KAAKuV,UAAUhV,SAASsL,OAAQ7L,KAAKuG,KAAKhG,UAC1CP,KAAKuG,KAAKhG,SAASsL,OAAQ7L,KAAK4S,MAAMrS,SAAUP,KAAK4F,QAAQrF,UAC7DP,KAAK+M,MAAMlB,OAAQ7L,KAAKuV,UAAUhV,UAClCP,KAAKkV,SAAS1U,SAAU,+BACxBR,KAAKsQ,MAAMzE,OAAQ7L,KAAKkV,WAMzB3V,EAAGC,GAAGgV,cAAc5T,UAAU+S,cAAgB,WAC7C,GAAIxQ,GAAGC,EAAK0S,EAAOvT,EAASC,CAY5B,IATAjD,EAAGC,GAAGgV,cAAc1U,OAAOc,UAAU+S,cAAc5T,KAAMC,MAEzDuC,EAAUvC,KAAKoC,QAAQiC,aACvB7B,EAASxC,KAAKoC,QAAQkC,YAEjB/B,EAAQwT,OACZ/V,KAAKkV,SAASrJ,OAAQtJ,EAAQwT,KAAKxV,UACnCgC,EAAQwT,KAAKC,cAAc,IAEvBxT,EAAOoB,OACX,IAAMT,EAAI,EAAGC,EAAMZ,EAAOoB,OAAQT,EAAIC,EAAKD,IAC1C2S,EAAQtT,EAAQW,GAChBnD,KAAKkV,SAASrJ,OAAQiK,EAAMvV,UAC5BuV,EAAME,cAAc,EAGjBzT,GAAQ0T,UACZjW,KAAKkV,SAASrJ,OAAQtJ,EAAQ0T,QAAQ1V,UACtCgC,EAAQ0T,QAAQD,cAAc,IAGzBhW,KAAK2J,aAGV3J,KAAK+Q,cAWPxR,EAAGC,GAAGgV,cAAc5T,UAAUmU,WAAa,WAC1C,GAAI5R,GAAGC,EAAKjD,EACX+V,EAAWlW,KAAKyU,qBAChBrS,EAAUpC,KAAKoC,QAAQa,KAIxB,KADAjD,KAAKgV,4BAA4B,GAC3B7R,EAAI,EAAGC,EAAMhB,EAAQwB,OAAQT,EAAIC,EAAKD,IAE3C,GADAhD,EAASiC,EAASe,GACbhD,EAAOI,SAAS+M,aAAenN,EAAOgW,OAAOC,YAAY,GAAS,CACtEpW,KAAKgV,4BAA4B,EACjC,OAKFhV,KAAK+M,MAAMW,IAAK,SAAU1N,KAAKsQ,MAAMH,aAAa,IAE7CnQ,KAAKyU,uBAAyByB,GAElClW,KAAK+Q,cAiEPxR,EAAGC,GAAG6W,cAAgB,SAA4B3W,GAEjDH,EAAGC,GAAG6W,cAAcvW,OAAOC,KAAMC,KAAMN,GAGvCM,KAAKsW,WAAY,EAGjBtW,KAAKO,SAASC,SAAU,wBAKzBjB,EAAGkB,aAAclB,EAAGC,GAAG6W,cAAe9W,EAAGC,GAAG8S,QAW5C/S,EAAGC,GAAG6W,cAAczV,UAAU2V,0BAA4B,WACzDvW,KAAKwW,cAUNjX,EAAGC,GAAG6W,cAAczV,UAAU6V,mBAAqB,WAClDzW,KAAKwW,aACLxW,KAAKiT,cAAejT,KAAKwS,gBAM1BjT,EAAGC,GAAG6W,cAAczV,UAAUiQ,WAAa,WAE1CtR,EAAGC,GAAG6W,cAAcvW,OAAOc,UAAUiQ,WAAW9Q,KAAMC,MAGtDA,KAAK0W,YAAc/W,EAAG,SACtBK,KAAK2W,UAAYhX,EAAG,SACpBK,KAAK4W,aAAejX,EAAG,SACvBK,KAAK6W,gBAAkBlX,EAAG,SAC1BK,KAAK8W,cAAgBnX,EAAG,SACxBK,KAAK+W,cAAgB,GAAIxX,GAAGC,GAAGkB,cAC9BiU,MAAOpV,EAAGC,GAAGwX,IAAK,iCAEnBhX,KAAKiX,YAAc,GAAI1X,GAAGC,GAAGkB,aAC7BV,KAAKkX,QAAUvX,EAAG,SAClBK,KAAKmX,aAAexX,EAAG,SAGvBK,KAAK+W,cAAchS,QAAS/E,MAAQgF,MAAO,8BAC3ChF,KAAKiX,YAAYlS,QAAS/E,MAAQgF,MAAO,uBAGzChF,KAAK4S,MAAMrS,SAASC,SAAU,6BAC9BR,KAAK2W,UACH9K,OAAQ7L,KAAK4S,MAAMrS,UACnBC,SAAU,gCACZR,KAAK4W,aAAapW,SAAU,oCAC5BR,KAAK6W,gBAAgBrW,SAAU,uCAC/BR,KAAK8W,cAActW,SAAU,qCAC7BR,KAAKmX,aACH3W,SAAU,oCACV+F,KAAMhH,EAAGC,GAAGwX,IAAK,8BACnBhX,KAAKkX,QACH1W,SAAU,mDACVqL,OAAQ7L,KAAKmX,aAAcnX,KAAK+W,cAAcxW,SAAUP,KAAKiX,YAAY1W,UAC3EP,KAAKyO,SACHjO,SAAU,+BACVqL,OAAQ7L,KAAKkX,SACflX,KAAK0W,YACHlW,SAAU,kCAKVqL,OAAQ7L,KAAK6W,gBAAiB7W,KAAK2W,UAAW3W,KAAK4W,cACrD5W,KAAKqQ,MAAMxE,OAAQ7L,KAAK0W,aACxB1W,KAAKsQ,MAAMzE,OAAQ7L,KAAK8W,gBAMzBvX,EAAGC,GAAG6W,cAAczV,UAAUmT,iBAAmB,SAAW3R,GAC3D,GAAIe,GAAGC,EAAK1D,EACX0X,EAAW7X,EAAGC,GAAG4X,WACjB/C,IAED,KAAMlR,EAAI,EAAGC,EAAMhB,EAAQwB,OAAQT,EAAIC,EAAKD,IAC3CzD,EAASC,EAAEC,QAAUC,QAASN,EAAGC,GAAG4X,YAAchV,EAASe,IACtDiU,IACe,SAAjB1X,EAAO2C,OAAsBqB,MAAMC,QAASjE,EAAO2C,QAAW3C,EAAO2C,MAAMtB,QAAS,WAAa,IAEnGpB,EAAEC,OAAQF,GACT2X,KAAM,WACN1C,MAAO,KAGTN,EAAQxQ,KACP,GAAItE,GAAGC,GAAGC,aAAcC,GAG1B,OAAO2U,IAMR9U,EAAGC,GAAG6W,cAAczV,UAAU+S,cAAgB,WAC7C,GAAIxQ,GAAGC,EAAK0S,EAAOvT,EAASC,CAU5B,KAPAjD,EAAGC,GAAG6W,cAAcvW,OAAOc,UAAU+S,cAAc5T,KAAMC,MAEzDuC,EAAUvC,KAAKoC,QAAQiC,aACvB7B,EAASxC,KAAKoC,QAAQkC,YACjB/B,EAAQ0T,SACZjW,KAAK6W,gBAAgBhL,OAAQtJ,EAAQ0T,QAAQ1V,UAExC4C,EAAI,EAAGC,EAAMZ,EAAOoB,OAAQT,EAAIC,EAAKD,IAC1C2S,EAAQtT,EAAQW,GAChBnD,KAAK8W,cAAcjL,OAAQiK,EAAMvV,SAE7BgC,GAAQwT,MACZ/V,KAAK4W,aAAa/K,OAAQtJ,EAAQwT,KAAKxV,UAGxCP,KAAKsX,WACLtX,KAAK+M,MAAMW,IAAK,SAAU1N,KAAKsQ,MAAMH,aAAa,KAMnD5Q,EAAGC,GAAG6W,cAAczV,UAAUqS,cAAgB,SAAW9S,GACxD,GAAIoX,GAAUvX,IACd,OAAOT,GAAGC,GAAG6W,cAAcvW,OAAOc,UAAUqS,cAAclT,KAAMC,KAAMG,GACpEqX,KAAM,SAAWC,GACjBF,EAAQG,WAAYD,UAOvBlY,EAAGC,GAAG6W,cAAczV,UAAU8L,cAAgB,WAE7CnN,EAAGC,GAAG6W,cAAcvW,OAAOc,UAAU8L,cAAclL,MAAOxB,KAAMyB,WAEhEzB,KAAKsX,YASN/X,EAAGC,GAAG6W,cAAczV,UAAU0W,SAAW,WACxC,GAAIK,GAAWC,EAAcC,EAAaC,EAAYC,EAAiBC,EAAWC,EACjF3J,EAAOtO,KAAK2M,mBAEb,IAA2B,gBAAf2B,GAAKjO,MAAqB,CACrC,IAAKL,KAAK+J,WAEH,MAAK/J,MAAK2J,iBACV3J,KAAKsW,YAEVtW,KAAK8K,QAAQ7C,QAAQ+C,KAAMhL,KAAKsX,SAASzO,KAAM7I,OAC/CA,KAAKsW,WAAY,IAIlB,MATAyB,GAAkB/X,KAAKqQ,MAAMhQ,QAAU,OAYxC0X,GAAkBzJ,EAAKjO,MAAQ,EAyBhC,OAtBAsX,GAAY3X,KAAK4W,aAAajF,GAAI,YAAe3R,KAAK4W,aAAavW,QAAU,EAC7EuX,EAAe5X,KAAK6W,gBAAgBlF,GAAI,YAAe3R,KAAK6W,gBAAgBxW,QAAU,EACtFwX,EAAcK,KAAKC,IAAKR,EAAWC,GAEnCE,EAAa9X,KAAK4S,MAAMrS,SAASF,QAE5B,EAAIwX,EAAcC,EAAaC,EAEnCC,EAAYC,EAAaJ,EAGF,QAAlB7X,KAAKwQ,UACTwH,EAAYL,EACZM,EAAaL,IAEbI,EAAYJ,EACZK,EAAaN,GAIf3X,KAAK2W,UAAUjJ,KAAO0K,YAAaJ,EAAWK,aAAcJ,IAErDjY,MASRT,EAAGC,GAAG6W,cAAczV,UAAU8W,WAAa,SAAWD,GACrD,GAAItU,GAAGC,EAAKkV,EAAOlW,EAClBmW,KACAC,KACAxS,GAAc,EACdC,GAAU,CAMX,KAJKwR,YAAkBlY,GAAGC,GAAGmG,QAC5B8R,GAAWA,IAGNtU,EAAI,EAAGC,EAAMqU,EAAO7T,OAAQT,EAAIC,EAAKD,IACpCsU,EAAQtU,GAAIgD,kBACjBH,GAAc,GAEVyR,EAAQtU,GAAIiD,cAChBH,GAAU,GAEXqS,EAAQ3Y,EAAG,SACTa,SAAU,6BACVqL,OAAQ4L,EAAQtU,GAAIkD,cACtBkS,EAAM1U,KAAMyU,EAAO,GAEpBtY,MAAKyY,YAAc9Y,EAAG4Y,GACjBvS,GACJwS,EAAWxY,KAAKwS,gBAAkB,EAElCpQ,EAAUpC,KAAKoC,QAAQa,KAAOb,QAASpC,KAAKwS,gBACvCpQ,EAAQwB,QACZ5D,KAAKiX,YAAYnV,aAAaF,SAAUQ,EAAS,GAAI+S,cAGtDqD,EAAWxY,KAAKwS,gBAAkB,EAClCxS,KAAKoC,QAAQoC,aAAcgU,IAEvBvS,EACJjG,KAAKiX,YAAYvV,SAAUnC,EAAGC,GAAGwX,IAAK,iCAEtChX,KAAKiX,YAAYvV,SAAUnC,EAAGC,GAAGwX,IAAK,8BAEvChX,KAAKiX,YAAYlV,OAAQiE,GACzBhG,KAAKmX,aAAauB,MAAO1Y,KAAKyY,aAC9BzY,KAAKkX,QAAQ7E,YAAa,wBAAyBsG,UAAW,IAQ/DpZ,EAAGC,GAAG6W,cAAczV,UAAU4V,WAAa,WAC1CxW,KAAKkX,QAAQ1W,SAAU,wBAClBR,KAAKyY,cACTzY,KAAKyY,YAAYvT,SACjBlF,KAAKyY,YAAc,OAOrBlZ,EAAGC,GAAG6W,cAAczV,UAAUgQ,mBAAqB,SAAW/F,GAE7D,MAAOtL,GAAGC,GAAG6W,cAAcvW,OAAOc,UAAUgQ,mBAAmB7Q,KAAMC,KAAM6K,GACzElD,MAAO,WAEP3H,KAAKwW,aACLxW,KAAKsW,WAAY,GACftW,OAcLT,EAAGC,GAAGoZ,iBAAmB,WAMxB,MALMrZ,GAAGC,GAAGqZ,gBACXtZ,EAAGC,GAAGqZ,cAAgB,GAAItZ,GAAGC,GAAGqI,cAChClI,EAAG,QAASkM,OAAQtM,EAAGC,GAAGqZ,cAActY;AACxChB,EAAGC,GAAGqZ,cAAcnO,YAAc,GAAInL,GAAGC,GAAGgV,iBAEtCjV,EAAGC,GAAGqZ,eAmBdtZ,EAAGC,GAAGsZ,MAAQ,SAAWvS,EAAMwS,GAC9B,MAAOxZ,GAAGC,GAAGoZ,mBAAmBhO,WAAY,UAAWjL,EAAEC,QACxDgG,QAASW,EACTnE,SAAW7C,EAAGC,GAAGgV,cAAc5R,OAAOR,QAAS,KAC7C2W,IAAYtR,KAAM,SAAWS,GAC/B,MAAOA,GAAOT,KAAM,SAAWU,GAC9B,MAAOA,GAAQV,KAAM,WACpB,MAAO9H,GAAEwH,WAAWI,iBA6BxBhI,EAAGC,GAAGwZ,QAAU,SAAWzS,EAAMwS,GAChC,MAAOxZ,GAAGC,GAAGoZ,mBAAmBhO,WAAY,UAAWjL,EAAEC,QACxDgG,QAASW,GACPwS,IAAYtR,KAAM,SAAWS,GAC/B,MAAOA,GAAOT,KAAM,SAAWU,GAC9B,MAAOA,GAAQV,KAAM,SAAWoD,GAC/B,MAAOlL,GAAEwH,WAAWI,WAAasD,GAAwB,WAAhBA,EAAK1K,gBA8BlDZ,EAAGC,GAAGyZ,OAAS,SAAW1S,EAAMwS,GAC/B,GAAIjO,GAAUvL,EAAGC,GAAGoZ,mBACnBM,EAAY,GAAI3Z,GAAGC,GAAG2Z,gBAAmBJ,GAAWA,EAAQG,eAC5DE,EAAY,GAAI7Z,GAAGC,GAAG6Z,YAAaH,GAClCI,MAAO,MACP3E,MAAOpO,GAKT,OAAOuE,GAAQF,WAAY,UAAWjL,EAAEC,QACvCgG,QAASwT,EAAU7Y,UACjBwY,IAAYtR,KAAM,SAAWS,GAM/B,MAJAgR,GAAUtM,GAAI,QAAS,WACtB9B,EAAQH,mBAAmBoH,OAAS5R,OAAQ,aAE7C+Y,EAAUtN,QACH1D,EAAOT,KAAM,SAAWU,GAC9B,MAAOA,GAAQV,KAAM,SAAWoD,GAC/B,MAAOlL,GAAEwH,WAAWI,QAASsD,GAAwB,WAAhBA,EAAK1K,OAAsB+Y,EAAUK,WAAa,cAMxFha","file":"oojs-ui-windows.min.js","sourcesContent":["/*!\n * OOjs UI v0.19.5\n * https://www.mediawiki.org/wiki/OOjs_UI\n *\n * Copyright 2011–2017 OOjs UI Team and other contributors.\n * Released under the MIT license\n * http://oojs.mit-license.org\n *\n * Date: 2017-03-07T22:57:01Z\n */\n( function ( OO ) {\n\n'use strict';\n\n/**\n * An ActionWidget is a {@link OO.ui.ButtonWidget button widget} that executes an action.\n * Action widgets are used with OO.ui.ActionSet, which manages the behavior and availability\n * of the actions.\n *\n * Both actions and action sets are primarily used with {@link OO.ui.Dialog Dialogs}.\n * Please see the [OOjs UI documentation on MediaWiki] [1] for more information\n * and examples.\n *\n * [1]: https://www.mediawiki.org/wiki/OOjs_UI/Windows/Process_Dialogs#Action_sets\n *\n * @class\n * @extends OO.ui.ButtonWidget\n * @mixins OO.ui.mixin.PendingElement\n *\n * @constructor\n * @param {Object} [config] Configuration options\n * @cfg {string} [action] Symbolic name of the action (e.g., ‘continue’ or ‘cancel’).\n * @cfg {string[]} [modes] Symbolic names of the modes (e.g., ‘edit’ or ‘read’) in which the action\n *  should be made available. See the action set's {@link OO.ui.ActionSet#setMode setMode} method\n *  for more information about setting modes.\n * @cfg {boolean} [framed=false] Render the action button with a frame\n */\nOO.ui.ActionWidget = function OoUiActionWidget( config ) {\n\t// Configuration initialization\n\tconfig = $.extend( { framed: false }, config );\n\n\t// Parent constructor\n\tOO.ui.ActionWidget.parent.call( this, config );\n\n\t// Mixin constructors\n\tOO.ui.mixin.PendingElement.call( this, config );\n\n\t// Properties\n\tthis.action = config.action || '';\n\tthis.modes = config.modes || [];\n\tthis.width = 0;\n\tthis.height = 0;\n\n\t// Initialization\n\tthis.$element.addClass( 'oo-ui-actionWidget' );\n};\n\n/* Setup */\n\nOO.inheritClass( OO.ui.ActionWidget, OO.ui.ButtonWidget );\nOO.mixinClass( OO.ui.ActionWidget, OO.ui.mixin.PendingElement );\n\n/* Events */\n\n/**\n * A resize event is emitted when the size of the widget changes.\n *\n * @event resize\n */\n\n/* Methods */\n\n/**\n * Check if the action is configured to be available in the specified `mode`.\n *\n * @param {string} mode Name of mode\n * @return {boolean} The action is configured with the mode\n */\nOO.ui.ActionWidget.prototype.hasMode = function ( mode ) {\n\treturn this.modes.indexOf( mode ) !== -1;\n};\n\n/**\n * Get the symbolic name of the action (e.g., ‘continue’ or ‘cancel’).\n *\n * @return {string}\n */\nOO.ui.ActionWidget.prototype.getAction = function () {\n\treturn this.action;\n};\n\n/**\n * Get the symbolic name of the mode or modes for which the action is configured to be available.\n *\n * The current mode is set with the action set's {@link OO.ui.ActionSet#setMode setMode} method.\n * Only actions that are configured to be avaiable in the current mode will be visible. All other actions\n * are hidden.\n *\n * @return {string[]}\n */\nOO.ui.ActionWidget.prototype.getModes = function () {\n\treturn this.modes.slice();\n};\n\n/**\n * Emit a resize event if the size has changed.\n *\n * @private\n * @chainable\n */\nOO.ui.ActionWidget.prototype.propagateResize = function () {\n\tvar width, height;\n\n\tif ( this.isElementAttached() ) {\n\t\twidth = this.$element.width();\n\t\theight = this.$element.height();\n\n\t\tif ( width !== this.width || height !== this.height ) {\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.emit( 'resize' );\n\t\t}\n\t}\n\n\treturn this;\n};\n\n/**\n * @inheritdoc\n */\nOO.ui.ActionWidget.prototype.setIcon = function () {\n\t// Mixin method\n\tOO.ui.mixin.IconElement.prototype.setIcon.apply( this, arguments );\n\tthis.propagateResize();\n\n\treturn this;\n};\n\n/**\n * @inheritdoc\n */\nOO.ui.ActionWidget.prototype.setLabel = function () {\n\t// Mixin method\n\tOO.ui.mixin.LabelElement.prototype.setLabel.apply( this, arguments );\n\tthis.propagateResize();\n\n\treturn this;\n};\n\n/**\n * @inheritdoc\n */\nOO.ui.ActionWidget.prototype.setFlags = function () {\n\t// Mixin method\n\tOO.ui.mixin.FlaggedElement.prototype.setFlags.apply( this, arguments );\n\tthis.propagateResize();\n\n\treturn this;\n};\n\n/**\n * @inheritdoc\n */\nOO.ui.ActionWidget.prototype.clearFlags = function () {\n\t// Mixin method\n\tOO.ui.mixin.FlaggedElement.prototype.clearFlags.apply( this, arguments );\n\tthis.propagateResize();\n\n\treturn this;\n};\n\n/**\n * Toggle the visibility of the action button.\n *\n * @param {boolean} [show] Show button, omit to toggle visibility\n * @chainable\n */\nOO.ui.ActionWidget.prototype.toggle = function () {\n\t// Parent method\n\tOO.ui.ActionWidget.parent.prototype.toggle.apply( this, arguments );\n\tthis.propagateResize();\n\n\treturn this;\n};\n\n/* eslint-disable no-unused-vars */\n/**\n * ActionSets manage the behavior of the {@link OO.ui.ActionWidget action widgets} that comprise them.\n * Actions can be made available for specific contexts (modes) and circumstances\n * (abilities). Action sets are primarily used with {@link OO.ui.Dialog Dialogs}.\n *\n * ActionSets contain two types of actions:\n *\n * - Special: Special actions are the first visible actions with special flags, such as 'safe' and 'primary', the default special flags. Additional special flags can be configured in subclasses with the static #specialFlags property.\n * - Other: Other actions include all non-special visible actions.\n *\n * Please see the [OOjs UI documentation on MediaWiki][1] for more information.\n *\n *     @example\n *     // Example: An action set used in a process dialog\n *     function MyProcessDialog( config ) {\n *         MyProcessDialog.parent.call( this, config );\n *     }\n *     OO.inheritClass( MyProcessDialog, OO.ui.ProcessDialog );\n *     MyProcessDialog.static.title = 'An action set in a process dialog';\n *     MyProcessDialog.static.name = 'myProcessDialog';\n *     // An action set that uses modes ('edit' and 'help' mode, in this example).\n *     MyProcessDialog.static.actions = [\n *         { action: 'continue', modes: 'edit', label: 'Continue', flags: [ 'primary', 'constructive' ] },\n *         { action: 'help', modes: 'edit', label: 'Help' },\n *         { modes: 'edit', label: 'Cancel', flags: 'safe' },\n *         { action: 'back', modes: 'help', label: 'Back', flags: 'safe' }\n *     ];\n *\n *     MyProcessDialog.prototype.initialize = function () {\n *         MyProcessDialog.parent.prototype.initialize.apply( this, arguments );\n *         this.panel1 = new OO.ui.PanelLayout( { padded: true, expanded: false } );\n *         this.panel1.$element.append( '<p>This dialog uses an action set (continue, help, cancel, back) configured with modes. This is edit mode. Click \\'help\\' to see help mode.</p>' );\n *         this.panel2 = new OO.ui.PanelLayout( { padded: true, expanded: false } );\n *         this.panel2.$element.append( '<p>This is help mode. Only the \\'back\\' action widget is configured to be visible here. Click \\'back\\' to return to \\'edit\\' mode.</p>' );\n *         this.stackLayout = new OO.ui.StackLayout( {\n *             items: [ this.panel1, this.panel2 ]\n *         } );\n *         this.$body.append( this.stackLayout.$element );\n *     };\n *     MyProcessDialog.prototype.getSetupProcess = function ( data ) {\n *         return MyProcessDialog.parent.prototype.getSetupProcess.call( this, data )\n *             .next( function () {\n *                 this.actions.setMode( 'edit' );\n *             }, this );\n *     };\n *     MyProcessDialog.prototype.getActionProcess = function ( action ) {\n *         if ( action === 'help' ) {\n *             this.actions.setMode( 'help' );\n *             this.stackLayout.setItem( this.panel2 );\n *         } else if ( action === 'back' ) {\n *             this.actions.setMode( 'edit' );\n *             this.stackLayout.setItem( this.panel1 );\n *         } else if ( action === 'continue' ) {\n *             var dialog = this;\n *             return new OO.ui.Process( function () {\n *                 dialog.close();\n *             } );\n *         }\n *         return MyProcessDialog.parent.prototype.getActionProcess.call( this, action );\n *     };\n *     MyProcessDialog.prototype.getBodyHeight = function () {\n *         return this.panel1.$element.outerHeight( true );\n *     };\n *     var windowManager = new OO.ui.WindowManager();\n *     $( 'body' ).append( windowManager.$element );\n *     var dialog = new MyProcessDialog( {\n *         size: 'medium'\n *     } );\n *     windowManager.addWindows( [ dialog ] );\n *     windowManager.openWindow( dialog );\n *\n * [1]: https://www.mediawiki.org/wiki/OOjs_UI/Windows/Process_Dialogs#Action_sets\n *\n * @abstract\n * @class\n * @mixins OO.EventEmitter\n *\n * @constructor\n * @param {Object} [config] Configuration options\n */\nOO.ui.ActionSet = function OoUiActionSet( config ) {\n\t// Configuration initialization\n\tconfig = config || {};\n\n\t// Mixin constructors\n\tOO.EventEmitter.call( this );\n\n\t// Properties\n\tthis.list = [];\n\tthis.categories = {\n\t\tactions: 'getAction',\n\t\tflags: 'getFlags',\n\t\tmodes: 'getModes'\n\t};\n\tthis.categorized = {};\n\tthis.special = {};\n\tthis.others = [];\n\tthis.organized = false;\n\tthis.changing = false;\n\tthis.changed = false;\n};\n/* eslint-enable no-unused-vars */\n\n/* Setup */\n\nOO.mixinClass( OO.ui.ActionSet, OO.EventEmitter );\n\n/* Static Properties */\n\n/**\n * Symbolic name of the flags used to identify special actions. Special actions are displayed in the\n *  header of a {@link OO.ui.ProcessDialog process dialog}.\n *  See the [OOjs UI documentation on MediaWiki][2] for more information and examples.\n *\n *  [2]:https://www.mediawiki.org/wiki/OOjs_UI/Windows/Process_Dialogs\n *\n * @abstract\n * @static\n * @inheritable\n * @property {string}\n */\nOO.ui.ActionSet.static.specialFlags = [ 'safe', 'primary' ];\n\n/* Events */\n\n/**\n * @event click\n *\n * A 'click' event is emitted when an action is clicked.\n *\n * @param {OO.ui.ActionWidget} action Action that was clicked\n */\n\n/**\n * @event resize\n *\n * A 'resize' event is emitted when an action widget is resized.\n *\n * @param {OO.ui.ActionWidget} action Action that was resized\n */\n\n/**\n * @event add\n *\n * An 'add' event is emitted when actions are {@link #method-add added} to the action set.\n *\n * @param {OO.ui.ActionWidget[]} added Actions added\n */\n\n/**\n * @event remove\n *\n * A 'remove' event is emitted when actions are {@link #method-remove removed}\n *  or {@link #clear cleared}.\n *\n * @param {OO.ui.ActionWidget[]} added Actions removed\n */\n\n/**\n * @event change\n *\n * A 'change' event is emitted when actions are {@link #method-add added}, {@link #clear cleared},\n * or {@link #method-remove removed} from the action set or when the {@link #setMode mode} is changed.\n *\n */\n\n/* Methods */\n\n/**\n * Handle action change events.\n *\n * @private\n * @fires change\n */\nOO.ui.ActionSet.prototype.onActionChange = function () {\n\tthis.organized = false;\n\tif ( this.changing ) {\n\t\tthis.changed = true;\n\t} else {\n\t\tthis.emit( 'change' );\n\t}\n};\n\n/**\n * Check if an action is one of the special actions.\n *\n * @param {OO.ui.ActionWidget} action Action to check\n * @return {boolean} Action is special\n */\nOO.ui.ActionSet.prototype.isSpecial = function ( action ) {\n\tvar flag;\n\n\tfor ( flag in this.special ) {\n\t\tif ( action === this.special[ flag ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n};\n\n/**\n * Get action widgets based on the specified filter: ‘actions’, ‘flags’, ‘modes’, ‘visible’,\n *  or ‘disabled’.\n *\n * @param {Object} [filters] Filters to use, omit to get all actions\n * @param {string|string[]} [filters.actions] Actions that action widgets must have\n * @param {string|string[]} [filters.flags] Flags that action widgets must have (e.g., 'safe')\n * @param {string|string[]} [filters.modes] Modes that action widgets must have\n * @param {boolean} [filters.visible] Action widgets must be visible\n * @param {boolean} [filters.disabled] Action widgets must be disabled\n * @return {OO.ui.ActionWidget[]} Action widgets matching all criteria\n */\nOO.ui.ActionSet.prototype.get = function ( filters ) {\n\tvar i, len, list, category, actions, index, match, matches;\n\n\tif ( filters ) {\n\t\tthis.organize();\n\n\t\t// Collect category candidates\n\t\tmatches = [];\n\t\tfor ( category in this.categorized ) {\n\t\t\tlist = filters[ category ];\n\t\t\tif ( list ) {\n\t\t\t\tif ( !Array.isArray( list ) ) {\n\t\t\t\t\tlist = [ list ];\n\t\t\t\t}\n\t\t\t\tfor ( i = 0, len = list.length; i < len; i++ ) {\n\t\t\t\t\tactions = this.categorized[ category ][ list[ i ] ];\n\t\t\t\t\tif ( Array.isArray( actions ) ) {\n\t\t\t\t\t\tmatches.push.apply( matches, actions );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Remove by boolean filters\n\t\tfor ( i = 0, len = matches.length; i < len; i++ ) {\n\t\t\tmatch = matches[ i ];\n\t\t\tif (\n\t\t\t\t( filters.visible !== undefined && match.isVisible() !== filters.visible ) ||\n\t\t\t\t( filters.disabled !== undefined && match.isDisabled() !== filters.disabled )\n\t\t\t) {\n\t\t\t\tmatches.splice( i, 1 );\n\t\t\t\tlen--;\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t\t// Remove duplicates\n\t\tfor ( i = 0, len = matches.length; i < len; i++ ) {\n\t\t\tmatch = matches[ i ];\n\t\t\tindex = matches.lastIndexOf( match );\n\t\t\twhile ( index !== i ) {\n\t\t\t\tmatches.splice( index, 1 );\n\t\t\t\tlen--;\n\t\t\t\tindex = matches.lastIndexOf( match );\n\t\t\t}\n\t\t}\n\t\treturn matches;\n\t}\n\treturn this.list.slice();\n};\n\n/**\n * Get 'special' actions.\n *\n * Special actions are the first visible action widgets with special flags, such as 'safe' and 'primary'.\n * Special flags can be configured in subclasses by changing the static #specialFlags property.\n *\n * @return {OO.ui.ActionWidget[]|null} 'Special' action widgets.\n */\nOO.ui.ActionSet.prototype.getSpecial = function () {\n\tthis.organize();\n\treturn $.extend( {}, this.special );\n};\n\n/**\n * Get 'other' actions.\n *\n * Other actions include all non-special visible action widgets.\n *\n * @return {OO.ui.ActionWidget[]} 'Other' action widgets\n */\nOO.ui.ActionSet.prototype.getOthers = function () {\n\tthis.organize();\n\treturn this.others.slice();\n};\n\n/**\n * Set the mode  (e.g., ‘edit’ or ‘view’). Only {@link OO.ui.ActionWidget#modes actions} configured\n * to be available in the specified mode will be made visible. All other actions will be hidden.\n *\n * @param {string} mode The mode. Only actions configured to be available in the specified\n *  mode will be made visible.\n * @chainable\n * @fires toggle\n * @fires change\n */\nOO.ui.ActionSet.prototype.setMode = function ( mode ) {\n\tvar i, len, action;\n\n\tthis.changing = true;\n\tfor ( i = 0, len = this.list.length; i < len; i++ ) {\n\t\taction = this.list[ i ];\n\t\taction.toggle( action.hasMode( mode ) );\n\t}\n\n\tthis.organized = false;\n\tthis.changing = false;\n\tthis.emit( 'change' );\n\n\treturn this;\n};\n\n/**\n * Set the abilities of the specified actions.\n *\n * Action widgets that are configured with the specified actions will be enabled\n * or disabled based on the boolean values specified in the `actions`\n * parameter.\n *\n * @param {Object.<string,boolean>} actions A list keyed by action name with boolean\n *  values that indicate whether or not the action should be enabled.\n * @chainable\n */\nOO.ui.ActionSet.prototype.setAbilities = function ( actions ) {\n\tvar i, len, action, item;\n\n\tfor ( i = 0, len = this.list.length; i < len; i++ ) {\n\t\titem = this.list[ i ];\n\t\taction = item.getAction();\n\t\tif ( actions[ action ] !== undefined ) {\n\t\t\titem.setDisabled( !actions[ action ] );\n\t\t}\n\t}\n\n\treturn this;\n};\n\n/**\n * Executes a function once per action.\n *\n * When making changes to multiple actions, use this method instead of iterating over the actions\n * manually to defer emitting a #change event until after all actions have been changed.\n *\n * @param {Object|null} filter Filters to use to determine which actions to iterate over; see #get\n * @param {Function} callback Callback to run for each action; callback is invoked with three\n *   arguments: the action, the action's index, the list of actions being iterated over\n * @chainable\n */\nOO.ui.ActionSet.prototype.forEach = function ( filter, callback ) {\n\tthis.changed = false;\n\tthis.changing = true;\n\tthis.get( filter ).forEach( callback );\n\tthis.changing = false;\n\tif ( this.changed ) {\n\t\tthis.emit( 'change' );\n\t}\n\n\treturn this;\n};\n\n/**\n * Add action widgets to the action set.\n *\n * @param {OO.ui.ActionWidget[]} actions Action widgets to add\n * @chainable\n * @fires add\n * @fires change\n */\nOO.ui.ActionSet.prototype.add = function ( actions ) {\n\tvar i, len, action;\n\n\tthis.changing = true;\n\tfor ( i = 0, len = actions.length; i < len; i++ ) {\n\t\taction = actions[ i ];\n\t\taction.connect( this, {\n\t\t\tclick: [ 'emit', 'click', action ],\n\t\t\tresize: [ 'emit', 'resize', action ],\n\t\t\ttoggle: [ 'onActionChange' ]\n\t\t} );\n\t\tthis.list.push( action );\n\t}\n\tthis.organized = false;\n\tthis.emit( 'add', actions );\n\tthis.changing = false;\n\tthis.emit( 'change' );\n\n\treturn this;\n};\n\n/**\n * Remove action widgets from the set.\n *\n * To remove all actions, you may wish to use the #clear method instead.\n *\n * @param {OO.ui.ActionWidget[]} actions Action widgets to remove\n * @chainable\n * @fires remove\n * @fires change\n */\nOO.ui.ActionSet.prototype.remove = function ( actions ) {\n\tvar i, len, index, action;\n\n\tthis.changing = true;\n\tfor ( i = 0, len = actions.length; i < len; i++ ) {\n\t\taction = actions[ i ];\n\t\tindex = this.list.indexOf( action );\n\t\tif ( index !== -1 ) {\n\t\t\taction.disconnect( this );\n\t\t\tthis.list.splice( index, 1 );\n\t\t}\n\t}\n\tthis.organized = false;\n\tthis.emit( 'remove', actions );\n\tthis.changing = false;\n\tthis.emit( 'change' );\n\n\treturn this;\n};\n\n/**\n * Remove all action widets from the set.\n *\n * To remove only specified actions, use the {@link #method-remove remove} method instead.\n *\n * @chainable\n * @fires remove\n * @fires change\n */\nOO.ui.ActionSet.prototype.clear = function () {\n\tvar i, len, action,\n\t\tremoved = this.list.slice();\n\n\tthis.changing = true;\n\tfor ( i = 0, len = this.list.length; i < len; i++ ) {\n\t\taction = this.list[ i ];\n\t\taction.disconnect( this );\n\t}\n\n\tthis.list = [];\n\n\tthis.organized = false;\n\tthis.emit( 'remove', removed );\n\tthis.changing = false;\n\tthis.emit( 'change' );\n\n\treturn this;\n};\n\n/**\n * Organize actions.\n *\n * This is called whenever organized information is requested. It will only reorganize the actions\n * if something has changed since the last time it ran.\n *\n * @private\n * @chainable\n */\nOO.ui.ActionSet.prototype.organize = function () {\n\tvar i, iLen, j, jLen, flag, action, category, list, item, special,\n\t\tspecialFlags = this.constructor.static.specialFlags;\n\n\tif ( !this.organized ) {\n\t\tthis.categorized = {};\n\t\tthis.special = {};\n\t\tthis.others = [];\n\t\tfor ( i = 0, iLen = this.list.length; i < iLen; i++ ) {\n\t\t\taction = this.list[ i ];\n\t\t\tif ( action.isVisible() ) {\n\t\t\t\t// Populate categories\n\t\t\t\tfor ( category in this.categories ) {\n\t\t\t\t\tif ( !this.categorized[ category ] ) {\n\t\t\t\t\t\tthis.categorized[ category ] = {};\n\t\t\t\t\t}\n\t\t\t\t\tlist = action[ this.categories[ category ] ]();\n\t\t\t\t\tif ( !Array.isArray( list ) ) {\n\t\t\t\t\t\tlist = [ list ];\n\t\t\t\t\t}\n\t\t\t\t\tfor ( j = 0, jLen = list.length; j < jLen; j++ ) {\n\t\t\t\t\t\titem = list[ j ];\n\t\t\t\t\t\tif ( !this.categorized[ category ][ item ] ) {\n\t\t\t\t\t\t\tthis.categorized[ category ][ item ] = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.categorized[ category ][ item ].push( action );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Populate special/others\n\t\t\t\tspecial = false;\n\t\t\t\tfor ( j = 0, jLen = specialFlags.length; j < jLen; j++ ) {\n\t\t\t\t\tflag = specialFlags[ j ];\n\t\t\t\t\tif ( !this.special[ flag ] && action.hasFlag( flag ) ) {\n\t\t\t\t\t\tthis.special[ flag ] = action;\n\t\t\t\t\t\tspecial = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ( !special ) {\n\t\t\t\t\tthis.others.push( action );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.organized = true;\n\t}\n\n\treturn this;\n};\n\n/**\n * Errors contain a required message (either a string or jQuery selection) that is used to describe what went wrong\n * in a {@link OO.ui.Process process}. The error's #recoverable and #warning configurations are used to customize the\n * appearance and functionality of the error interface.\n *\n * The basic error interface contains a formatted error message as well as two buttons: 'Dismiss' and 'Try again' (i.e., the error\n * is 'recoverable' by default). If the error is not recoverable, the 'Try again' button will not be rendered and the widget\n * that initiated the failed process will be disabled.\n *\n * If the error is a warning, the error interface will include a 'Dismiss' and a 'Continue' button, which will try the\n * process again.\n *\n * For an example of error interfaces, please see the [OOjs UI documentation on MediaWiki][1].\n *\n * [1]: https://www.mediawiki.org/wiki/OOjs_UI/Windows/Process_Dialogs#Processes_and_errors\n *\n * @class\n *\n * @constructor\n * @param {string|jQuery} message Description of error\n * @param {Object} [config] Configuration options\n * @cfg {boolean} [recoverable=true] Error is recoverable.\n *  By default, errors are recoverable, and users can try the process again.\n * @cfg {boolean} [warning=false] Error is a warning.\n *  If the error is a warning, the error interface will include a\n *  'Dismiss' and a 'Continue' button. It is the responsibility of the developer to ensure that the warning\n *  is not triggered a second time if the user chooses to continue.\n */\nOO.ui.Error = function OoUiError( message, config ) {\n\t// Allow passing positional parameters inside the config object\n\tif ( OO.isPlainObject( message ) && config === undefined ) {\n\t\tconfig = message;\n\t\tmessage = config.message;\n\t}\n\n\t// Configuration initialization\n\tconfig = config || {};\n\n\t// Properties\n\tthis.message = message instanceof jQuery ? message : String( message );\n\tthis.recoverable = config.recoverable === undefined || !!config.recoverable;\n\tthis.warning = !!config.warning;\n};\n\n/* Setup */\n\nOO.initClass( OO.ui.Error );\n\n/* Methods */\n\n/**\n * Check if the error is recoverable.\n *\n * If the error is recoverable, users are able to try the process again.\n *\n * @return {boolean} Error is recoverable\n */\nOO.ui.Error.prototype.isRecoverable = function () {\n\treturn this.recoverable;\n};\n\n/**\n * Check if the error is a warning.\n *\n * If the error is a warning, the error interface will include a 'Dismiss' and a 'Continue' button.\n *\n * @return {boolean} Error is warning\n */\nOO.ui.Error.prototype.isWarning = function () {\n\treturn this.warning;\n};\n\n/**\n * Get error message as DOM nodes.\n *\n * @return {jQuery} Error message in DOM nodes\n */\nOO.ui.Error.prototype.getMessage = function () {\n\treturn this.message instanceof jQuery ?\n\t\tthis.message.clone() :\n\t\t$( '<div>' ).text( this.message ).contents();\n};\n\n/**\n * Get the error message text.\n *\n * @return {string} Error message\n */\nOO.ui.Error.prototype.getMessageText = function () {\n\treturn this.message instanceof jQuery ? this.message.text() : this.message;\n};\n\n/**\n * A Process is a list of steps that are called in sequence. The step can be a number, a jQuery promise,\n * or a function:\n *\n * - **number**: the process will wait for the specified number of milliseconds before proceeding.\n * - **promise**: the process will continue to the next step when the promise is successfully resolved\n *  or stop if the promise is rejected.\n * - **function**: the process will execute the function. The process will stop if the function returns\n *  either a boolean `false` or a promise that is rejected; if the function returns a number, the process\n *  will wait for that number of milliseconds before proceeding.\n *\n * If the process fails, an {@link OO.ui.Error error} is generated. Depending on how the error is\n * configured, users can dismiss the error and try the process again, or not. If a process is stopped,\n * its remaining steps will not be performed.\n *\n * @class\n *\n * @constructor\n * @param {number|jQuery.Promise|Function} step Number of miliseconds to wait before proceeding, promise\n *  that must be resolved before proceeding, or a function to execute. See #createStep for more information. see #createStep for more information\n * @param {Object} [context=null] Execution context of the function. The context is ignored if the step is\n *  a number or promise.\n */\nOO.ui.Process = function ( step, context ) {\n\t// Properties\n\tthis.steps = [];\n\n\t// Initialization\n\tif ( step !== undefined ) {\n\t\tthis.next( step, context );\n\t}\n};\n\n/* Setup */\n\nOO.initClass( OO.ui.Process );\n\n/* Methods */\n\n/**\n * Start the process.\n *\n * @return {jQuery.Promise} Promise that is resolved when all steps have successfully completed.\n *  If any of the steps return a promise that is rejected or a boolean false, this promise is rejected\n *  and any remaining steps are not performed.\n */\nOO.ui.Process.prototype.execute = function () {\n\tvar i, len, promise;\n\n\t/**\n\t * Continue execution.\n\t *\n\t * @ignore\n\t * @param {Array} step A function and the context it should be called in\n\t * @return {Function} Function that continues the process\n\t */\n\tfunction proceed( step ) {\n\t\treturn function () {\n\t\t\t// Execute step in the correct context\n\t\t\tvar deferred,\n\t\t\t\tresult = step.callback.call( step.context );\n\n\t\t\tif ( result === false ) {\n\t\t\t\t// Use rejected promise for boolean false results\n\t\t\t\treturn $.Deferred().reject( [] ).promise();\n\t\t\t}\n\t\t\tif ( typeof result === 'number' ) {\n\t\t\t\tif ( result < 0 ) {\n\t\t\t\t\tthrow new Error( 'Cannot go back in time: flux capacitor is out of service' );\n\t\t\t\t}\n\t\t\t\t// Use a delayed promise for numbers, expecting them to be in milliseconds\n\t\t\t\tdeferred = $.Deferred();\n\t\t\t\tsetTimeout( deferred.resolve, result );\n\t\t\t\treturn deferred.promise();\n\t\t\t}\n\t\t\tif ( result instanceof OO.ui.Error ) {\n\t\t\t\t// Use rejected promise for error\n\t\t\t\treturn $.Deferred().reject( [ result ] ).promise();\n\t\t\t}\n\t\t\tif ( Array.isArray( result ) && result.length && result[ 0 ] instanceof OO.ui.Error ) {\n\t\t\t\t// Use rejected promise for list of errors\n\t\t\t\treturn $.Deferred().reject( result ).promise();\n\t\t\t}\n\t\t\t// Duck-type the object to see if it can produce a promise\n\t\t\tif ( result && $.isFunction( result.promise ) ) {\n\t\t\t\t// Use a promise generated from the result\n\t\t\t\treturn result.promise();\n\t\t\t}\n\t\t\t// Use resolved promise for other results\n\t\t\treturn $.Deferred().resolve().promise();\n\t\t};\n\t}\n\n\tif ( this.steps.length ) {\n\t\t// Generate a chain reaction of promises\n\t\tpromise = proceed( this.steps[ 0 ] )();\n\t\tfor ( i = 1, len = this.steps.length; i < len; i++ ) {\n\t\t\tpromise = promise.then( proceed( this.steps[ i ] ) );\n\t\t}\n\t} else {\n\t\tpromise = $.Deferred().resolve().promise();\n\t}\n\n\treturn promise;\n};\n\n/**\n * Create a process step.\n *\n * @private\n * @param {number|jQuery.Promise|Function} step\n *\n * - Number of milliseconds to wait before proceeding\n * - Promise that must be resolved before proceeding\n * - Function to execute\n *   - If the function returns a boolean false the process will stop\n *   - If the function returns a promise, the process will continue to the next\n *     step when the promise is resolved or stop if the promise is rejected\n *   - If the function returns a number, the process will wait for that number of\n *     milliseconds before proceeding\n * @param {Object} [context=null] Execution context of the function. The context is\n *  ignored if the step is a number or promise.\n * @return {Object} Step object, with `callback` and `context` properties\n */\nOO.ui.Process.prototype.createStep = function ( step, context ) {\n\tif ( typeof step === 'number' || $.isFunction( step.promise ) ) {\n\t\treturn {\n\t\t\tcallback: function () {\n\t\t\t\treturn step;\n\t\t\t},\n\t\t\tcontext: null\n\t\t};\n\t}\n\tif ( $.isFunction( step ) ) {\n\t\treturn {\n\t\t\tcallback: step,\n\t\t\tcontext: context\n\t\t};\n\t}\n\tthrow new Error( 'Cannot create process step: number, promise or function expected' );\n};\n\n/**\n * Add step to the beginning of the process.\n *\n * @inheritdoc #createStep\n * @return {OO.ui.Process} this\n * @chainable\n */\nOO.ui.Process.prototype.first = function ( step, context ) {\n\tthis.steps.unshift( this.createStep( step, context ) );\n\treturn this;\n};\n\n/**\n * Add step to the end of the process.\n *\n * @inheritdoc #createStep\n * @return {OO.ui.Process} this\n * @chainable\n */\nOO.ui.Process.prototype.next = function ( step, context ) {\n\tthis.steps.push( this.createStep( step, context ) );\n\treturn this;\n};\n\n/**\n * Window managers are used to open and close {@link OO.ui.Window windows} and control their presentation.\n * Managed windows are mutually exclusive. If a new window is opened while a current window is opening\n * or is opened, the current window will be closed and any ongoing {@link OO.ui.Process process} will be cancelled. Windows\n * themselves are persistent and—rather than being torn down when closed—can be repopulated with the\n * pertinent data and reused.\n *\n * Over the lifecycle of a window, the window manager makes available three promises: `opening`,\n * `opened`, and `closing`, which represent the primary stages of the cycle:\n *\n * **Opening**: the opening stage begins when the window manager’s #openWindow or a window’s\n * {@link OO.ui.Window#open open} method is used, and the window manager begins to open the window.\n *\n * - an `opening` event is emitted with an `opening` promise\n * - the #getSetupDelay method is called and the returned value is used to time a pause in execution before\n *   the window’s {@link OO.ui.Window#getSetupProcess getSetupProcess} method is called on the\n *   window and its result executed\n * - a `setup` progress notification is emitted from the `opening` promise\n * - the #getReadyDelay method is called the returned value is used to time a pause in execution before\n *   the window’s {@link OO.ui.Window#getReadyProcess getReadyProcess} method is called on the\n *   window and its result executed\n * - a `ready` progress notification is emitted from the `opening` promise\n * - the `opening` promise is resolved with an `opened` promise\n *\n * **Opened**: the window is now open.\n *\n * **Closing**: the closing stage begins when the window manager's #closeWindow or the\n * window's {@link OO.ui.Window#close close} methods is used, and the window manager begins\n * to close the window.\n *\n * - the `opened` promise is resolved with `closing` promise and a `closing` event is emitted\n * - the #getHoldDelay method is called and the returned value is used to time a pause in execution before\n *   the window's {@link OO.ui.Window#getHoldProcess getHoldProces} method is called on the\n *   window and its result executed\n * - a `hold` progress notification is emitted from the `closing` promise\n * - the #getTeardownDelay() method is called and the returned value is used to time a pause in execution before\n *   the window's {@link OO.ui.Window#getTeardownProcess getTeardownProcess} method is called on the\n *   window and its result executed\n * - a `teardown` progress notification is emitted from the `closing` promise\n * - the `closing` promise is resolved. The window is now closed\n *\n * See the [OOjs UI documentation on MediaWiki][1] for more information.\n *\n * [1]: https://www.mediawiki.org/wiki/OOjs_UI/Windows/Window_managers\n *\n * @class\n * @extends OO.ui.Element\n * @mixins OO.EventEmitter\n *\n * @constructor\n * @param {Object} [config] Configuration options\n * @cfg {OO.Factory} [factory] Window factory to use for automatic instantiation\n *  Note that window classes that are instantiated with a factory must have\n *  a {@link OO.ui.Dialog#static-name static name} property that specifies a symbolic name.\n * @cfg {boolean} [modal=true] Prevent interaction outside the dialog\n */\nOO.ui.WindowManager = function OoUiWindowManager( config ) {\n\t// Configuration initialization\n\tconfig = config || {};\n\n\t// Parent constructor\n\tOO.ui.WindowManager.parent.call( this, config );\n\n\t// Mixin constructors\n\tOO.EventEmitter.call( this );\n\n\t// Properties\n\tthis.factory = config.factory;\n\tthis.modal = config.modal === undefined || !!config.modal;\n\tthis.windows = {};\n\tthis.opening = null;\n\tthis.opened = null;\n\tthis.closing = null;\n\tthis.preparingToOpen = null;\n\tthis.preparingToClose = null;\n\tthis.currentWindow = null;\n\tthis.globalEvents = false;\n\tthis.$returnFocusTo = null;\n\tthis.$ariaHidden = null;\n\tthis.onWindowResizeTimeout = null;\n\tthis.onWindowResizeHandler = this.onWindowResize.bind( this );\n\tthis.afterWindowResizeHandler = this.afterWindowResize.bind( this );\n\n\t// Initialization\n\tthis.$element\n\t\t.addClass( 'oo-ui-windowManager' )\n\t\t.toggleClass( 'oo-ui-windowManager-modal', this.modal );\n};\n\n/* Setup */\n\nOO.inheritClass( OO.ui.WindowManager, OO.ui.Element );\nOO.mixinClass( OO.ui.WindowManager, OO.EventEmitter );\n\n/* Events */\n\n/**\n * An 'opening' event is emitted when the window begins to be opened.\n *\n * @event opening\n * @param {OO.ui.Window} win Window that's being opened\n * @param {jQuery.Promise} opening An `opening` promise resolved with a value when the window is opened successfully.\n *  When the `opening` promise is resolved, the first argument of the value is an 'opened' promise, the second argument\n *  is the opening data. The `opening` promise emits `setup` and `ready` notifications when those processes are complete.\n * @param {Object} data Window opening data\n */\n\n/**\n * A 'closing' event is emitted when the window begins to be closed.\n *\n * @event closing\n * @param {OO.ui.Window} win Window that's being closed\n * @param {jQuery.Promise} closing A `closing` promise is resolved with a value when the window\n *  is closed successfully. The promise emits `hold` and `teardown` notifications when those\n *  processes are complete. When the `closing` promise is resolved, the first argument of its value\n *  is the closing data.\n * @param {Object} data Window closing data\n */\n\n/**\n * A 'resize' event is emitted when a window is resized.\n *\n * @event resize\n * @param {OO.ui.Window} win Window that was resized\n */\n\n/* Static Properties */\n\n/**\n * Map of the symbolic name of each window size and its CSS properties.\n *\n * @static\n * @inheritable\n * @property {Object}\n */\nOO.ui.WindowManager.static.sizes = {\n\tsmall: {\n\t\twidth: 300\n\t},\n\tmedium: {\n\t\twidth: 500\n\t},\n\tlarge: {\n\t\twidth: 700\n\t},\n\tlarger: {\n\t\twidth: 900\n\t},\n\tfull: {\n\t\t// These can be non-numeric because they are never used in calculations\n\t\twidth: '100%',\n\t\theight: '100%'\n\t}\n};\n\n/**\n * Symbolic name of the default window size.\n *\n * The default size is used if the window's requested size is not recognized.\n *\n * @static\n * @inheritable\n * @property {string}\n */\nOO.ui.WindowManager.static.defaultSize = 'medium';\n\n/* Methods */\n\n/**\n * Handle window resize events.\n *\n * @private\n * @param {jQuery.Event} e Window resize event\n */\nOO.ui.WindowManager.prototype.onWindowResize = function () {\n\tclearTimeout( this.onWindowResizeTimeout );\n\tthis.onWindowResizeTimeout = setTimeout( this.afterWindowResizeHandler, 200 );\n};\n\n/**\n * Handle window resize events.\n *\n * @private\n * @param {jQuery.Event} e Window resize event\n */\nOO.ui.WindowManager.prototype.afterWindowResize = function () {\n\tif ( this.currentWindow ) {\n\t\tthis.updateWindowSize( this.currentWindow );\n\t}\n};\n\n/**\n * Check if window is opening.\n *\n * @param {OO.ui.Window} win Window to check\n * @return {boolean} Window is opening\n */\nOO.ui.WindowManager.prototype.isOpening = function ( win ) {\n\treturn win === this.currentWindow && !!this.opening && this.opening.state() === 'pending';\n};\n\n/**\n * Check if window is closing.\n *\n * @param {OO.ui.Window} win Window to check\n * @return {boolean} Window is closing\n */\nOO.ui.WindowManager.prototype.isClosing = function ( win ) {\n\treturn win === this.currentWindow && !!this.closing && this.closing.state() === 'pending';\n};\n\n/**\n * Check if window is opened.\n *\n * @param {OO.ui.Window} win Window to check\n * @return {boolean} Window is opened\n */\nOO.ui.WindowManager.prototype.isOpened = function ( win ) {\n\treturn win === this.currentWindow && !!this.opened && this.opened.state() === 'pending';\n};\n\n/**\n * Check if a window is being managed.\n *\n * @param {OO.ui.Window} win Window to check\n * @return {boolean} Window is being managed\n */\nOO.ui.WindowManager.prototype.hasWindow = function ( win ) {\n\tvar name;\n\n\tfor ( name in this.windows ) {\n\t\tif ( this.windows[ name ] === win ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n};\n\n/**\n * Get the number of milliseconds to wait after opening begins before executing the ‘setup’ process.\n *\n * @param {OO.ui.Window} win Window being opened\n * @param {Object} [data] Window opening data\n * @return {number} Milliseconds to wait\n */\nOO.ui.WindowManager.prototype.getSetupDelay = function () {\n\treturn 0;\n};\n\n/**\n * Get the number of milliseconds to wait after setup has finished before executing the ‘ready’ process.\n *\n * @param {OO.ui.Window} win Window being opened\n * @param {Object} [data] Window opening data\n * @return {number} Milliseconds to wait\n */\nOO.ui.WindowManager.prototype.getReadyDelay = function () {\n\treturn 0;\n};\n\n/**\n * Get the number of milliseconds to wait after closing has begun before executing the 'hold' process.\n *\n * @param {OO.ui.Window} win Window being closed\n * @param {Object} [data] Window closing data\n * @return {number} Milliseconds to wait\n */\nOO.ui.WindowManager.prototype.getHoldDelay = function () {\n\treturn 0;\n};\n\n/**\n * Get the number of milliseconds to wait after the ‘hold’ process has finished before\n * executing the ‘teardown’ process.\n *\n * @param {OO.ui.Window} win Window being closed\n * @param {Object} [data] Window closing data\n * @return {number} Milliseconds to wait\n */\nOO.ui.WindowManager.prototype.getTeardownDelay = function () {\n\treturn this.modal ? 250 : 0;\n};\n\n/**\n * Get a window by its symbolic name.\n *\n * If the window is not yet instantiated and its symbolic name is recognized by a factory, it will be\n * instantiated and added to the window manager automatically. Please see the [OOjs UI documentation on MediaWiki][3]\n * for more information about using factories.\n * [3]: https://www.mediawiki.org/wiki/OOjs_UI/Windows/Window_managers\n *\n * @param {string} name Symbolic name of the window\n * @return {jQuery.Promise} Promise resolved with matching window, or rejected with an OO.ui.Error\n * @throws {Error} An error is thrown if the symbolic name is not recognized by the factory.\n * @throws {Error} An error is thrown if the named window is not recognized as a managed window.\n */\nOO.ui.WindowManager.prototype.getWindow = function ( name ) {\n\tvar deferred = $.Deferred(),\n\t\twin = this.windows[ name ];\n\n\tif ( !( win instanceof OO.ui.Window ) ) {\n\t\tif ( this.factory ) {\n\t\t\tif ( !this.factory.lookup( name ) ) {\n\t\t\t\tdeferred.reject( new OO.ui.Error(\n\t\t\t\t\t'Cannot auto-instantiate window: symbolic name is unrecognized by the factory'\n\t\t\t\t) );\n\t\t\t} else {\n\t\t\t\twin = this.factory.create( name );\n\t\t\t\tthis.addWindows( [ win ] );\n\t\t\t\tdeferred.resolve( win );\n\t\t\t}\n\t\t} else {\n\t\t\tdeferred.reject( new OO.ui.Error(\n\t\t\t\t'Cannot get unmanaged window: symbolic name unrecognized as a managed window'\n\t\t\t) );\n\t\t}\n\t} else {\n\t\tdeferred.resolve( win );\n\t}\n\n\treturn deferred.promise();\n};\n\n/**\n * Get current window.\n *\n * @return {OO.ui.Window|null} Currently opening/opened/closing window\n */\nOO.ui.WindowManager.prototype.getCurrentWindow = function () {\n\treturn this.currentWindow;\n};\n\n/**\n * Open a window.\n *\n * @param {OO.ui.Window|string} win Window object or symbolic name of window to open\n * @param {Object} [data] Window opening data\n * @param {jQuery|null} [data.$returnFocusTo] Element to which the window will return focus when closed.\n *  Defaults the current activeElement. If set to null, focus isn't changed on close.\n * @return {jQuery.Promise} An `opening` promise resolved when the window is done opening.\n *  See {@link #event-opening 'opening' event}  for more information about `opening` promises.\n * @fires opening\n */\nOO.ui.WindowManager.prototype.openWindow = function ( win, data ) {\n\tvar manager = this,\n\t\topening = $.Deferred();\n\tdata = data || {};\n\n\t// Argument handling\n\tif ( typeof win === 'string' ) {\n\t\treturn this.getWindow( win ).then( function ( win ) {\n\t\t\treturn manager.openWindow( win, data );\n\t\t} );\n\t}\n\n\t// Error handling\n\tif ( !this.hasWindow( win ) ) {\n\t\topening.reject( new OO.ui.Error(\n\t\t\t'Cannot open window: window is not attached to manager'\n\t\t) );\n\t} else if ( this.preparingToOpen || this.opening || this.opened ) {\n\t\topening.reject( new OO.ui.Error(\n\t\t\t'Cannot open window: another window is opening or open'\n\t\t) );\n\t}\n\n\t// Window opening\n\tif ( opening.state() !== 'rejected' ) {\n\t\t// If a window is currently closing, wait for it to complete\n\t\tthis.preparingToOpen = $.when( this.closing );\n\t\t// Ensure handlers get called after preparingToOpen is set\n\t\tthis.preparingToOpen.done( function () {\n\t\t\tif ( manager.modal ) {\n\t\t\t\tmanager.toggleGlobalEvents( true );\n\t\t\t\tmanager.toggleAriaIsolation( true );\n\t\t\t}\n\t\t\tmanager.$returnFocusTo = data.$returnFocusTo || $( document.activeElement );\n\t\t\tmanager.currentWindow = win;\n\t\t\tmanager.opening = opening;\n\t\t\tmanager.preparingToOpen = null;\n\t\t\tmanager.emit( 'opening', win, opening, data );\n\t\t\tsetTimeout( function () {\n\t\t\t\twin.setup( data ).then( function () {\n\t\t\t\t\tmanager.updateWindowSize( win );\n\t\t\t\t\tmanager.opening.notify( { state: 'setup' } );\n\t\t\t\t\tsetTimeout( function () {\n\t\t\t\t\t\twin.ready( data ).then( function () {\n\t\t\t\t\t\t\tmanager.opening.notify( { state: 'ready' } );\n\t\t\t\t\t\t\tmanager.opening = null;\n\t\t\t\t\t\t\tmanager.opened = $.Deferred();\n\t\t\t\t\t\t\topening.resolve( manager.opened.promise(), data );\n\t\t\t\t\t\t}, function () {\n\t\t\t\t\t\t\tmanager.opening = null;\n\t\t\t\t\t\t\tmanager.opened = $.Deferred();\n\t\t\t\t\t\t\topening.reject();\n\t\t\t\t\t\t\tmanager.closeWindow( win );\n\t\t\t\t\t\t} );\n\t\t\t\t\t}, manager.getReadyDelay() );\n\t\t\t\t}, function () {\n\t\t\t\t\tmanager.opening = null;\n\t\t\t\t\tmanager.opened = $.Deferred();\n\t\t\t\t\topening.reject();\n\t\t\t\t\tmanager.closeWindow( win );\n\t\t\t\t} );\n\t\t\t}, manager.getSetupDelay() );\n\t\t} );\n\t}\n\n\treturn opening.promise();\n};\n\n/**\n * Close a window.\n *\n * @param {OO.ui.Window|string} win Window object or symbolic name of window to close\n * @param {Object} [data] Window closing data\n * @return {jQuery.Promise} A `closing` promise resolved when the window is done closing.\n *  See {@link #event-closing 'closing' event} for more information about closing promises.\n * @throws {Error} An error is thrown if the window is not managed by the window manager.\n * @fires closing\n */\nOO.ui.WindowManager.prototype.closeWindow = function ( win, data ) {\n\tvar manager = this,\n\t\tclosing = $.Deferred(),\n\t\topened;\n\n\t// Argument handling\n\tif ( typeof win === 'string' ) {\n\t\twin = this.windows[ win ];\n\t} else if ( !this.hasWindow( win ) ) {\n\t\twin = null;\n\t}\n\n\t// Error handling\n\tif ( !win ) {\n\t\tclosing.reject( new OO.ui.Error(\n\t\t\t'Cannot close window: window is not attached to manager'\n\t\t) );\n\t} else if ( win !== this.currentWindow ) {\n\t\tclosing.reject( new OO.ui.Error(\n\t\t\t'Cannot close window: window already closed with different data'\n\t\t) );\n\t} else if ( this.preparingToClose || this.closing ) {\n\t\tclosing.reject( new OO.ui.Error(\n\t\t\t'Cannot close window: window already closing with different data'\n\t\t) );\n\t}\n\n\t// Window closing\n\tif ( closing.state() !== 'rejected' ) {\n\t\t// If the window is currently opening, close it when it's done\n\t\tthis.preparingToClose = $.when( this.opening );\n\t\t// Ensure handlers get called after preparingToClose is set\n\t\tthis.preparingToClose.always( function () {\n\t\t\tmanager.closing = closing;\n\t\t\tmanager.preparingToClose = null;\n\t\t\tmanager.emit( 'closing', win, closing, data );\n\t\t\topened = manager.opened;\n\t\t\tmanager.opened = null;\n\t\t\topened.resolve( closing.promise(), data );\n\t\t\tsetTimeout( function () {\n\t\t\t\twin.hold( data ).then( function () {\n\t\t\t\t\tclosing.notify( { state: 'hold' } );\n\t\t\t\t\tsetTimeout( function () {\n\t\t\t\t\t\twin.teardown( data ).then( function () {\n\t\t\t\t\t\t\tclosing.notify( { state: 'teardown' } );\n\t\t\t\t\t\t\tif ( manager.modal ) {\n\t\t\t\t\t\t\t\tmanager.toggleGlobalEvents( false );\n\t\t\t\t\t\t\t\tmanager.toggleAriaIsolation( false );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( manager.$returnFocusTo && manager.$returnFocusTo.length ) {\n\t\t\t\t\t\t\t\tmanager.$returnFocusTo[ 0 ].focus();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmanager.closing = null;\n\t\t\t\t\t\t\tmanager.currentWindow = null;\n\t\t\t\t\t\t\tclosing.resolve( data );\n\t\t\t\t\t\t} );\n\t\t\t\t\t}, manager.getTeardownDelay() );\n\t\t\t\t} );\n\t\t\t}, manager.getHoldDelay() );\n\t\t} );\n\t}\n\n\treturn closing.promise();\n};\n\n/**\n * Add windows to the window manager.\n *\n * Windows can be added by reference, symbolic name, or explicitly defined symbolic names.\n * See the [OOjs ui documentation on MediaWiki] [2] for examples.\n * [2]: https://www.mediawiki.org/wiki/OOjs_UI/Windows/Window_managers\n *\n * This function can be called in two manners:\n *\n * 1. `.addWindows( [ windowA, windowB, ... ] )` (where `windowA`, `windowB` are OO.ui.Window objects)\n *\n *    This syntax registers windows under the symbolic names defined in their `.static.name`\n *    properties. For example, if `windowA.constructor.static.name` is `'nameA'`, calling\n *    `.openWindow( 'nameA' )` afterwards will open the window `windowA`. This syntax requires the\n *    static name to be set, otherwise an exception will be thrown.\n *\n *    This is the recommended way, as it allows for an easier switch to using a window factory.\n *\n * 2. `.addWindows( { nameA: windowA, nameB: windowB, ... } )`\n *\n *    This syntax registers windows under the explicitly given symbolic names. In this example,\n *    calling `.openWindow( 'nameA' )` afterwards will open the window `windowA`, regardless of what\n *    its `.static.name` is set to. The static name is not required to be set.\n *\n *    This should only be used if you need to override the default symbolic names.\n *\n * Example:\n *\n *     var windowManager = new OO.ui.WindowManager();\n *     $( 'body' ).append( windowManager.$element );\n *\n *     // Add a window under the default name: see OO.ui.MessageDialog.static.name\n *     windowManager.addWindows( [ new OO.ui.MessageDialog() ] );\n *     // Add a window under an explicit name\n *     windowManager.addWindows( { myMessageDialog: new OO.ui.MessageDialog() } );\n *\n *     // Open window by default name\n *     windowManager.openWindow( 'message' );\n *     // Open window by explicitly given name\n *     windowManager.openWindow( 'myMessageDialog' );\n *\n *\n * @param {Object.<string,OO.ui.Window>|OO.ui.Window[]} windows An array of window objects specified\n *  by reference, symbolic name, or explicitly defined symbolic names.\n * @throws {Error} An error is thrown if a window is added by symbolic name, but has neither an\n *  explicit nor a statically configured symbolic name.\n */\nOO.ui.WindowManager.prototype.addWindows = function ( windows ) {\n\tvar i, len, win, name, list;\n\n\tif ( Array.isArray( windows ) ) {\n\t\t// Convert to map of windows by looking up symbolic names from static configuration\n\t\tlist = {};\n\t\tfor ( i = 0, len = windows.length; i < len; i++ ) {\n\t\t\tname = windows[ i ].constructor.static.name;\n\t\t\tif ( !name ) {\n\t\t\t\tthrow new Error( 'Windows must have a `name` static property defined.' );\n\t\t\t}\n\t\t\tlist[ name ] = windows[ i ];\n\t\t}\n\t} else if ( OO.isPlainObject( windows ) ) {\n\t\tlist = windows;\n\t}\n\n\t// Add windows\n\tfor ( name in list ) {\n\t\twin = list[ name ];\n\t\tthis.windows[ name ] = win.toggle( false );\n\t\tthis.$element.append( win.$element );\n\t\twin.setManager( this );\n\t}\n};\n\n/**\n * Remove the specified windows from the windows manager.\n *\n * Windows will be closed before they are removed. If you wish to remove all windows, you may wish to use\n * the #clearWindows method instead. If you no longer need the window manager and want to ensure that it no\n * longer listens to events, use the #destroy method.\n *\n * @param {string[]} names Symbolic names of windows to remove\n * @return {jQuery.Promise} Promise resolved when window is closed and removed\n * @throws {Error} An error is thrown if the named windows are not managed by the window manager.\n */\nOO.ui.WindowManager.prototype.removeWindows = function ( names ) {\n\tvar i, len, win, name, cleanupWindow,\n\t\tmanager = this,\n\t\tpromises = [],\n\t\tcleanup = function ( name, win ) {\n\t\t\tdelete manager.windows[ name ];\n\t\t\twin.$element.detach();\n\t\t};\n\n\tfor ( i = 0, len = names.length; i < len; i++ ) {\n\t\tname = names[ i ];\n\t\twin = this.windows[ name ];\n\t\tif ( !win ) {\n\t\t\tthrow new Error( 'Cannot remove window' );\n\t\t}\n\t\tcleanupWindow = cleanup.bind( null, name, win );\n\t\tpromises.push( this.closeWindow( name ).then( cleanupWindow, cleanupWindow ) );\n\t}\n\n\treturn $.when.apply( $, promises );\n};\n\n/**\n * Remove all windows from the window manager.\n *\n * Windows will be closed before they are removed. Note that the window manager, though not in use, will still\n * listen to events. If the window manager will not be used again, you may wish to use the #destroy method instead.\n * To remove just a subset of windows, use the #removeWindows method.\n *\n * @return {jQuery.Promise} Promise resolved when all windows are closed and removed\n */\nOO.ui.WindowManager.prototype.clearWindows = function () {\n\treturn this.removeWindows( Object.keys( this.windows ) );\n};\n\n/**\n * Set dialog size. In general, this method should not be called directly.\n *\n * Fullscreen mode will be used if the dialog is too wide to fit in the screen.\n *\n * @param {OO.ui.Window} win Window to update, should be the current window\n * @chainable\n */\nOO.ui.WindowManager.prototype.updateWindowSize = function ( win ) {\n\tvar isFullscreen;\n\n\t// Bypass for non-current, and thus invisible, windows\n\tif ( win !== this.currentWindow ) {\n\t\treturn;\n\t}\n\n\tisFullscreen = win.getSize() === 'full';\n\n\tthis.$element.toggleClass( 'oo-ui-windowManager-fullscreen', isFullscreen );\n\tthis.$element.toggleClass( 'oo-ui-windowManager-floating', !isFullscreen );\n\twin.setDimensions( win.getSizeProperties() );\n\n\tthis.emit( 'resize', win );\n\n\treturn this;\n};\n\n/**\n * Bind or unbind global events for scrolling.\n *\n * @private\n * @param {boolean} [on] Bind global events\n * @chainable\n */\nOO.ui.WindowManager.prototype.toggleGlobalEvents = function ( on ) {\n\tvar scrollWidth, bodyMargin,\n\t\t$body = $( this.getElementDocument().body ),\n\t\t// We could have multiple window managers open so only modify\n\t\t// the body css at the bottom of the stack\n\t\tstackDepth = $body.data( 'windowManagerGlobalEvents' ) || 0;\n\n\ton = on === undefined ? !!this.globalEvents : !!on;\n\n\tif ( on ) {\n\t\tif ( !this.globalEvents ) {\n\t\t\t$( this.getElementWindow() ).on( {\n\t\t\t\t// Start listening for top-level window dimension changes\n\t\t\t\t'orientationchange resize': this.onWindowResizeHandler\n\t\t\t} );\n\t\t\tif ( stackDepth === 0 ) {\n\t\t\t\tscrollWidth = window.innerWidth - document.documentElement.clientWidth;\n\t\t\t\tbodyMargin = parseFloat( $body.css( 'margin-right' ) ) || 0;\n\t\t\t\t$body.css( {\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t'margin-right': bodyMargin + scrollWidth\n\t\t\t\t} );\n\t\t\t}\n\t\t\tstackDepth++;\n\t\t\tthis.globalEvents = true;\n\t\t}\n\t} else if ( this.globalEvents ) {\n\t\t$( this.getElementWindow() ).off( {\n\t\t\t// Stop listening for top-level window dimension changes\n\t\t\t'orientationchange resize': this.onWindowResizeHandler\n\t\t} );\n\t\tstackDepth--;\n\t\tif ( stackDepth === 0 ) {\n\t\t\t$body.css( {\n\t\t\t\toverflow: '',\n\t\t\t\t'margin-right': ''\n\t\t\t} );\n\t\t}\n\t\tthis.globalEvents = false;\n\t}\n\t$body.data( 'windowManagerGlobalEvents', stackDepth );\n\n\treturn this;\n};\n\n/**\n * Toggle screen reader visibility of content other than the window manager.\n *\n * @private\n * @param {boolean} [isolate] Make only the window manager visible to screen readers\n * @chainable\n */\nOO.ui.WindowManager.prototype.toggleAriaIsolation = function ( isolate ) {\n\tisolate = isolate === undefined ? !this.$ariaHidden : !!isolate;\n\n\tif ( isolate ) {\n\t\tif ( !this.$ariaHidden ) {\n\t\t\t// Hide everything other than the window manager from screen readers\n\t\t\tthis.$ariaHidden = $( 'body' )\n\t\t\t\t.children()\n\t\t\t\t.not( this.$element.parentsUntil( 'body' ).last() )\n\t\t\t\t.attr( 'aria-hidden', '' );\n\t\t}\n\t} else if ( this.$ariaHidden ) {\n\t\t// Restore screen reader visibility\n\t\tthis.$ariaHidden.removeAttr( 'aria-hidden' );\n\t\tthis.$ariaHidden = null;\n\t}\n\n\treturn this;\n};\n\n/**\n * Destroy the window manager.\n *\n * Destroying the window manager ensures that it will no longer listen to events. If you would like to\n * continue using the window manager, but wish to remove all windows from it, use the #clearWindows method\n * instead.\n */\nOO.ui.WindowManager.prototype.destroy = function () {\n\tthis.toggleGlobalEvents( false );\n\tthis.toggleAriaIsolation( false );\n\tthis.clearWindows();\n\tthis.$element.remove();\n};\n\n/**\n * A window is a container for elements that are in a child frame. They are used with\n * a window manager (OO.ui.WindowManager), which is used to open and close the window and control\n * its presentation. The size of a window is specified using a symbolic name (e.g., ‘small’, ‘medium’,\n * ‘large’), which is interpreted by the window manager. If the requested size is not recognized,\n * the window manager will choose a sensible fallback.\n *\n * The lifecycle of a window has three primary stages (opening, opened, and closing) in which\n * different processes are executed:\n *\n * **opening**: The opening stage begins when the window manager's {@link OO.ui.WindowManager#openWindow\n * openWindow} or the window's {@link #open open} methods are used, and the window manager begins to open\n * the window.\n *\n * - {@link #getSetupProcess} method is called and its result executed\n * - {@link #getReadyProcess} method is called and its result executed\n *\n * **opened**: The window is now open\n *\n * **closing**: The closing stage begins when the window manager's\n * {@link OO.ui.WindowManager#closeWindow closeWindow}\n * or the window's {@link #close} methods are used, and the window manager begins to close the window.\n *\n * - {@link #getHoldProcess} method is called and its result executed\n * - {@link #getTeardownProcess} method is called and its result executed. The window is now closed\n *\n * Each of the window's processes (setup, ready, hold, and teardown) can be extended in subclasses\n * by overriding the window's #getSetupProcess, #getReadyProcess, #getHoldProcess and #getTeardownProcess\n * methods. Note that each {@link OO.ui.Process process} is executed in series, so asynchronous\n * processing can complete. Always assume window processes are executed asynchronously.\n *\n * For more information, please see the [OOjs UI documentation on MediaWiki] [1].\n *\n * [1]: https://www.mediawiki.org/wiki/OOjs_UI/Windows\n *\n * @abstract\n * @class\n * @extends OO.ui.Element\n * @mixins OO.EventEmitter\n *\n * @constructor\n * @param {Object} [config] Configuration options\n * @cfg {string} [size] Symbolic name of the dialog size: `small`, `medium`, `large`, `larger` or\n *  `full`.  If omitted, the value of the {@link #static-size static size} property will be used.\n */\nOO.ui.Window = function OoUiWindow( config ) {\n\t// Configuration initialization\n\tconfig = config || {};\n\n\t// Parent constructor\n\tOO.ui.Window.parent.call( this, config );\n\n\t// Mixin constructors\n\tOO.EventEmitter.call( this );\n\n\t// Properties\n\tthis.manager = null;\n\tthis.size = config.size || this.constructor.static.size;\n\tthis.$frame = $( '<div>' );\n\tthis.$overlay = $( '<div>' );\n\tthis.$content = $( '<div>' );\n\n\tthis.$focusTrapBefore = $( '<div>' ).prop( 'tabIndex', 0 );\n\tthis.$focusTrapAfter = $( '<div>' ).prop( 'tabIndex', 0 );\n\tthis.$focusTraps = this.$focusTrapBefore.add( this.$focusTrapAfter );\n\n\t// Initialization\n\tthis.$overlay.addClass( 'oo-ui-window-overlay' );\n\tthis.$content\n\t\t.addClass( 'oo-ui-window-content' )\n\t\t.attr( 'tabindex', 0 );\n\tthis.$frame\n\t\t.addClass( 'oo-ui-window-frame' )\n\t\t.append( this.$focusTrapBefore, this.$content, this.$focusTrapAfter );\n\n\tthis.$element\n\t\t.addClass( 'oo-ui-window' )\n\t\t.append( this.$frame, this.$overlay );\n\n\t// Initially hidden - using #toggle may cause errors if subclasses override toggle with methods\n\t// that reference properties not initialized at that time of parent class construction\n\t// TODO: Find a better way to handle post-constructor setup\n\tthis.visible = false;\n\tthis.$element.addClass( 'oo-ui-element-hidden' );\n};\n\n/* Setup */\n\nOO.inheritClass( OO.ui.Window, OO.ui.Element );\nOO.mixinClass( OO.ui.Window, OO.EventEmitter );\n\n/* Static Properties */\n\n/**\n * Symbolic name of the window size: `small`, `medium`, `large`, `larger` or `full`.\n *\n * The static size is used if no #size is configured during construction.\n *\n * @static\n * @inheritable\n * @property {string}\n */\nOO.ui.Window.static.size = 'medium';\n\n/* Methods */\n\n/**\n * Handle mouse down events.\n *\n * @private\n * @param {jQuery.Event} e Mouse down event\n */\nOO.ui.Window.prototype.onMouseDown = function ( e ) {\n\t// Prevent clicking on the click-block from stealing focus\n\tif ( e.target === this.$element[ 0 ] ) {\n\t\treturn false;\n\t}\n};\n\n/**\n * Check if the window has been initialized.\n *\n * Initialization occurs when a window is added to a manager.\n *\n * @return {boolean} Window has been initialized\n */\nOO.ui.Window.prototype.isInitialized = function () {\n\treturn !!this.manager;\n};\n\n/**\n * Check if the window is visible.\n *\n * @return {boolean} Window is visible\n */\nOO.ui.Window.prototype.isVisible = function () {\n\treturn this.visible;\n};\n\n/**\n * Check if the window is opening.\n *\n * This method is a wrapper around the window manager's {@link OO.ui.WindowManager#isOpening isOpening}\n * method.\n *\n * @return {boolean} Window is opening\n */\nOO.ui.Window.prototype.isOpening = function () {\n\treturn this.manager.isOpening( this );\n};\n\n/**\n * Check if the window is closing.\n *\n * This method is a wrapper around the window manager's {@link OO.ui.WindowManager#isClosing isClosing} method.\n *\n * @return {boolean} Window is closing\n */\nOO.ui.Window.prototype.isClosing = function () {\n\treturn this.manager.isClosing( this );\n};\n\n/**\n * Check if the window is opened.\n *\n * This method is a wrapper around the window manager's {@link OO.ui.WindowManager#isOpened isOpened} method.\n *\n * @return {boolean} Window is opened\n */\nOO.ui.Window.prototype.isOpened = function () {\n\treturn this.manager.isOpened( this );\n};\n\n/**\n * Get the window manager.\n *\n * All windows must be attached to a window manager, which is used to open\n * and close the window and control its presentation.\n *\n * @return {OO.ui.WindowManager} Manager of window\n */\nOO.ui.Window.prototype.getManager = function () {\n\treturn this.manager;\n};\n\n/**\n * Get the symbolic name of the window size (e.g., `small` or `medium`).\n *\n * @return {string} Symbolic name of the size: `small`, `medium`, `large`, `larger`, `full`\n */\nOO.ui.Window.prototype.getSize = function () {\n\tvar viewport = OO.ui.Element.static.getDimensions( this.getElementWindow() ),\n\t\tsizes = this.manager.constructor.static.sizes,\n\t\tsize = this.size;\n\n\tif ( !sizes[ size ] ) {\n\t\tsize = this.manager.constructor.static.defaultSize;\n\t}\n\tif ( size !== 'full' && viewport.rect.right - viewport.rect.left < sizes[ size ].width ) {\n\t\tsize = 'full';\n\t}\n\n\treturn size;\n};\n\n/**\n * Get the size properties associated with the current window size\n *\n * @return {Object} Size properties\n */\nOO.ui.Window.prototype.getSizeProperties = function () {\n\treturn this.manager.constructor.static.sizes[ this.getSize() ];\n};\n\n/**\n * Disable transitions on window's frame for the duration of the callback function, then enable them\n * back.\n *\n * @private\n * @param {Function} callback Function to call while transitions are disabled\n */\nOO.ui.Window.prototype.withoutSizeTransitions = function ( callback ) {\n\t// Temporarily resize the frame so getBodyHeight() can use scrollHeight measurements.\n\t// Disable transitions first, otherwise we'll get values from when the window was animating.\n\t// We need to build the transition CSS properties using these specific properties since\n\t// Firefox doesn't return anything useful when asked just for 'transition'.\n\tvar oldTransition = this.$frame.css( 'transition-property' ) + ' ' +\n\t\tthis.$frame.css( 'transition-duration' ) + ' ' +\n\t\tthis.$frame.css( 'transition-timing-function' ) + ' ' +\n\t\tthis.$frame.css( 'transition-delay' );\n\n\tthis.$frame.css( 'transition', 'none' );\n\tcallback();\n\n\t// Force reflow to make sure the style changes done inside callback\n\t// really are not transitioned\n\tthis.$frame.height();\n\tthis.$frame.css( 'transition', oldTransition );\n};\n\n/**\n * Get the height of the full window contents (i.e., the window head, body and foot together).\n *\n * What consistitutes the head, body, and foot varies depending on the window type.\n * A {@link OO.ui.MessageDialog message dialog} displays a title and message in its body,\n * and any actions in the foot. A {@link OO.ui.ProcessDialog process dialog} displays a title\n * and special actions in the head, and dialog content in the body.\n *\n * To get just the height of the dialog body, use the #getBodyHeight method.\n *\n * @return {number} The height of the window contents (the dialog head, body and foot) in pixels\n */\nOO.ui.Window.prototype.getContentHeight = function () {\n\tvar bodyHeight,\n\t\twin = this,\n\t\tbodyStyleObj = this.$body[ 0 ].style,\n\t\tframeStyleObj = this.$frame[ 0 ].style;\n\n\t// Temporarily resize the frame so getBodyHeight() can use scrollHeight measurements.\n\t// Disable transitions first, otherwise we'll get values from when the window was animating.\n\tthis.withoutSizeTransitions( function () {\n\t\tvar oldHeight = frameStyleObj.height,\n\t\t\toldPosition = bodyStyleObj.position;\n\t\tframeStyleObj.height = '1px';\n\t\t// Force body to resize to new width\n\t\tbodyStyleObj.position = 'relative';\n\t\tbodyHeight = win.getBodyHeight();\n\t\tframeStyleObj.height = oldHeight;\n\t\tbodyStyleObj.position = oldPosition;\n\t} );\n\n\treturn (\n\t\t// Add buffer for border\n\t\t( this.$frame.outerHeight() - this.$frame.innerHeight() ) +\n\t\t// Use combined heights of children\n\t\t( this.$head.outerHeight( true ) + bodyHeight + this.$foot.outerHeight( true ) )\n\t);\n};\n\n/**\n * Get the height of the window body.\n *\n * To get the height of the full window contents (the window body, head, and foot together),\n * use #getContentHeight.\n *\n * When this function is called, the window will temporarily have been resized\n * to height=1px, so .scrollHeight measurements can be taken accurately.\n *\n * @return {number} Height of the window body in pixels\n */\nOO.ui.Window.prototype.getBodyHeight = function () {\n\treturn this.$body[ 0 ].scrollHeight;\n};\n\n/**\n * Get the directionality of the frame (right-to-left or left-to-right).\n *\n * @return {string} Directionality: `'ltr'` or `'rtl'`\n */\nOO.ui.Window.prototype.getDir = function () {\n\treturn OO.ui.Element.static.getDir( this.$content ) || 'ltr';\n};\n\n/**\n * Get the 'setup' process.\n *\n * The setup process is used to set up a window for use in a particular context,\n * based on the `data` argument. This method is called during the opening phase of the window’s\n * lifecycle.\n *\n * Override this method to add additional steps to the ‘setup’ process the parent method provides\n * using the {@link OO.ui.Process#first first} and {@link OO.ui.Process#next next} methods\n * of OO.ui.Process.\n *\n * To add window content that persists between openings, you may wish to use the #initialize method\n * instead.\n *\n * @param {Object} [data] Window opening data\n * @return {OO.ui.Process} Setup process\n */\nOO.ui.Window.prototype.getSetupProcess = function () {\n\treturn new OO.ui.Process();\n};\n\n/**\n * Get the ‘ready’ process.\n *\n * The ready process is used to ready a window for use in a particular\n * context, based on the `data` argument. This method is called during the opening phase of\n * the window’s lifecycle, after the window has been {@link #getSetupProcess setup}.\n *\n * Override this method to add additional steps to the ‘ready’ process the parent method\n * provides using the {@link OO.ui.Process#first first} and {@link OO.ui.Process#next next}\n * methods of OO.ui.Process.\n *\n * @param {Object} [data] Window opening data\n * @return {OO.ui.Process} Ready process\n */\nOO.ui.Window.prototype.getReadyProcess = function () {\n\treturn new OO.ui.Process();\n};\n\n/**\n * Get the 'hold' process.\n *\n * The hold process is used to keep a window from being used in a particular context,\n * based on the `data` argument. This method is called during the closing phase of the window’s\n * lifecycle.\n *\n * Override this method to add additional steps to the 'hold' process the parent method provides\n * using the {@link OO.ui.Process#first first} and {@link OO.ui.Process#next next} methods\n * of OO.ui.Process.\n *\n * @param {Object} [data] Window closing data\n * @return {OO.ui.Process} Hold process\n */\nOO.ui.Window.prototype.getHoldProcess = function () {\n\treturn new OO.ui.Process();\n};\n\n/**\n * Get the ‘teardown’ process.\n *\n * The teardown process is used to teardown a window after use. During teardown,\n * user interactions within the window are conveyed and the window is closed, based on the `data`\n * argument. This method is called during the closing phase of the window’s lifecycle.\n *\n * Override this method to add additional steps to the ‘teardown’ process the parent method provides\n * using the {@link OO.ui.Process#first first} and {@link OO.ui.Process#next next} methods\n * of OO.ui.Process.\n *\n * @param {Object} [data] Window closing data\n * @return {OO.ui.Process} Teardown process\n */\nOO.ui.Window.prototype.getTeardownProcess = function () {\n\treturn new OO.ui.Process();\n};\n\n/**\n * Set the window manager.\n *\n * This will cause the window to initialize. Calling it more than once will cause an error.\n *\n * @param {OO.ui.WindowManager} manager Manager for this window\n * @throws {Error} An error is thrown if the method is called more than once\n * @chainable\n */\nOO.ui.Window.prototype.setManager = function ( manager ) {\n\tif ( this.manager ) {\n\t\tthrow new Error( 'Cannot set window manager, window already has a manager' );\n\t}\n\n\tthis.manager = manager;\n\tthis.initialize();\n\n\treturn this;\n};\n\n/**\n * Set the window size by symbolic name (e.g., 'small' or 'medium')\n *\n * @param {string} size Symbolic name of size: `small`, `medium`, `large`, `larger` or\n *  `full`\n * @chainable\n */\nOO.ui.Window.prototype.setSize = function ( size ) {\n\tthis.size = size;\n\tthis.updateSize();\n\treturn this;\n};\n\n/**\n * Update the window size.\n *\n * @throws {Error} An error is thrown if the window is not attached to a window manager\n * @chainable\n */\nOO.ui.Window.prototype.updateSize = function () {\n\tif ( !this.manager ) {\n\t\tthrow new Error( 'Cannot update window size, must be attached to a manager' );\n\t}\n\n\tthis.manager.updateWindowSize( this );\n\n\treturn this;\n};\n\n/**\n * Set window dimensions. This method is called by the {@link OO.ui.WindowManager window manager}\n * when the window is opening. In general, setDimensions should not be called directly.\n *\n * To set the size of the window, use the #setSize method.\n *\n * @param {Object} dim CSS dimension properties\n * @param {string|number} [dim.width] Width\n * @param {string|number} [dim.minWidth] Minimum width\n * @param {string|number} [dim.maxWidth] Maximum width\n * @param {string|number} [dim.height] Height, omit to set based on height of contents\n * @param {string|number} [dim.minHeight] Minimum height\n * @param {string|number} [dim.maxHeight] Maximum height\n * @chainable\n */\nOO.ui.Window.prototype.setDimensions = function ( dim ) {\n\tvar height,\n\t\twin = this,\n\t\tstyleObj = this.$frame[ 0 ].style;\n\n\t// Calculate the height we need to set using the correct width\n\tif ( dim.height === undefined ) {\n\t\tthis.withoutSizeTransitions( function () {\n\t\t\tvar oldWidth = styleObj.width;\n\t\t\twin.$frame.css( 'width', dim.width || '' );\n\t\t\theight = win.getContentHeight();\n\t\t\tstyleObj.width = oldWidth;\n\t\t} );\n\t} else {\n\t\theight = dim.height;\n\t}\n\n\tthis.$frame.css( {\n\t\twidth: dim.width || '',\n\t\tminWidth: dim.minWidth || '',\n\t\tmaxWidth: dim.maxWidth || '',\n\t\theight: height || '',\n\t\tminHeight: dim.minHeight || '',\n\t\tmaxHeight: dim.maxHeight || ''\n\t} );\n\n\treturn this;\n};\n\n/**\n * Initialize window contents.\n *\n * Before the window is opened for the first time, #initialize is called so that content that\n * persists between openings can be added to the window.\n *\n * To set up a window with new content each time the window opens, use #getSetupProcess.\n *\n * @throws {Error} An error is thrown if the window is not attached to a window manager\n * @chainable\n */\nOO.ui.Window.prototype.initialize = function () {\n\tif ( !this.manager ) {\n\t\tthrow new Error( 'Cannot initialize window, must be attached to a manager' );\n\t}\n\n\t// Properties\n\tthis.$head = $( '<div>' );\n\tthis.$body = $( '<div>' );\n\tthis.$foot = $( '<div>' );\n\tthis.$document = $( this.getElementDocument() );\n\n\t// Events\n\tthis.$element.on( 'mousedown', this.onMouseDown.bind( this ) );\n\n\t// Initialization\n\tthis.$head.addClass( 'oo-ui-window-head' );\n\tthis.$body.addClass( 'oo-ui-window-body' );\n\tthis.$foot.addClass( 'oo-ui-window-foot' );\n\tthis.$content.append( this.$head, this.$body, this.$foot );\n\n\treturn this;\n};\n\n/**\n * Called when someone tries to focus the hidden element at the end of the dialog.\n * Sends focus back to the start of the dialog.\n *\n * @param {jQuery.Event} event Focus event\n */\nOO.ui.Window.prototype.onFocusTrapFocused = function ( event ) {\n\tvar backwards = this.$focusTrapBefore.is( event.target ),\n\t\telement = OO.ui.findFocusable( this.$content, backwards );\n\tif ( element ) {\n\t\t// There's a focusable element inside the content, at the front or\n\t\t// back depending on which focus trap we hit; select it.\n\t\telement.focus();\n\t} else {\n\t\t// There's nothing focusable inside the content. As a fallback,\n\t\t// this.$content is focusable, and focusing it will keep our focus\n\t\t// properly trapped. It's not a *meaningful* focus, since it's just\n\t\t// the content-div for the Window, but it's better than letting focus\n\t\t// escape into the page.\n\t\tthis.$content.focus();\n\t}\n};\n\n/**\n * Open the window.\n *\n * This method is a wrapper around a call to the window manager’s {@link OO.ui.WindowManager#openWindow openWindow}\n * method, which returns a promise resolved when the window is done opening.\n *\n * To customize the window each time it opens, use #getSetupProcess or #getReadyProcess.\n *\n * @param {Object} [data] Window opening data\n * @return {jQuery.Promise} Promise resolved with a value when the window is opened, or rejected\n *  if the window fails to open. When the promise is resolved successfully, the first argument of the\n *  value is a new promise, which is resolved when the window begins closing.\n * @throws {Error} An error is thrown if the window is not attached to a window manager\n */\nOO.ui.Window.prototype.open = function ( data ) {\n\tif ( !this.manager ) {\n\t\tthrow new Error( 'Cannot open window, must be attached to a manager' );\n\t}\n\n\treturn this.manager.openWindow( this, data );\n};\n\n/**\n * Close the window.\n *\n * This method is a wrapper around a call to the window\n * manager’s {@link OO.ui.WindowManager#closeWindow closeWindow} method,\n * which returns a closing promise resolved when the window is done closing.\n *\n * The window's #getHoldProcess and #getTeardownProcess methods are called during the closing\n * phase of the window’s lifecycle and can be used to specify closing behavior each time\n * the window closes.\n *\n * @param {Object} [data] Window closing data\n * @return {jQuery.Promise} Promise resolved when window is closed\n * @throws {Error} An error is thrown if the window is not attached to a window manager\n */\nOO.ui.Window.prototype.close = function ( data ) {\n\tif ( !this.manager ) {\n\t\tthrow new Error( 'Cannot close window, must be attached to a manager' );\n\t}\n\n\treturn this.manager.closeWindow( this, data );\n};\n\n/**\n * Setup window.\n *\n * This is called by OO.ui.WindowManager during window opening, and should not be called directly\n * by other systems.\n *\n * @param {Object} [data] Window opening data\n * @return {jQuery.Promise} Promise resolved when window is setup\n */\nOO.ui.Window.prototype.setup = function ( data ) {\n\tvar win = this;\n\n\tthis.toggle( true );\n\n\tthis.focusTrapHandler = OO.ui.bind( this.onFocusTrapFocused, this );\n\tthis.$focusTraps.on( 'focus', this.focusTrapHandler );\n\n\treturn this.getSetupProcess( data ).execute().then( function () {\n\t\t// Force redraw by asking the browser to measure the elements' widths\n\t\twin.$element.addClass( 'oo-ui-window-active oo-ui-window-setup' ).width();\n\t\twin.$content.addClass( 'oo-ui-window-content-setup' ).width();\n\t} );\n};\n\n/**\n * Ready window.\n *\n * This is called by OO.ui.WindowManager during window opening, and should not be called directly\n * by other systems.\n *\n * @param {Object} [data] Window opening data\n * @return {jQuery.Promise} Promise resolved when window is ready\n */\nOO.ui.Window.prototype.ready = function ( data ) {\n\tvar win = this;\n\n\tthis.$content.focus();\n\treturn this.getReadyProcess( data ).execute().then( function () {\n\t\t// Force redraw by asking the browser to measure the elements' widths\n\t\twin.$element.addClass( 'oo-ui-window-ready' ).width();\n\t\twin.$content.addClass( 'oo-ui-window-content-ready' ).width();\n\t} );\n};\n\n/**\n * Hold window.\n *\n * This is called by OO.ui.WindowManager during window closing, and should not be called directly\n * by other systems.\n *\n * @param {Object} [data] Window closing data\n * @return {jQuery.Promise} Promise resolved when window is held\n */\nOO.ui.Window.prototype.hold = function ( data ) {\n\tvar win = this;\n\n\treturn this.getHoldProcess( data ).execute().then( function () {\n\t\t// Get the focused element within the window's content\n\t\tvar $focus = win.$content.find( OO.ui.Element.static.getDocument( win.$content ).activeElement );\n\n\t\t// Blur the focused element\n\t\tif ( $focus.length ) {\n\t\t\t$focus[ 0 ].blur();\n\t\t}\n\n\t\t// Force redraw by asking the browser to measure the elements' widths\n\t\twin.$element.removeClass( 'oo-ui-window-ready' ).width();\n\t\twin.$content.removeClass( 'oo-ui-window-content-ready' ).width();\n\t} );\n};\n\n/**\n * Teardown window.\n *\n * This is called by OO.ui.WindowManager during window closing, and should not be called directly\n * by other systems.\n *\n * @param {Object} [data] Window closing data\n * @return {jQuery.Promise} Promise resolved when window is torn down\n */\nOO.ui.Window.prototype.teardown = function ( data ) {\n\tvar win = this;\n\n\treturn this.getTeardownProcess( data ).execute().then( function () {\n\t\t// Force redraw by asking the browser to measure the elements' widths\n\t\twin.$element.removeClass( 'oo-ui-window-active oo-ui-window-setup' ).width();\n\t\twin.$content.removeClass( 'oo-ui-window-content-setup' ).width();\n\t\twin.$focusTraps.off( 'focus', win.focusTrapHandler );\n\t\twin.toggle( false );\n\t} );\n};\n\n/**\n * The Dialog class serves as the base class for the other types of dialogs.\n * Unless extended to include controls, the rendered dialog box is a simple window\n * that users can close by hitting the ‘Esc’ key. Dialog windows are used with OO.ui.WindowManager,\n * which opens, closes, and controls the presentation of the window. See the\n * [OOjs UI documentation on MediaWiki] [1] for more information.\n *\n *     @example\n *     // A simple dialog window.\n *     function MyDialog( config ) {\n *         MyDialog.parent.call( this, config );\n *     }\n *     OO.inheritClass( MyDialog, OO.ui.Dialog );\n *     MyDialog.static.name = 'myDialog';\n *     MyDialog.prototype.initialize = function () {\n *         MyDialog.parent.prototype.initialize.call( this );\n *         this.content = new OO.ui.PanelLayout( { padded: true, expanded: false } );\n *         this.content.$element.append( '<p>A simple dialog window. Press \\'Esc\\' to close.</p>' );\n *         this.$body.append( this.content.$element );\n *     };\n *     MyDialog.prototype.getBodyHeight = function () {\n *         return this.content.$element.outerHeight( true );\n *     };\n *     var myDialog = new MyDialog( {\n *         size: 'medium'\n *     } );\n *     // Create and append a window manager, which opens and closes the window.\n *     var windowManager = new OO.ui.WindowManager();\n *     $( 'body' ).append( windowManager.$element );\n *     windowManager.addWindows( [ myDialog ] );\n *     // Open the window!\n *     windowManager.openWindow( myDialog );\n *\n * [1]: https://www.mediawiki.org/wiki/OOjs_UI/Windows/Dialogs\n *\n * @abstract\n * @class\n * @extends OO.ui.Window\n * @mixins OO.ui.mixin.PendingElement\n *\n * @constructor\n * @param {Object} [config] Configuration options\n */\nOO.ui.Dialog = function OoUiDialog( config ) {\n\t// Parent constructor\n\tOO.ui.Dialog.parent.call( this, config );\n\n\t// Mixin constructors\n\tOO.ui.mixin.PendingElement.call( this );\n\n\t// Properties\n\tthis.actions = new OO.ui.ActionSet();\n\tthis.attachedActions = [];\n\tthis.currentAction = null;\n\tthis.onDialogKeyDownHandler = this.onDialogKeyDown.bind( this );\n\n\t// Events\n\tthis.actions.connect( this, {\n\t\tclick: 'onActionClick',\n\t\tchange: 'onActionsChange'\n\t} );\n\n\t// Initialization\n\tthis.$element\n\t\t.addClass( 'oo-ui-dialog' )\n\t\t.attr( 'role', 'dialog' );\n};\n\n/* Setup */\n\nOO.inheritClass( OO.ui.Dialog, OO.ui.Window );\nOO.mixinClass( OO.ui.Dialog, OO.ui.mixin.PendingElement );\n\n/* Static Properties */\n\n/**\n * Symbolic name of dialog.\n *\n * The dialog class must have a symbolic name in order to be registered with OO.Factory.\n * Please see the [OOjs UI documentation on MediaWiki] [3] for more information.\n *\n * [3]: https://www.mediawiki.org/wiki/OOjs_UI/Windows/Window_managers\n *\n * @abstract\n * @static\n * @inheritable\n * @property {string}\n */\nOO.ui.Dialog.static.name = '';\n\n/**\n * The dialog title.\n *\n * The title can be specified as a plaintext string, a {@link OO.ui.mixin.LabelElement Label} node, or a function\n * that will produce a Label node or string. The title can also be specified with data passed to the\n * constructor (see #getSetupProcess). In this case, the static value will be overridden.\n *\n * @abstract\n * @static\n * @inheritable\n * @property {jQuery|string|Function}\n */\nOO.ui.Dialog.static.title = '';\n\n/**\n * An array of configured {@link OO.ui.ActionWidget action widgets}.\n *\n * Actions can also be specified with data passed to the constructor (see #getSetupProcess). In this case, the static\n * value will be overridden.\n *\n * [2]: https://www.mediawiki.org/wiki/OOjs_UI/Windows/Process_Dialogs#Action_sets\n *\n * @static\n * @inheritable\n * @property {Object[]}\n */\nOO.ui.Dialog.static.actions = [];\n\n/**\n * Close the dialog when the 'Esc' key is pressed.\n *\n * @static\n * @abstract\n * @inheritable\n * @property {boolean}\n */\nOO.ui.Dialog.static.escapable = true;\n\n/* Methods */\n\n/**\n * Handle frame document key down events.\n *\n * @private\n * @param {jQuery.Event} e Key down event\n */\nOO.ui.Dialog.prototype.onDialogKeyDown = function ( e ) {\n\tvar actions;\n\tif ( e.which === OO.ui.Keys.ESCAPE && this.constructor.static.escapable ) {\n\t\tthis.executeAction( '' );\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t} else if ( e.which === OO.ui.Keys.ENTER && ( e.ctrlKey || e.metaKey ) ) {\n\t\tactions = this.actions.get( { flags: 'primary', visible: true, disabled: false } );\n\t\tif ( actions.length > 0 ) {\n\t\t\tthis.executeAction( actions[ 0 ].getAction() );\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t}\n\t}\n};\n\n/**\n * Handle action click events.\n *\n * @private\n * @param {OO.ui.ActionWidget} action Action that was clicked\n */\nOO.ui.Dialog.prototype.onActionClick = function ( action ) {\n\tif ( !this.isPending() ) {\n\t\tthis.executeAction( action.getAction() );\n\t}\n};\n\n/**\n * Handle actions change event.\n *\n * @private\n */\nOO.ui.Dialog.prototype.onActionsChange = function () {\n\tthis.detachActions();\n\tif ( !this.isClosing() ) {\n\t\tthis.attachActions();\n\t}\n};\n\n/**\n * Get the set of actions used by the dialog.\n *\n * @return {OO.ui.ActionSet}\n */\nOO.ui.Dialog.prototype.getActions = function () {\n\treturn this.actions;\n};\n\n/**\n * Get a process for taking action.\n *\n * When you override this method, you can create a new OO.ui.Process and return it, or add additional\n * accept steps to the process the parent method provides using the {@link OO.ui.Process#first 'first'}\n * and {@link OO.ui.Process#next 'next'} methods of OO.ui.Process.\n *\n * @param {string} [action] Symbolic name of action\n * @return {OO.ui.Process} Action process\n */\nOO.ui.Dialog.prototype.getActionProcess = function ( action ) {\n\treturn new OO.ui.Process()\n\t\t.next( function () {\n\t\t\tif ( !action ) {\n\t\t\t\t// An empty action always closes the dialog without data, which should always be\n\t\t\t\t// safe and make no changes\n\t\t\t\tthis.close();\n\t\t\t}\n\t\t}, this );\n};\n\n/**\n * @inheritdoc\n *\n * @param {Object} [data] Dialog opening data\n * @param {jQuery|string|Function|null} [data.title] Dialog title, omit to use\n *  the {@link #static-title static title}\n * @param {Object[]} [data.actions] List of configuration options for each\n *   {@link OO.ui.ActionWidget action widget}, omit to use {@link #static-actions static actions}.\n */\nOO.ui.Dialog.prototype.getSetupProcess = function ( data ) {\n\tdata = data || {};\n\n\t// Parent method\n\treturn OO.ui.Dialog.parent.prototype.getSetupProcess.call( this, data )\n\t\t.next( function () {\n\t\t\tvar config = this.constructor.static,\n\t\t\t\tactions = data.actions !== undefined ? data.actions : config.actions,\n\t\t\t\ttitle = data.title !== undefined ? data.title : config.title;\n\n\t\t\tthis.title.setLabel( title ).setTitle( title );\n\t\t\tthis.actions.add( this.getActionWidgets( actions ) );\n\n\t\t\tthis.$element.on( 'keydown', this.onDialogKeyDownHandler );\n\t\t}, this );\n};\n\n/**\n * @inheritdoc\n */\nOO.ui.Dialog.prototype.getTeardownProcess = function ( data ) {\n\t// Parent method\n\treturn OO.ui.Dialog.parent.prototype.getTeardownProcess.call( this, data )\n\t\t.first( function () {\n\t\t\tthis.$element.off( 'keydown', this.onDialogKeyDownHandler );\n\n\t\t\tthis.actions.clear();\n\t\t\tthis.currentAction = null;\n\t\t}, this );\n};\n\n/**\n * @inheritdoc\n */\nOO.ui.Dialog.prototype.initialize = function () {\n\tvar titleId;\n\n\t// Parent method\n\tOO.ui.Dialog.parent.prototype.initialize.call( this );\n\n\ttitleId = OO.ui.generateElementId();\n\n\t// Properties\n\tthis.title = new OO.ui.LabelWidget( {\n\t\tid: titleId\n\t} );\n\n\t// Initialization\n\tthis.$content.addClass( 'oo-ui-dialog-content' );\n\tthis.$element.attr( 'aria-labelledby', titleId );\n\tthis.setPendingElement( this.$head );\n};\n\n/**\n * Get action widgets from a list of configs\n *\n * @param {Object[]} actions Action widget configs\n * @return {OO.ui.ActionWidget[]} Action widgets\n */\nOO.ui.Dialog.prototype.getActionWidgets = function ( actions ) {\n\tvar i, len, widgets = [];\n\tfor ( i = 0, len = actions.length; i < len; i++ ) {\n\t\twidgets.push(\n\t\t\tnew OO.ui.ActionWidget( actions[ i ] )\n\t\t);\n\t}\n\treturn widgets;\n};\n\n/**\n * Attach action actions.\n *\n * @protected\n */\nOO.ui.Dialog.prototype.attachActions = function () {\n\t// Remember the list of potentially attached actions\n\tthis.attachedActions = this.actions.get();\n};\n\n/**\n * Detach action actions.\n *\n * @protected\n * @chainable\n */\nOO.ui.Dialog.prototype.detachActions = function () {\n\tvar i, len;\n\n\t// Detach all actions that may have been previously attached\n\tfor ( i = 0, len = this.attachedActions.length; i < len; i++ ) {\n\t\tthis.attachedActions[ i ].$element.detach();\n\t}\n\tthis.attachedActions = [];\n};\n\n/**\n * Execute an action.\n *\n * @param {string} action Symbolic name of action to execute\n * @return {jQuery.Promise} Promise resolved when action completes, rejected if it fails\n */\nOO.ui.Dialog.prototype.executeAction = function ( action ) {\n\tthis.pushPending();\n\tthis.currentAction = action;\n\treturn this.getActionProcess( action ).execute()\n\t\t.always( this.popPending.bind( this ) );\n};\n\n/**\n * MessageDialogs display a confirmation or alert message. By default, the rendered dialog box\n * consists of a header that contains the dialog title, a body with the message, and a footer that\n * contains any {@link OO.ui.ActionWidget action widgets}. The MessageDialog class is the only type\n * of {@link OO.ui.Dialog dialog} that is usually instantiated directly.\n *\n * There are two basic types of message dialogs, confirmation and alert:\n *\n * - **confirmation**: the dialog title describes what a progressive action will do and the message provides\n *  more details about the consequences.\n * - **alert**: the dialog title describes which event occurred and the message provides more information\n *  about why the event occurred.\n *\n * The MessageDialog class specifies two actions: ‘accept’, the primary\n * action (e.g., ‘ok’) and ‘reject,’ the safe action (e.g., ‘cancel’). Both will close the window,\n * passing along the selected action.\n *\n * For more information and examples, please see the [OOjs UI documentation on MediaWiki][1].\n *\n *     @example\n *     // Example: Creating and opening a message dialog window.\n *     var messageDialog = new OO.ui.MessageDialog();\n *\n *     // Create and append a window manager.\n *     var windowManager = new OO.ui.WindowManager();\n *     $( 'body' ).append( windowManager.$element );\n *     windowManager.addWindows( [ messageDialog ] );\n *     // Open the window.\n *     windowManager.openWindow( messageDialog, {\n *         title: 'Basic message dialog',\n *         message: 'This is the message'\n *     } );\n *\n * [1]: https://www.mediawiki.org/wiki/OOjs_UI/Windows/Message_Dialogs\n *\n * @class\n * @extends OO.ui.Dialog\n *\n * @constructor\n * @param {Object} [config] Configuration options\n */\nOO.ui.MessageDialog = function OoUiMessageDialog( config ) {\n\t// Parent constructor\n\tOO.ui.MessageDialog.parent.call( this, config );\n\n\t// Properties\n\tthis.verticalActionLayout = null;\n\n\t// Initialization\n\tthis.$element.addClass( 'oo-ui-messageDialog' );\n};\n\n/* Setup */\n\nOO.inheritClass( OO.ui.MessageDialog, OO.ui.Dialog );\n\n/* Static Properties */\n\n/**\n * @static\n * @inheritdoc\n */\nOO.ui.MessageDialog.static.name = 'message';\n\n/**\n * @static\n * @inheritdoc\n */\nOO.ui.MessageDialog.static.size = 'small';\n\n/**\n * @static\n * @deprecated since v0.18.4 as default; TODO: Remove\n */\nOO.ui.MessageDialog.static.verbose = true;\n\n/**\n * Dialog title.\n *\n * The title of a confirmation dialog describes what a progressive action will do. The\n * title of an alert dialog describes which event occurred.\n *\n * @static\n * @inheritable\n * @property {jQuery|string|Function|null}\n */\nOO.ui.MessageDialog.static.title = null;\n\n/**\n * The message displayed in the dialog body.\n *\n * A confirmation message describes the consequences of a progressive action. An alert\n * message describes why an event occurred.\n *\n * @static\n * @inheritable\n * @property {jQuery|string|Function|null}\n */\nOO.ui.MessageDialog.static.message = null;\n\n/**\n * @static\n * @inheritdoc\n */\nOO.ui.MessageDialog.static.actions = [\n\t// Note that OO.ui.alert() and OO.ui.confirm() rely on these.\n\t{ action: 'accept', label: OO.ui.deferMsg( 'ooui-dialog-message-accept' ), flags: 'primary' },\n\t{ action: 'reject', label: OO.ui.deferMsg( 'ooui-dialog-message-reject' ), flags: 'safe' }\n];\n\n/* Methods */\n\n/**\n * @inheritdoc\n */\nOO.ui.MessageDialog.prototype.setManager = function ( manager ) {\n\tOO.ui.MessageDialog.parent.prototype.setManager.call( this, manager );\n\n\t// Events\n\tthis.manager.connect( this, {\n\t\tresize: 'onResize'\n\t} );\n\n\treturn this;\n};\n\n/**\n * Handle window resized events.\n *\n * @private\n */\nOO.ui.MessageDialog.prototype.onResize = function () {\n\tvar dialog = this;\n\tdialog.fitActions();\n\t// Wait for CSS transition to finish and do it again :(\n\tsetTimeout( function () {\n\t\tdialog.fitActions();\n\t}, 300 );\n};\n\n/**\n * Toggle action layout between vertical and horizontal.\n *\n * @private\n * @param {boolean} [value] Layout actions vertically, omit to toggle\n * @chainable\n */\nOO.ui.MessageDialog.prototype.toggleVerticalActionLayout = function ( value ) {\n\tvalue = value === undefined ? !this.verticalActionLayout : !!value;\n\n\tif ( value !== this.verticalActionLayout ) {\n\t\tthis.verticalActionLayout = value;\n\t\tthis.$actions\n\t\t\t.toggleClass( 'oo-ui-messageDialog-actions-vertical', value )\n\t\t\t.toggleClass( 'oo-ui-messageDialog-actions-horizontal', !value );\n\t}\n\n\treturn this;\n};\n\n/**\n * @inheritdoc\n */\nOO.ui.MessageDialog.prototype.getActionProcess = function ( action ) {\n\tif ( action ) {\n\t\treturn new OO.ui.Process( function () {\n\t\t\tthis.close( { action: action } );\n\t\t}, this );\n\t}\n\treturn OO.ui.MessageDialog.parent.prototype.getActionProcess.call( this, action );\n};\n\n/**\n * @inheritdoc\n *\n * @param {Object} [data] Dialog opening data\n * @param {jQuery|string|Function|null} [data.title] Description of the action being confirmed\n * @param {jQuery|string|Function|null} [data.message] Description of the action's consequence\n * @param {Object[]} [data.actions] List of OO.ui.ActionOptionWidget configuration options for each\n *   action item\n */\nOO.ui.MessageDialog.prototype.getSetupProcess = function ( data ) {\n\tdata = data || {};\n\n\t// Parent method\n\treturn OO.ui.MessageDialog.parent.prototype.getSetupProcess.call( this, data )\n\t\t.next( function () {\n\t\t\tthis.title.setLabel(\n\t\t\t\tdata.title !== undefined ? data.title : this.constructor.static.title\n\t\t\t);\n\t\t\tthis.message.setLabel(\n\t\t\t\tdata.message !== undefined ? data.message : this.constructor.static.message\n\t\t\t);\n\t\t\t// @deprecated since v0.18.4 as default; TODO: Remove and make default instead.\n\t\t\tthis.message.$element.toggleClass(\n\t\t\t\t'oo-ui-messageDialog-message-verbose',\n\t\t\t\tdata.verbose !== undefined ? data.verbose : this.constructor.static.verbose\n\t\t\t);\n\t\t}, this );\n};\n\n/**\n * @inheritdoc\n */\nOO.ui.MessageDialog.prototype.getReadyProcess = function ( data ) {\n\tdata = data || {};\n\n\t// Parent method\n\treturn OO.ui.MessageDialog.parent.prototype.getReadyProcess.call( this, data )\n\t\t.next( function () {\n\t\t\t// Focus the primary action button\n\t\t\tvar actions = this.actions.get();\n\t\t\tactions = actions.filter( function ( action ) {\n\t\t\t\treturn action.getFlags().indexOf( 'primary' ) > -1;\n\t\t\t} );\n\t\t\tif ( actions.length > 0 ) {\n\t\t\t\tactions[ 0 ].$button.focus();\n\t\t\t}\n\t\t}, this );\n};\n\n/**\n * @inheritdoc\n */\nOO.ui.MessageDialog.prototype.getBodyHeight = function () {\n\tvar bodyHeight, oldOverflow,\n\t\t$scrollable = this.container.$element;\n\n\toldOverflow = $scrollable[ 0 ].style.overflow;\n\t$scrollable[ 0 ].style.overflow = 'hidden';\n\n\tOO.ui.Element.static.reconsiderScrollbars( $scrollable[ 0 ] );\n\n\tbodyHeight = this.text.$element.outerHeight( true );\n\t$scrollable[ 0 ].style.overflow = oldOverflow;\n\n\treturn bodyHeight;\n};\n\n/**\n * @inheritdoc\n */\nOO.ui.MessageDialog.prototype.setDimensions = function ( dim ) {\n\tvar $scrollable = this.container.$element;\n\tOO.ui.MessageDialog.parent.prototype.setDimensions.call( this, dim );\n\n\t// Twiddle the overflow property, otherwise an unnecessary scrollbar will be produced.\n\t// Need to do it after transition completes (250ms), add 50ms just in case.\n\tsetTimeout( function () {\n\t\tvar oldOverflow = $scrollable[ 0 ].style.overflow,\n\t\t\tactiveElement = document.activeElement;\n\n\t\t$scrollable[ 0 ].style.overflow = 'hidden';\n\n\t\tOO.ui.Element.static.reconsiderScrollbars( $scrollable[ 0 ] );\n\n\t\t// Check reconsiderScrollbars didn't destroy our focus, as we\n\t\t// are doing this after the ready process.\n\t\tif ( activeElement && activeElement !== document.activeElement && activeElement.focus ) {\n\t\t\tactiveElement.focus();\n\t\t}\n\n\t\t$scrollable[ 0 ].style.overflow = oldOverflow;\n\t}, 300 );\n\n\treturn this;\n};\n\n/**\n * @inheritdoc\n */\nOO.ui.MessageDialog.prototype.initialize = function () {\n\t// Parent method\n\tOO.ui.MessageDialog.parent.prototype.initialize.call( this );\n\n\t// Properties\n\tthis.$actions = $( '<div>' );\n\tthis.container = new OO.ui.PanelLayout( {\n\t\tscrollable: true, classes: [ 'oo-ui-messageDialog-container' ]\n\t} );\n\tthis.text = new OO.ui.PanelLayout( {\n\t\tpadded: true, expanded: false, classes: [ 'oo-ui-messageDialog-text' ]\n\t} );\n\tthis.message = new OO.ui.LabelWidget( {\n\t\tclasses: [ 'oo-ui-messageDialog-message' ]\n\t} );\n\n\t// Initialization\n\tthis.title.$element.addClass( 'oo-ui-messageDialog-title' );\n\tthis.$content.addClass( 'oo-ui-messageDialog-content' );\n\tthis.container.$element.append( this.text.$element );\n\tthis.text.$element.append( this.title.$element, this.message.$element );\n\tthis.$body.append( this.container.$element );\n\tthis.$actions.addClass( 'oo-ui-messageDialog-actions' );\n\tthis.$foot.append( this.$actions );\n};\n\n/**\n * @inheritdoc\n */\nOO.ui.MessageDialog.prototype.attachActions = function () {\n\tvar i, len, other, special, others;\n\n\t// Parent method\n\tOO.ui.MessageDialog.parent.prototype.attachActions.call( this );\n\n\tspecial = this.actions.getSpecial();\n\tothers = this.actions.getOthers();\n\n\tif ( special.safe ) {\n\t\tthis.$actions.append( special.safe.$element );\n\t\tspecial.safe.toggleFramed( false );\n\t}\n\tif ( others.length ) {\n\t\tfor ( i = 0, len = others.length; i < len; i++ ) {\n\t\t\tother = others[ i ];\n\t\t\tthis.$actions.append( other.$element );\n\t\t\tother.toggleFramed( false );\n\t\t}\n\t}\n\tif ( special.primary ) {\n\t\tthis.$actions.append( special.primary.$element );\n\t\tspecial.primary.toggleFramed( false );\n\t}\n\n\tif ( !this.isOpening() ) {\n\t\t// If the dialog is currently opening, this will be called automatically soon.\n\t\t// This also calls #fitActions.\n\t\tthis.updateSize();\n\t}\n};\n\n/**\n * Fit action actions into columns or rows.\n *\n * Columns will be used if all labels can fit without overflow, otherwise rows will be used.\n *\n * @private\n */\nOO.ui.MessageDialog.prototype.fitActions = function () {\n\tvar i, len, action,\n\t\tprevious = this.verticalActionLayout,\n\t\tactions = this.actions.get();\n\n\t// Detect clipping\n\tthis.toggleVerticalActionLayout( false );\n\tfor ( i = 0, len = actions.length; i < len; i++ ) {\n\t\taction = actions[ i ];\n\t\tif ( action.$element.innerWidth() < action.$label.outerWidth( true ) ) {\n\t\t\tthis.toggleVerticalActionLayout( true );\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Move the body out of the way of the foot\n\tthis.$body.css( 'bottom', this.$foot.outerHeight( true ) );\n\n\tif ( this.verticalActionLayout !== previous ) {\n\t\t// We changed the layout, window height might need to be updated.\n\t\tthis.updateSize();\n\t}\n};\n\n/**\n * ProcessDialog windows encapsulate a {@link OO.ui.Process process} and all of the code necessary\n * to complete it. If the process terminates with an error, a customizable {@link OO.ui.Error error\n * interface} alerts users to the trouble, permitting the user to dismiss the error and try again when\n * relevant. The ProcessDialog class is always extended and customized with the actions and content\n * required for each process.\n *\n * The process dialog box consists of a header that visually represents the ‘working’ state of long\n * processes with an animation. The header contains the dialog title as well as\n * two {@link OO.ui.ActionWidget action widgets}:  a ‘safe’ action on the left (e.g., ‘Cancel’) and\n * a ‘primary’ action on the right (e.g., ‘Done’).\n *\n * Like other windows, the process dialog is managed by a {@link OO.ui.WindowManager window manager}.\n * Please see the [OOjs UI documentation on MediaWiki][1] for more information and examples.\n *\n *     @example\n *     // Example: Creating and opening a process dialog window.\n *     function MyProcessDialog( config ) {\n *         MyProcessDialog.parent.call( this, config );\n *     }\n *     OO.inheritClass( MyProcessDialog, OO.ui.ProcessDialog );\n *\n *     MyProcessDialog.static.name = 'myProcessDialog';\n *     MyProcessDialog.static.title = 'Process dialog';\n *     MyProcessDialog.static.actions = [\n *         { action: 'save', label: 'Done', flags: 'primary' },\n *         { label: 'Cancel', flags: 'safe' }\n *     ];\n *\n *     MyProcessDialog.prototype.initialize = function () {\n *         MyProcessDialog.parent.prototype.initialize.apply( this, arguments );\n *         this.content = new OO.ui.PanelLayout( { padded: true, expanded: false } );\n *         this.content.$element.append( '<p>This is a process dialog window. The header contains the title and two buttons: \\'Cancel\\' (a safe action) on the left and \\'Done\\' (a primary action)  on the right.</p>' );\n *         this.$body.append( this.content.$element );\n *     };\n *     MyProcessDialog.prototype.getActionProcess = function ( action ) {\n *         var dialog = this;\n *         if ( action ) {\n *             return new OO.ui.Process( function () {\n *                 dialog.close( { action: action } );\n *             } );\n *         }\n *         return MyProcessDialog.parent.prototype.getActionProcess.call( this, action );\n *     };\n *\n *     var windowManager = new OO.ui.WindowManager();\n *     $( 'body' ).append( windowManager.$element );\n *\n *     var dialog = new MyProcessDialog();\n *     windowManager.addWindows( [ dialog ] );\n *     windowManager.openWindow( dialog );\n *\n * [1]: https://www.mediawiki.org/wiki/OOjs_UI/Windows/Process_Dialogs\n *\n * @abstract\n * @class\n * @extends OO.ui.Dialog\n *\n * @constructor\n * @param {Object} [config] Configuration options\n */\nOO.ui.ProcessDialog = function OoUiProcessDialog( config ) {\n\t// Parent constructor\n\tOO.ui.ProcessDialog.parent.call( this, config );\n\n\t// Properties\n\tthis.fitOnOpen = false;\n\n\t// Initialization\n\tthis.$element.addClass( 'oo-ui-processDialog' );\n};\n\n/* Setup */\n\nOO.inheritClass( OO.ui.ProcessDialog, OO.ui.Dialog );\n\n/* Methods */\n\n/**\n * Handle dismiss button click events.\n *\n * Hides errors.\n *\n * @private\n */\nOO.ui.ProcessDialog.prototype.onDismissErrorButtonClick = function () {\n\tthis.hideErrors();\n};\n\n/**\n * Handle retry button click events.\n *\n * Hides errors and then tries again.\n *\n * @private\n */\nOO.ui.ProcessDialog.prototype.onRetryButtonClick = function () {\n\tthis.hideErrors();\n\tthis.executeAction( this.currentAction );\n};\n\n/**\n * @inheritdoc\n */\nOO.ui.ProcessDialog.prototype.initialize = function () {\n\t// Parent method\n\tOO.ui.ProcessDialog.parent.prototype.initialize.call( this );\n\n\t// Properties\n\tthis.$navigation = $( '<div>' );\n\tthis.$location = $( '<div>' );\n\tthis.$safeActions = $( '<div>' );\n\tthis.$primaryActions = $( '<div>' );\n\tthis.$otherActions = $( '<div>' );\n\tthis.dismissButton = new OO.ui.ButtonWidget( {\n\t\tlabel: OO.ui.msg( 'ooui-dialog-process-dismiss' )\n\t} );\n\tthis.retryButton = new OO.ui.ButtonWidget();\n\tthis.$errors = $( '<div>' );\n\tthis.$errorsTitle = $( '<div>' );\n\n\t// Events\n\tthis.dismissButton.connect( this, { click: 'onDismissErrorButtonClick' } );\n\tthis.retryButton.connect( this, { click: 'onRetryButtonClick' } );\n\n\t// Initialization\n\tthis.title.$element.addClass( 'oo-ui-processDialog-title' );\n\tthis.$location\n\t\t.append( this.title.$element )\n\t\t.addClass( 'oo-ui-processDialog-location' );\n\tthis.$safeActions.addClass( 'oo-ui-processDialog-actions-safe' );\n\tthis.$primaryActions.addClass( 'oo-ui-processDialog-actions-primary' );\n\tthis.$otherActions.addClass( 'oo-ui-processDialog-actions-other' );\n\tthis.$errorsTitle\n\t\t.addClass( 'oo-ui-processDialog-errors-title' )\n\t\t.text( OO.ui.msg( 'ooui-dialog-process-error' ) );\n\tthis.$errors\n\t\t.addClass( 'oo-ui-processDialog-errors oo-ui-element-hidden' )\n\t\t.append( this.$errorsTitle, this.dismissButton.$element, this.retryButton.$element );\n\tthis.$content\n\t\t.addClass( 'oo-ui-processDialog-content' )\n\t\t.append( this.$errors );\n\tthis.$navigation\n\t\t.addClass( 'oo-ui-processDialog-navigation' )\n\t\t// Note: Order of appends below is important. These are in the order\n\t\t// we want tab to go through them. Display-order is handled entirely\n\t\t// by CSS absolute-positioning. As such, primary actions like \"done\"\n\t\t// should go first.\n\t\t.append( this.$primaryActions, this.$location, this.$safeActions );\n\tthis.$head.append( this.$navigation );\n\tthis.$foot.append( this.$otherActions );\n};\n\n/**\n * @inheritdoc\n */\nOO.ui.ProcessDialog.prototype.getActionWidgets = function ( actions ) {\n\tvar i, len, config,\n\t\tisMobile = OO.ui.isMobile(),\n\t\twidgets = [];\n\n\tfor ( i = 0, len = actions.length; i < len; i++ ) {\n\t\tconfig = $.extend( { framed: !OO.ui.isMobile() }, actions[ i ] );\n\t\tif ( isMobile &&\n\t\t\t( config.flags === 'back' || ( Array.isArray( config.flags ) && config.flags.indexOf( 'back' ) !== -1 ) )\n\t\t) {\n\t\t\t$.extend( config, {\n\t\t\t\ticon: 'previous',\n\t\t\t\tlabel: ''\n\t\t\t} );\n\t\t}\n\t\twidgets.push(\n\t\t\tnew OO.ui.ActionWidget( config )\n\t\t);\n\t}\n\treturn widgets;\n};\n\n/**\n * @inheritdoc\n */\nOO.ui.ProcessDialog.prototype.attachActions = function () {\n\tvar i, len, other, special, others;\n\n\t// Parent method\n\tOO.ui.ProcessDialog.parent.prototype.attachActions.call( this );\n\n\tspecial = this.actions.getSpecial();\n\tothers = this.actions.getOthers();\n\tif ( special.primary ) {\n\t\tthis.$primaryActions.append( special.primary.$element );\n\t}\n\tfor ( i = 0, len = others.length; i < len; i++ ) {\n\t\tother = others[ i ];\n\t\tthis.$otherActions.append( other.$element );\n\t}\n\tif ( special.safe ) {\n\t\tthis.$safeActions.append( special.safe.$element );\n\t}\n\n\tthis.fitLabel();\n\tthis.$body.css( 'bottom', this.$foot.outerHeight( true ) );\n};\n\n/**\n * @inheritdoc\n */\nOO.ui.ProcessDialog.prototype.executeAction = function ( action ) {\n\tvar process = this;\n\treturn OO.ui.ProcessDialog.parent.prototype.executeAction.call( this, action )\n\t\t.fail( function ( errors ) {\n\t\t\tprocess.showErrors( errors || [] );\n\t\t} );\n};\n\n/**\n * @inheritdoc\n */\nOO.ui.ProcessDialog.prototype.setDimensions = function () {\n\t// Parent method\n\tOO.ui.ProcessDialog.parent.prototype.setDimensions.apply( this, arguments );\n\n\tthis.fitLabel();\n};\n\n/**\n * Fit label between actions.\n *\n * @private\n * @chainable\n */\nOO.ui.ProcessDialog.prototype.fitLabel = function () {\n\tvar safeWidth, primaryWidth, biggerWidth, labelWidth, navigationWidth, leftWidth, rightWidth,\n\t\tsize = this.getSizeProperties();\n\n\tif ( typeof size.width !== 'number' ) {\n\t\tif ( this.isOpened() ) {\n\t\t\tnavigationWidth = this.$head.width() - 20;\n\t\t} else if ( this.isOpening() ) {\n\t\t\tif ( !this.fitOnOpen ) {\n\t\t\t\t// Size is relative and the dialog isn't open yet, so wait.\n\t\t\t\tthis.manager.opening.done( this.fitLabel.bind( this ) );\n\t\t\t\tthis.fitOnOpen = true;\n\t\t\t}\n\t\t\treturn;\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t} else {\n\t\tnavigationWidth = size.width - 20;\n\t}\n\n\tsafeWidth = this.$safeActions.is( ':visible' ) ? this.$safeActions.width() : 0;\n\tprimaryWidth = this.$primaryActions.is( ':visible' ) ? this.$primaryActions.width() : 0;\n\tbiggerWidth = Math.max( safeWidth, primaryWidth );\n\n\tlabelWidth = this.title.$element.width();\n\n\tif ( 2 * biggerWidth + labelWidth < navigationWidth ) {\n\t\t// We have enough space to center the label\n\t\tleftWidth = rightWidth = biggerWidth;\n\t} else {\n\t\t// Let's hope we at least have enough space not to overlap, because we can't wrap the label…\n\t\tif ( this.getDir() === 'ltr' ) {\n\t\t\tleftWidth = safeWidth;\n\t\t\trightWidth = primaryWidth;\n\t\t} else {\n\t\t\tleftWidth = primaryWidth;\n\t\t\trightWidth = safeWidth;\n\t\t}\n\t}\n\n\tthis.$location.css( { paddingLeft: leftWidth, paddingRight: rightWidth } );\n\n\treturn this;\n};\n\n/**\n * Handle errors that occurred during accept or reject processes.\n *\n * @private\n * @param {OO.ui.Error[]|OO.ui.Error} errors Errors to be handled\n */\nOO.ui.ProcessDialog.prototype.showErrors = function ( errors ) {\n\tvar i, len, $item, actions,\n\t\titems = [],\n\t\tabilities = {},\n\t\trecoverable = true,\n\t\twarning = false;\n\n\tif ( errors instanceof OO.ui.Error ) {\n\t\terrors = [ errors ];\n\t}\n\n\tfor ( i = 0, len = errors.length; i < len; i++ ) {\n\t\tif ( !errors[ i ].isRecoverable() ) {\n\t\t\trecoverable = false;\n\t\t}\n\t\tif ( errors[ i ].isWarning() ) {\n\t\t\twarning = true;\n\t\t}\n\t\t$item = $( '<div>' )\n\t\t\t.addClass( 'oo-ui-processDialog-error' )\n\t\t\t.append( errors[ i ].getMessage() );\n\t\titems.push( $item[ 0 ] );\n\t}\n\tthis.$errorItems = $( items );\n\tif ( recoverable ) {\n\t\tabilities[ this.currentAction ] = true;\n\t\t// Copy the flags from the first matching action\n\t\tactions = this.actions.get( { actions: this.currentAction } );\n\t\tif ( actions.length ) {\n\t\t\tthis.retryButton.clearFlags().setFlags( actions[ 0 ].getFlags() );\n\t\t}\n\t} else {\n\t\tabilities[ this.currentAction ] = false;\n\t\tthis.actions.setAbilities( abilities );\n\t}\n\tif ( warning ) {\n\t\tthis.retryButton.setLabel( OO.ui.msg( 'ooui-dialog-process-continue' ) );\n\t} else {\n\t\tthis.retryButton.setLabel( OO.ui.msg( 'ooui-dialog-process-retry' ) );\n\t}\n\tthis.retryButton.toggle( recoverable );\n\tthis.$errorsTitle.after( this.$errorItems );\n\tthis.$errors.removeClass( 'oo-ui-element-hidden' ).scrollTop( 0 );\n};\n\n/**\n * Hide errors.\n *\n * @private\n */\nOO.ui.ProcessDialog.prototype.hideErrors = function () {\n\tthis.$errors.addClass( 'oo-ui-element-hidden' );\n\tif ( this.$errorItems ) {\n\t\tthis.$errorItems.remove();\n\t\tthis.$errorItems = null;\n\t}\n};\n\n/**\n * @inheritdoc\n */\nOO.ui.ProcessDialog.prototype.getTeardownProcess = function ( data ) {\n\t// Parent method\n\treturn OO.ui.ProcessDialog.parent.prototype.getTeardownProcess.call( this, data )\n\t\t.first( function () {\n\t\t\t// Make sure to hide errors\n\t\t\tthis.hideErrors();\n\t\t\tthis.fitOnOpen = false;\n\t\t}, this );\n};\n\n/**\n * @class OO.ui\n */\n\n/**\n * Lazy-initialize and return a global OO.ui.WindowManager instance, used by OO.ui.alert and\n * OO.ui.confirm.\n *\n * @private\n * @return {OO.ui.WindowManager}\n */\nOO.ui.getWindowManager = function () {\n\tif ( !OO.ui.windowManager ) {\n\t\tOO.ui.windowManager = new OO.ui.WindowManager();\n\t\t$( 'body' ).append( OO.ui.windowManager.$element );\n\t\tOO.ui.windowManager.addWindows( [ new OO.ui.MessageDialog() ] );\n\t}\n\treturn OO.ui.windowManager;\n};\n\n/**\n * Display a quick modal alert dialog, using a OO.ui.MessageDialog. While the dialog is open, the\n * rest of the page will be dimmed out and the user won't be able to interact with it. The dialog\n * has only one action button, labelled \"OK\", clicking it will simply close the dialog.\n *\n * A window manager is created automatically when this function is called for the first time.\n *\n *     @example\n *     OO.ui.alert( 'Something happened!' ).done( function () {\n *         console.log( 'User closed the dialog.' );\n *     } );\n *\n * @param {jQuery|string} text Message text to display\n * @param {Object} [options] Additional options, see OO.ui.MessageDialog#getSetupProcess\n * @return {jQuery.Promise} Promise resolved when the user closes the dialog\n */\nOO.ui.alert = function ( text, options ) {\n\treturn OO.ui.getWindowManager().openWindow( 'message', $.extend( {\n\t\tmessage: text,\n\t\tactions: [ OO.ui.MessageDialog.static.actions[ 0 ] ]\n\t}, options ) ).then( function ( opened ) {\n\t\treturn opened.then( function ( closing ) {\n\t\t\treturn closing.then( function () {\n\t\t\t\treturn $.Deferred().resolve();\n\t\t\t} );\n\t\t} );\n\t} );\n};\n\n/**\n * Display a quick modal confirmation dialog, using a OO.ui.MessageDialog. While the dialog is open,\n * the rest of the page will be dimmed out and the user won't be able to interact with it. The\n * dialog has two action buttons, one to confirm an operation (labelled \"OK\") and one to cancel it\n * (labelled \"Cancel\").\n *\n * A window manager is created automatically when this function is called for the first time.\n *\n *     @example\n *     OO.ui.confirm( 'Are you sure?' ).done( function ( confirmed ) {\n *         if ( confirmed ) {\n *             console.log( 'User clicked \"OK\"!' );\n *         } else {\n *             console.log( 'User clicked \"Cancel\" or closed the dialog.' );\n *         }\n *     } );\n *\n * @param {jQuery|string} text Message text to display\n * @param {Object} [options] Additional options, see OO.ui.MessageDialog#getSetupProcess\n * @return {jQuery.Promise} Promise resolved when the user closes the dialog. If the user chose to\n *  confirm, the promise will resolve to boolean `true`; otherwise, it will resolve to boolean\n *  `false`.\n */\nOO.ui.confirm = function ( text, options ) {\n\treturn OO.ui.getWindowManager().openWindow( 'message', $.extend( {\n\t\tmessage: text\n\t}, options ) ).then( function ( opened ) {\n\t\treturn opened.then( function ( closing ) {\n\t\t\treturn closing.then( function ( data ) {\n\t\t\t\treturn $.Deferred().resolve( !!( data && data.action === 'accept' ) );\n\t\t\t} );\n\t\t} );\n\t} );\n};\n\n/**\n * Display a quick modal prompt dialog, using a OO.ui.MessageDialog. While the dialog is open,\n * the rest of the page will be dimmed out and the user won't be able to interact with it. The\n * dialog has a text input widget and two action buttons, one to confirm an operation (labelled \"OK\")\n * and one to cancel it (labelled \"Cancel\").\n *\n * A window manager is created automatically when this function is called for the first time.\n *\n *     @example\n *     OO.ui.prompt( 'Choose a line to go to', { textInput: { placeholder: 'Line number' } } ).done( function ( result ) {\n *         if ( result !== null ) {\n *             console.log( 'User typed \"' + result + '\" then clicked \"OK\".' );\n *         } else {\n *             console.log( 'User clicked \"Cancel\" or closed the dialog.' );\n *         }\n *     } );\n *\n * @param {jQuery|string} text Message text to display\n * @param {Object} [options] Additional options, see OO.ui.MessageDialog#getSetupProcess\n * @param {Object} [options.textInput] Additional options for text input widget, see OO.ui.TextInputWidget\n * @return {jQuery.Promise} Promise resolved when the user closes the dialog. If the user chose to\n *  confirm, the promise will resolve with the value of the text input widget; otherwise, it will\n *  resolve to `null`.\n */\nOO.ui.prompt = function ( text, options ) {\n\tvar manager = OO.ui.getWindowManager(),\n\t\ttextInput = new OO.ui.TextInputWidget( ( options && options.textInput ) || {} ),\n\t\ttextField = new OO.ui.FieldLayout( textInput, {\n\t\t\talign: 'top',\n\t\t\tlabel: text\n\t\t} );\n\n\t// TODO: This is a little hacky, and could be done by extending MessageDialog instead.\n\n\treturn manager.openWindow( 'message', $.extend( {\n\t\tmessage: textField.$element\n\t}, options ) ).then( function ( opened ) {\n\t\t// After ready\n\t\ttextInput.on( 'enter', function () {\n\t\t\tmanager.getCurrentWindow().close( { action: 'accept' } );\n\t\t} );\n\t\ttextInput.focus();\n\t\treturn opened.then( function ( closing ) {\n\t\t\treturn closing.then( function ( data ) {\n\t\t\t\treturn $.Deferred().resolve( data && data.action === 'accept' ? textInput.getValue() : null );\n\t\t\t} );\n\t\t} );\n\t} );\n};\n\n}( OO ) );\n"]}